{
  "_args": [
    [
      {
        "raw": "handsontable@0.34.4",
        "scope": null,
        "escapedName": "handsontable",
        "name": "handsontable",
        "rawSpec": "0.34.4",
        "spec": "0.34.4",
        "type": "version"
      },
      "/home/vpn/angular_server/node_modules/angular-handsontable"
    ]
  ],
  "_from": "handsontable@0.34.4",
  "_id": "handsontable@0.34.4",
  "_inCache": true,
  "_location": "/handsontable",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/handsontable-0.34.4.tgz_1505294412131_0.7368217937182635"
  },
  "_npmUser": {
    "name": "jansiegel",
    "email": "js.ziggle@gmail.com"
  },
  "_npmVersion": "5.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "handsontable@0.34.4",
    "scope": null,
    "escapedName": "handsontable",
    "name": "handsontable",
    "rawSpec": "0.34.4",
    "spec": "0.34.4",
    "type": "version"
  },
  "_requiredBy": [
    "/angular-handsontable"
  ],
  "_resolved": "https://registry.npmjs.org/handsontable/-/handsontable-0.34.4.tgz",
  "_shasum": "c3d1d9730aac6d993fd49b8282447e378de952d4",
  "_shrinkwrap": null,
  "_spec": "handsontable@0.34.4",
  "_where": "/home/vpn/angular_server/node_modules/angular-handsontable",
  "author": {
    "name": "Handsoncode",
    "email": "hello@handsontable.com"
  },
  "browser": "dist/handsontable.js",
  "bugs": {
    "url": "https://github.com/handsontable/handsontable/issues"
  },
  "dependencies": {
    "moment": "2.18.1",
    "numbro": "1.11.0",
    "pikaday": "1.5.1"
  },
  "description": "Spreadsheet-like data grid editor that provides copy/paste functionality compatible with Excel/Google Docs",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.25.0",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^19.0.0",
    "babel-loader": "^7.1.1",
    "babel-plugin-forbidden-imports": "^0.1.2",
    "babel-plugin-transform-inline-environment-variables": "^0.2.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-require-ignore": "^0.1.1",
    "babel-polyfill": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "babel-register": "^6.24.1",
    "check-es3-syntax-cli": "^0.2.0",
    "concurrently": "^3.5.0",
    "copy-webpack-plugin": "^4.0.1",
    "cross-env": "^5.0.1",
    "css-loader": "^0.28.4",
    "env-cmd": "^5.1.0",
    "eslint": "^4.3.0",
    "eslint-config-airbnb-base": "^11.3.1",
    "eslint-plugin-import": "^2.7.0",
    "extract-text-webpack-plugin": "^3.0.0",
    "glob": "^7.1.2",
    "grunt": "^1.0.1",
    "grunt-lib-phantomjs": "^1.1.0",
    "html-webpack-plugin": "^2.30.1",
    "jasmine-co": "^1.2.2",
    "jasmine-core": "2.5.2",
    "jasmine-terminal-reporter": "^1.0.3",
    "jest": "^19.0.0",
    "loader-utils": "^1.1.0",
    "optimize-css-assets-webpack-plugin": "^3.1.1",
    "progress-bar-webpack-plugin": "^1.10.0",
    "request": "^2.81.0",
    "rimraf": "^2.5.4",
    "spawn-command": "0.0.2",
    "style-loader": "^0.18.2",
    "supports-color": "^4.2.1",
    "tree-kill": "^1.1.0",
    "typescript": "^2.4.2",
    "webpack": "^3.5.6"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-hQOrm3Py840dSqX9BoJUovtx4dRjgdmpUr7KkAoTtwfYCySwAxI4kEWBMfc22l3rimPPEoTKma5K6DS0lfijTQ==",
    "shasum": "c3d1d9730aac6d993fd49b8282447e378de952d4",
    "tarball": "https://registry.npmjs.org/handsontable/-/handsontable-0.34.4.tgz"
  },
  "gitHead": "7362ea024667937dfabf626bd73dce4e2d8cf2de",
  "homepage": "http://handsontable.com/",
  "jest": {
    "roots": [
      "./test/unit",
      "./src/plugins"
    ],
    "testRegex": "(\\.spec\\.js)|(\\.unit\\.js)$",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/test/unit/index.js"
    ],
    "moduleNameMapper": {
      "^handsontable(.*)$": "<rootDir>/src$1",
      "^walkontable(.*)$": "<rootDir>/src/3rdparty/walkontable/src$1",
      "\\.css$": "<rootDir>/test/__mocks__/styleMock.js"
    }
  },
  "jsnext:main": "es/index.js",
  "keywords": [
    "data",
    "grid",
    "table",
    "editor",
    "grid-editor",
    "data-grid",
    "data-table",
    "spreadsheet",
    "excel",
    "tabular-data",
    "edit-cell",
    "editable-table",
    "data-spreadsheet"
  ],
  "license": "MIT",
  "main": "commonjs/index.js",
  "maintainers": [
    {
      "name": "budnix",
      "email": "budnix+npm@gmail.com"
    },
    {
      "name": "jansiegel",
      "email": "js.ziggle@gmail.com"
    }
  ],
  "module": "es/index.js",
  "name": "handsontable",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/handsontable/handsontable.git"
  },
  "scripts": {
    "build": "npm run build:commonjs && npm run build:es && npm run build:umd && npm run build:umd.min",
    "build:commonjs": "cross-env BABEL_ENV=commonjs_dist env-cmd ./hot.config.js babel src --out-dir commonjs",
    "build:es": "cross-env BABEL_ENV=es env-cmd ./hot.config.js babel src --out-dir es",
    "build:umd": "cross-env BABEL_ENV=commonjs NODE_ENV=development env-cmd ./hot.config.js webpack --hide-modules ./src/index.js",
    "build:umd.min": "cross-env BABEL_ENV=commonjs NODE_ENV=production env-cmd ./hot.config.js webpack --hide-modules ./src/index.js",
    "build:walkontable": "cross-env BABEL_ENV=commonjs NODE_ENV=walkontable env-cmd ./hot.config.js webpack --hide-modules ./src/3rdparty/walkontable/src/index.js",
    "clean": "rimraf commonjs es coverage",
    "lint": "eslint --rule \"no-restricted-globals: 0\" test && eslint --rule \"no-restricted-globals: 0\" --ext .unit.js --ext .e2e.js src/ && eslint --ignore-pattern \"src/plugins/**/test/**\" src/",
    "prepublish": "npm run clean && npm run build:commonjs && npm run build:es",
    "test": "npm run lint && npm run test:unit && npm run test:types && npm run test:walkontable && npm run test:e2e && npm run test:production",
    "test:e2e": "npm run build:umd && npm run test:e2e.dump && grunt test-handsontable",
    "test:e2e.dump": "cross-env BABEL_ENV=commonjs_e2e NODE_ENV=test-e2e env-cmd ./hot.config.js webpack --hide-modules --env.testPathPattern=$npm_config_testPathPattern helpers=./test/helpers/index.js e2e=./test/e2e/index.js",
    "test:e2e.watch": "node ./.config/bin/trigger-on-stdout-change.js \"concurrently --raw --kill-others 'npm run build:umd -- --watch' 'npm run test:e2e.dump --testPathPattern=$npm_config_testPathPattern -- --watch'\" \"grunt test-handsontable\"",
    "test:production": "npm run build:umd.min && npm run test:production.dump && grunt test-handsontable",
    "test:production.dump": "cross-env BABEL_ENV=commonjs_e2e NODE_ENV=test-production env-cmd ./hot.config.js webpack --hide-modules helpers=./test/helpers/index.js e2e=./test/e2e/index.js",
    "test:types": "tsc -p ./test/types",
    "test:unit": "cross-env npm_config_testPathPattern=. BABEL_ENV=commonjs env-cmd ./hot.config.js jest --testPathPattern=$npm_config_testPathPattern --runInBand",
    "test:unit.dump": "cross-env BABEL_ENV=commonjs NODE_ENV=test-unit env-cmd ./hot.config.js webpack --hide-modules helpers=./test/helpers/index.js unit=./test/unit/index.js",
    "test:unit.watch": "cross-env BABEL_ENV=commonjs env-cmd ./hot.config.js jest --testPathPattern=$npm_config_testPathPattern --watch",
    "test:walkontable": "npm run build:walkontable && npm run test:walkontable.dump && grunt test-walkontable",
    "test:walkontable.dump": "cross-env BABEL_ENV=commonjs_e2e NODE_ENV=test-walkontable env-cmd ./hot.config.js webpack --hide-modules helpers=./src/3rdparty/walkontable/test/helpers/index.js specs=./src/3rdparty/walkontable/test/spec/index.js",
    "watch": "cross-env BABEL_ENV=commonjs NODE_ENV=watch env-cmd ./hot.config.js webpack --hide-modules --watch src/index.js"
  },
  "typings": "./handsontable.d.ts",
  "version": "0.34.4"
}
