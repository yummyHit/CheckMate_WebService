{"version":3,"sources":["../src/angularfire2.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,sBAAA,EAAwB,WAAA,EAAa,mBAAA,EAAoB,MAAO,aAAA,CAAc;AAEvF,OAAO,EAAc,cAAA,EAA6B,QAAA,EAAS,MAAO,eAAA,CAAgB;AAElF,IAAM,eAAA,GAAkB,IAAI,cAAA,CAAsB,iBAAE,CAAiB,CAAC;AAEtE,MAAM,CAAC,IAAM,mBAAA,GAAsB;IACjC,OAAO,EAAE,WAAA;IACT,UAAU,EAAE,mBAAA;IACZ,IAAI,EAAE,CAAE,sBAAA,EAAwB,eAAA,CAAgB;CACjD,CAAC;AAGF;IAAA;IAkBA,CAAC;IAjBQ,+BAAa,GAApB,UAAqB,MAAyB,EAAE,OAAgB;QAC9D,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,MAAM,EAAE;gBACrD,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE;aAChD;SACF,CAAA;IACH,CAAC;IASH,wBAAC;AAAD,CAlBA,AAkBC;;AARM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,SAAS,EAAE,CAAE,mBAAmB,CAAE;aACnC,EAAG,EAAE;CACL,CAAC;AAEK,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAGF,OANO,EAAE,WAAA,EAAa,eAAA,EAAiB,sBAAA,EAA0C,CAAE","file":"angularfire2.js","sourceRoot":"","sourcesContent":["import * as firebase from 'firebase/app';\nimport * as utils from './utils';\nimport { FirebaseAppConfigToken, FirebaseApp, _firebaseAppFactory } from './app/index';\nimport { FirebaseListFactoryOpts, FirebaseObjectFactoryOpts, FirebaseAppConfig } from './interfaces';\nimport { Injectable, InjectionToken, OpaqueToken, NgModule } from '@angular/core';\n\nconst FirebaseAppName = new InjectionToken<string>('FirebaseAppName');\n\nexport const FirebaseAppProvider = {\n  provide: FirebaseApp,\n  useFactory: _firebaseAppFactory,\n  deps: [ FirebaseAppConfigToken, FirebaseAppName ]\n};\n\n\nexport class AngularFireModule {\n  static initializeApp(config: FirebaseAppConfig, appName?: string) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [\n        { provide: FirebaseAppConfigToken, useValue: config },\n        { provide: FirebaseAppName, useValue: appName }\n      ]\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [ FirebaseAppProvider ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport { FirebaseApp, FirebaseAppName, FirebaseAppConfigToken, FirebaseAppConfig };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}