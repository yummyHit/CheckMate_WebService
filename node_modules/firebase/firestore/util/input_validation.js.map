{"version":3,"sources":["src/firestore/util/input_validation.ts"],"names":["validateExactNumberOfArgs","validateAtLeastNumberOfArgs","validateBetweenNumberOfArgs","validateNamedArrayAtLeastNumberOfElements","validateArgType","validateOptionalArgType","validateNamedType","validateNamedOptionalType","isPlainObject","valueDescription","tryGetCustomObjectType","validateDefined","validateOptionNames","invalidClassError","obj","functionName","args","numberOfArgs","length","INVALID_ARGUMENT","formatPlural","minNumberOfArgs","maxNumberOfArgs","value","name","minNumberOfElements","Array","type","position","argument","validateType","ordinal","undefined","optionName","inputName","input","description","Object","getPrototypeOf","prototype","substring","JSON","stringify","customObjectName","constructor","funcNameRegex","results","exec","toString","options","optionNames","forEach","key","_","indexOf","join","num","str"],"mappings":"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","file":"input_validation.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from './assert';\nimport { Code, FirestoreError } from './error';\nimport { AnyJs } from './misc';\nimport * as obj from './obj';\n\n/**\n * Validates the invocation of functionName has the exact number of arguments.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateExactNumberOfArgs('myFunction', arguments, 2);\n */\nexport function validateExactNumberOfArgs(\n  functionName: string,\n  args: IArguments,\n  numberOfArgs: number\n): void {\n  if (args.length !== numberOfArgs) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires ` +\n        formatPlural(numberOfArgs, 'argument') +\n        ', but was called with ' +\n        formatPlural(args.length, 'argument') +\n        '.'\n    );\n  }\n}\n\n/**\n * Validates the invocation of functionName has at least the provided number of\n * arguments (but can have many more).\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateAtLeastNumberOfArgs('myFunction', arguments, 2);\n */\nexport function validateAtLeastNumberOfArgs(\n  functionName: string,\n  args: IArguments,\n  minNumberOfArgs: number\n): void {\n  if (args.length < minNumberOfArgs) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires at least ` +\n        formatPlural(minNumberOfArgs, 'argument') +\n        ', but was called with ' +\n        formatPlural(args.length, 'argument') +\n        '.'\n    );\n  }\n}\n\n/**\n * Validates the invocation of functionName has number of arguments between\n * the values provided.\n *\n * Forward the magic \"arguments\" variable as second parameter on which the\n * parameter validation is performed:\n * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);\n */\nexport function validateBetweenNumberOfArgs(\n  functionName: string,\n  args: IArguments,\n  minNumberOfArgs: number,\n  maxNumberOfArgs: number\n): void {\n  if (args.length < minNumberOfArgs || args.length > maxNumberOfArgs) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires between ${minNumberOfArgs} and ` +\n        `${maxNumberOfArgs} arguments, but was called with ` +\n        formatPlural(args.length, 'argument') +\n        '.'\n    );\n  }\n}\n\n/**\n * Validates the provided argument is an array and has as least the expected\n * number of elements.\n */\nexport function validateNamedArrayAtLeastNumberOfElements<T>(\n  functionName: string,\n  value: T[],\n  name: string,\n  minNumberOfElements: number\n): void {\n  if (!(value instanceof Array) || value.length < minNumberOfElements) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires its ${name} argument to be an ` +\n        'array with at least ' +\n        `${formatPlural(minNumberOfElements, 'element')}.`\n    );\n  }\n}\n\n/**\n * Validates the provided positional argument has the native JavaScript type\n * using typeof checks.\n */\nexport function validateArgType(\n  functionName: string,\n  type: string,\n  position: number,\n  argument: AnyJs\n): void {\n  validateType(functionName, type, `${ordinal(position)} argument`, argument);\n}\n\n/**\n * Validates the provided argument has the native JavaScript type using\n * typeof checks or is undefined.\n */\nexport function validateOptionalArgType(\n  functionName: string,\n  type: string,\n  position: number,\n  argument: AnyJs\n): void {\n  if (argument !== undefined) {\n    validateArgType(functionName, type, position, argument);\n  }\n}\n\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks.\n */\nexport function validateNamedType(\n  functionName: string,\n  type: string,\n  optionName: string,\n  argument: AnyJs\n) {\n  validateType(functionName, type, `${optionName} option`, argument);\n}\n\n/**\n * Validates the provided named option has the native JavaScript type using\n * typeof checks or is undefined.\n */\nexport function validateNamedOptionalType(\n  functionName: string,\n  type: string,\n  optionName: string,\n  argument: AnyJs\n) {\n  if (argument !== undefined) {\n    validateNamedType(functionName, type, optionName, argument);\n  }\n}\n\n/** Helper to validate the type of a provided input. */\nfunction validateType(\n  functionName: string,\n  type: string,\n  inputName: string,\n  input: AnyJs\n) {\n  if (typeof input !== type || (type === 'object' && !isPlainObject(input))) {\n    const description = valueDescription(input);\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires its ${inputName} ` +\n        `to be of type ${type}, but it was: ${description}`\n    );\n  }\n}\n\n/**\n * Returns true iff it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nexport function isPlainObject(input: AnyJs) {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    Object.getPrototypeOf(input) === Object.prototype\n  );\n}\n\n/** Returns a string describing the type / value of the provided input. */\nexport function valueDescription(input: AnyJs) {\n  if (input === undefined) {\n    return 'undefined';\n  } else if (input === null) {\n    return 'null';\n  } else if (typeof input === 'string') {\n    if (input.length > 20) {\n      input = `${input.substring(0, 20)}...`;\n    }\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return '' + input;\n  } else if (typeof input === 'object') {\n    if (input instanceof Array) {\n      return 'an array';\n    } else {\n      const customObjectName = tryGetCustomObjectType(input);\n      if (customObjectName) {\n        return `a custom ${customObjectName} object`;\n      } else {\n        return 'an object';\n      }\n    }\n  } else if (typeof input === 'function') {\n    return 'a function';\n  } else {\n    return fail('Unknown wrong type: ' + typeof input);\n  }\n}\n\n/** Hacky method to try to get the constructor name for an object. */\nexport function tryGetCustomObjectType(input: object): string | null {\n  if (input.constructor) {\n    const funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\n    const results = funcNameRegex.exec(input.constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    }\n  }\n  return null;\n}\n\n/** Validates the provided argument is defined. */\nexport function validateDefined(\n  functionName: string,\n  position: number,\n  argument: AnyJs\n): void {\n  if (argument === undefined) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires a valid ${ordinal(position)} ` +\n        `argument, but it was undefined.`\n    );\n  }\n}\n\n/**\n * Validates the provided positional argument is an object, and its keys and\n * values match the expected keys and types provided in optionTypes.\n */\nexport function validateOptionNames(\n  functionName: string,\n  options: object,\n  optionNames: string[]\n) {\n  obj.forEach(options as obj.Dict<AnyJs>, (key, _) => {\n    if (optionNames.indexOf(key) < 0) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Unknown option '${key}' passed to function ${functionName}(). ` +\n          'Available options: ' +\n          optionNames.join(', ')\n      );\n    }\n  });\n}\n\n/**\n * Helper method to throw an error that the provided argument did not pass\n * an instanceof check.\n */\nexport function invalidClassError(\n  functionName: string,\n  type: string,\n  position: number,\n  argument: AnyJs\n): Error {\n  const description = valueDescription(argument);\n  return new FirestoreError(\n    Code.INVALID_ARGUMENT,\n    `Function ${functionName}() requires its ${ordinal(position)} ` +\n      `argument to be a ${type}, but it was: ${description}`\n  );\n}\n\n/** Converts a number to its english word representation */\nfunction ordinal(num: number) {\n  switch (num) {\n    case 1:\n      return 'first';\n    case 2:\n      return 'second';\n    case 3:\n      return 'third';\n    default:\n      return num + 'th';\n  }\n}\n\n/**\n * Formats the given word as plural conditionally given the preceding number.\n */\nfunction formatPlural(num: number, str: string) {\n  return `${num} ${str}` + (num === 1 ? '' : 's');\n}\n"]}