{"version":3,"sources":["src/firestore/util/api.ts"],"names":["makeConstructorPrivate","cls","optionalMessage","PublicConstructor","error","INVALID_ARGUMENT","prototype","staticProperty","hasOwnProperty"],"mappings":";;;;;QAgCMA,sB,GAAAA,sB;;AAbN;;AAEA;;;;;;;;;;;AAWM,SAAAA,sBAAA,CAAoCC,GAApC,EAA4CC,eAA5C,EAAoE;AACxE,aAAAC,iBAAA,GAAA;AACE,YAAIC,QAAQ,8BAAZ;AACA,YAAIF,eAAJ,EAAqB;AACnBE,qBAAS,GAAT;AACAA,qBAASF,eAAT;AACD;AACD,cAAM,0BAAmB,YAAKG,gBAAxB,EAA0CD,KAA1C,CAAN;AACD;AAED;AACA;AACAD,sBAAkBG,SAAlB,GAA+BL,IAAYK,SAA3C;AAEA;AACA,SAAK,IAAMC,cAAX,IAA6BN,GAA7B,EAAkC;AAChC,YAAIA,IAAIO,cAAJ,CAAmBD,cAAnB,CAAJ,EAAwC;AACrCJ,8BAA0BI,cAA1B,IAA6CN,IAAYM,cAAZ,CAA7C;AACF;AACF;AAED,WAAOJ,iBAAP;AACD,C,CAtDD;;;;;;;;;;;;;;;AAgBA;AACA","file":"api.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// We are doing some heavy reflective stuff, lots of any casting necessary\n/* tslint:disable:no-any */\n\nimport { Code, FirestoreError } from './error';\n\n/**\n * Helper function to prevent instantiation through the constructor.\n *\n * This method creates a new constructor that throws when it's invoked.\n * The prototype of that constructor is then set to the prototype of the hidden\n * \"class\" to expose all the prototype methods and allow for instanceof\n * checks.\n *\n * To also make all the static methods available, all properties of the\n * original constructor are copied to the new constructor.\n */\nexport function makeConstructorPrivate<T>(cls: T, optionalMessage?: string): T {\n  function PublicConstructor() {\n    let error = 'This constructor is private.';\n    if (optionalMessage) {\n      error += ' ';\n      error += optionalMessage;\n    }\n    throw new FirestoreError(Code.INVALID_ARGUMENT, error);\n  }\n\n  // Make sure instanceof checks work and all methods are exposed on the public\n  // constructor\n  PublicConstructor.prototype = (cls as any).prototype;\n\n  // Copy any static methods/members\n  for (const staticProperty in cls) {\n    if (cls.hasOwnProperty(staticProperty)) {\n      (PublicConstructor as any)[staticProperty] = (cls as any)[staticProperty];\n    }\n  }\n\n  return PublicConstructor as any;\n}\n"]}