{"version":3,"sources":["src/firestore/util/log.ts","firestore/util/log.js"],"names":["getLogLevel","setLogLevel","debug","error","LogLevel","logLevel","ERROR","newLevel","tag","msg","obj","_i","arguments","length","DEBUG","time","Date","toISOString","args","map","argToString","console","log","apply","concat","JSON","stringify","e"],"mappings":";;;;;;QA8BMA,W,GAAAA,W;QAGAC,W,GAAAA,W;QAIAC,K,GAAAA,K;QAQAC,K,GAAAA,K;;AA3BN;;AAGA,IAAYC,uCAAZ,C,CArBA;;;;;;;;;;;;;;;AAgBA;;AAKA,CAAA,UAAYA,QAAZ,EAAoB;AAClBA,aAAAA,SAAA,OAAA,IAAA,CAAA,IAAA,OAAA;AACAA,aAAAA,SAAA,OAAA,IAAA,CAAA,IAAA,OAAA;AACAA,aAAAA,SAAA,QAAA,IAAA,CAAA,IAAA,QAAA;AACD,CAJD,EAAYA,qBAAAA,QAAA,GAAAA,WAAQ,EAAR,CAAZ;AAMA,IAAIC,WAAWD,SAASE,KAAxB;AAEA;AACM,SAAAN,WAAA,GAAA;AACJ,WAAOK,QAAP;AACD;AACK,SAAAJ,WAAA,CAAsBM,QAAtB,EAAwC;AAC5CF,eAAWE,QAAX;AACD;AAEK,SAAAL,KAAA,CAAgBM,GAAhB,EAA6BC,GAA7B,EAAwC;AAAE,QAAAC,MAAA,EAAA;ACJ5C,SDI4C,IAAAC,KAAA,CCJ5C,EDI4CA,KAAAC,UAAAC,MCJ5C,EDI4CF,ICJ5C,EDI2D;AAAfD,YAAAC,KAAA,CAAA,IAAAC,UAAAD,EAAA,CAAA;ACF3C;ADGH,QAAIN,YAAYD,SAASU,KAAzB,EAAgC;AAC9B,YAAMC,OAAO,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,YAAMC,OAAOR,IAAIS,GAAJ,CAAQC,WAAR,CAAb;AACAC,gBAAQC,GAAR,CAAWC,KAAX,CAAAF,OAAA,EAAO,CAAK,uCAAyB,IAAzB,GAA8BN,IAA9B,GAAkC,IAAlC,GAAuCP,GAAvC,GAA0C,KAA1C,GAAgDC,GAArD,EAA0De,MAA1D,CAA+DN,IAA/D,CAAP;AACD;AACF;AAEK,SAAAf,KAAA,CAAgBM,GAAhB,EAA2B;AAAE,QAAAC,MAAA,EAAA;ACD/B,SDC+B,IAAAC,KAAA,CCD/B,EDC+BA,KAAAC,UAAAC,MCD/B,EDC+BF,ICD/B,EDC8C;AAAfD,YAAAC,KAAA,CAAA,IAAAC,UAAAD,EAAA,CAAA;ACC9B;ADAH,QAAIN,YAAYD,SAASE,KAAzB,EAAgC;AAC9B,YAAMS,OAAO,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,YAAMC,OAAOR,IAAIS,GAAJ,CAAQC,WAAR,CAAb;AACAC,gBAAQlB,KAAR,CAAaoB,KAAb,CAAAF,OAAA,EAAO,CAAO,uCAAyB,IAAzB,GAA8BN,IAA9B,GAAkC,IAAlC,GAAuCN,GAA9C,EAAmDe,MAAnD,CAAwDN,IAAxD,CAAP;AACD;AACF;AAED;;;AAGA,SAAAE,WAAA,CAAqBV,GAArB,EAA+B;AAC7B,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAOA,GAAP;AACD,KAFD,MAEO;AACL,YAAI;AACF,mBAAOe,KAAKC,SAAL,CAAehB,GAAf,CAAP;AACD,SAFD,CAEE,OAAOiB,CAAP,EAAU;AACV;AACA,mBAAOjB,GAAP;AACD;AACF;AACF","file":"log.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console */\n\nimport { SDK_VERSION } from '../core/version';\nimport { AnyJs } from './misc';\n\nexport enum LogLevel {\n  DEBUG,\n  ERROR,\n  SILENT\n}\n\nlet logLevel = LogLevel.ERROR;\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel(): LogLevel {\n  return logLevel;\n}\nexport function setLogLevel(newLevel: LogLevel): void {\n  logLevel = newLevel;\n}\n\nexport function debug(tag: string, msg: string, ...obj: AnyJs[]): void {\n  if (logLevel <= LogLevel.DEBUG) {\n    const time = new Date().toISOString();\n    const args = obj.map(argToString);\n    console.log(`Firestore (${SDK_VERSION}) ${time} [${tag}]: ${msg}`, ...args);\n  }\n}\n\nexport function error(msg: string, ...obj: AnyJs[]): void {\n  if (logLevel <= LogLevel.ERROR) {\n    const time = new Date().toISOString();\n    const args = obj.map(argToString);\n    console.error(`Firestore (${SDK_VERSION}) ${time}: ${msg}`, ...args);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj: AnyJs): string | AnyJs {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return JSON.stringify(obj);\n    } catch (e) {\n      // Converting to JSON failed, just log the object directly\n      return obj;\n    }\n  }\n}\n","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* tslint:disable:no-console */\nimport { SDK_VERSION } from '../core/version';\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 2] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\nvar logLevel = LogLevel.ERROR;\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel() {\n    return logLevel;\n}\nexport function setLogLevel(newLevel) {\n    logLevel = newLevel;\n}\nexport function debug(tag, msg) {\n    var obj = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        obj[_i - 2] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.DEBUG) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.log.apply(console, [\"Firestore (\" + SDK_VERSION + \") \" + time + \" [\" + tag + \"]: \" + msg].concat(args));\n    }\n}\nexport function error(msg) {\n    var obj = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        obj[_i - 1] = arguments[_i];\n    }\n    if (logLevel <= LogLevel.ERROR) {\n        var time = new Date().toISOString();\n        var args = obj.map(argToString);\n        console.error.apply(console, [\"Firestore (\" + SDK_VERSION + \") \" + time + \": \" + msg].concat(args));\n    }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj) {\n    if (typeof obj === 'string') {\n        return obj;\n    }\n    else {\n        try {\n            return JSON.stringify(obj);\n        }\n        catch (e) {\n            // Converting to JSON failed, just log the object directly\n            return obj;\n        }\n    }\n}\n\n\n"]}