{"version":3,"sources":["src/firestore/remote/existence_filter.ts","firestore/remote/existence_filter.js"],"names":["ExistenceFilter","count","prototype","equals","other"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;AAgBA,IAAAA,kBAAA,aAAA,YAAA;AACE;AACA,aAAAA,eAAA,CAAmBC,KAAnB,EAAgC;AAAb,aAAAA,KAAA,GAAAA,KAAA;AAAiB;AAE7BD,oBAAAE,SAAA,CAAAC,MAAA,GAAP,UAAcC,KAAd,EAAoC;AAClC,eAAOA,SAASA,MAAMH,KAAN,KAAgB,KAAKA,KAArC;AACD,KAFM;AAGT,WAAAD,eAAA;AAPA,CAAA,EAAA;QCSSA,e,GAAAA,e","file":"existence_filter.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ExistenceFilter {\n  // TODO(b/33078163): just use simplest form of existence filter for now\n  constructor(public count: number) {}\n\n  public equals(other: ExistenceFilter) {\n    return other && other.count === this.count;\n  }\n}\n","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ExistenceFilter = /** @class */ (function () {\n    // TODO(b/33078163): just use simplest form of existence filter for now\n    function ExistenceFilter(count) {\n        this.count = count;\n    }\n    ExistenceFilter.prototype.equals = function (other) {\n        return other && other.count === this.count;\n    };\n    return ExistenceFilter;\n}());\nexport { ExistenceFilter };\n\n\n"]}