{"version":3,"sources":["src/firestore/api/observer.ts"],"names":["isPartialObserver","obj","implementsAnyMethods","methods","object","_i","methods_1","length","method"],"mappings":";;;;;;;;QAqCMA,iB,GAAAA,iB;AArCN;;;;;;;;;;;;;;;AAqCM,SAAAA,iBAAA,CAA4BC,GAA5B,EAAsC;AAC1C,WAAOC,qBAAqBD,GAArB,EAA0B,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CAA1B,CAAP;AACD;AAED;;;;AAIA,SAAAC,oBAAA,CAA8BD,GAA9B,EAA0CE,OAA1C,EAA2D;AACzD,QAAI,QAAOF,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2BA,QAAQ,IAAvC,EAA6C;AAC3C,eAAO,KAAP;AACD;AAED,QAAMG,SAASH,GAAf;AACA,SAAqB,IAAAI,KAAA,CAAA,EAAAC,YAAAH,OAArB,EAAqBE,KAAAC,UAAAC,MAArB,EAAqBF,IAArB,EAA4B;AAAvB,YAAMG,SAAMF,UAAAD,EAAA,CAAZ;AACH,YAAIG,UAAUJ,MAAV,IAAoB,OAAOA,OAAOI,MAAP,CAAP,KAA0B,UAAlD,EAA8D;AAC5D,mBAAO,IAAP;AACD;AACF;AACD,WAAO,KAAP;AACD","file":"observer.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnyJs } from '../util/misc';\nimport { JsonObject } from '../model/field_value';\n\n/**\n * Observer/Subscribe interfaces.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\n// Allow for any of the Observer methods to be undefined.\nexport interface PartialObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n}\n\nexport interface Unsubscribe {\n  (): void;\n}\n\nexport function isPartialObserver(obj: AnyJs): boolean {\n  return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n\n/**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\nfunction implementsAnyMethods(obj: AnyJs, methods: string[]): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  const object = obj as JsonObject<AnyJs>;\n  for (const method of methods) {\n    if (method in object && typeof object[method] === 'function') {\n      return true;\n    }\n  }\n  return false;\n}\n"]}