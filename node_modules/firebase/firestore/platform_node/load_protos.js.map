{"version":3,"sources":["src/firestore/platform_node/load_protos.ts"],"names":["loadProtosAsync","loadProtos","dynamicRequire","require","protobufjs","callback","builder","newBuilder","convertFieldsToCamelCase","root","__dirname","firestoreProtoFile","file","undefined","loadProtoFile"],"mappings":";;;;;QAsBMA,e,GAAAA,e;QAeAC,U,GAAAA,U;;AAjBN;;AApBA;;;;;;;;;;;;;;;AAgBA,IAAMC,iBAAiBC,OAAvB;AACA,IAAMC,aAAaF,eAAe,YAAf,CAAnB;AAKM,SAAAF,eAAA,GAAA;AACJ,WAAO,2BAAY,UAACK,QAAD,EAA6C;AAC9DJ,mBAAWI,QAAX;AACD,KAFM,CAAP;AAGD;AAED;;;;;;;;;AASM,SAAAJ,UAAA,CACJI,QADI,EACyC;AAE7C,QAAMC,UAAUF,WAAWG,UAAX,CAAsB;AACpC;AACA;AACAC,kCAA0B;AAHU,KAAtB,CAAhB;AAKA,QAAMC,OAAOC,YAAY,WAAzB;AACA,QAAMC,qBAAqB;AACzBF,cAAMA,IADmB;AAEzBG,cAAM;AAFmB,KAA3B;AAIA,QAAIP,aAAaQ,SAAjB,EAA4B;AAC1B;AACA,eAAOT,WAAWU,aAAX,CAAyBH,kBAAzB,EAA6CE,SAA7C,EAAwDP,OAAxD,CAAP;AACD,KAHD,MAGO;AACL;AACAF,mBAAWU,aAAX,CAAyBH,kBAAzB,EAA6CN,QAA7C,EAAuDC,OAAvD;AACA;AACA;AACA,eAAOO,SAAP;AACD;AACF","file":"load_protos.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst dynamicRequire = require;\nconst protobufjs = dynamicRequire('protobufjs');\nexport type ProtobufProtoBuilder = any;\n\nimport { NodeCallback, nodePromise } from '../util/node_api';\n\nexport function loadProtosAsync(): Promise<ProtobufProtoBuilder> {\n  return nodePromise((callback: NodeCallback<ProtobufProtoBuilder>) => {\n    loadProtos(callback);\n  });\n}\n\n/**\n * Loads the protocol buffer definitions for the datastore. This is a thin\n * wrapper around protobufjs.loadProtoFile which knows the location of the\n * proto files.\n *\n * @param callback if specified, the load is performed asynchronously and\n *     the protos are supplied to the callback.\n * @returns the ProtoBuilder if the callback is unspecified.\n */\nexport function loadProtos(\n  callback?: NodeCallback<ProtobufProtoBuilder>\n): ProtobufProtoBuilder | undefined {\n  const builder = protobufjs.newBuilder({\n    // Beware that converting fields to camel case does not convert the tag\n    // fields in oneof groups (!!!).\n    convertFieldsToCamelCase: true\n  });\n  const root = __dirname + '/../proto';\n  const firestoreProtoFile = {\n    root: root,\n    file: 'google/firestore/v1beta1/firestore.proto'\n  };\n  if (callback === undefined) {\n    // Synchronous load\n    return protobufjs.loadProtoFile(firestoreProtoFile, undefined, builder);\n  } else {\n    // Load the protos asynchronously\n    protobufjs.loadProtoFile(firestoreProtoFile, callback, builder);\n    // We are using the callback so no return value, but we need to explicitly\n    // return undefined\n    return undefined;\n  }\n}\n"]}