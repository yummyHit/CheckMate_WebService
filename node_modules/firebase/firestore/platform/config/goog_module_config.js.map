{"version":3,"sources":["firestore/src/firestore/platform/config/goog_module_config.ts"],"names":["__firestore_exports__","Error"],"mappings":";;AAgBA;;AAeA,IAAI,OAAOA,qBAAP,KAAiC,WAArC,EAAkD;AAChD,wCAAuBA,qBAAvB;AACD,CAFD,MAEO;AACL;AACA;AACA;AACA,KAAC,YAAA;AACC,cAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD,KAFD;AAGD,C,CAxCD","file":"goog_module_config.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configureForStandalone } from '../config';\n\n/**\n * Magic variable that is used to export the Firestore namespace.\n *\n * A wrapping script should include this file and additionally make sure\n * __firestore_exports__ is defined in scope when including this file. After\n * the including this file, __firestore_exports__ will then hold the Firestore\n * namespace.\n *\n * Note that name was chosen arbitrarily but was intended to not conflict with\n * any other variable in scope.\n */\ndeclare let __firestore_exports__: { [key: string]: {} };\n\nif (typeof __firestore_exports__ !== 'undefined') {\n  configureForStandalone(__firestore_exports__);\n} else {\n  // Wrap in a closure to allow throwing from within a goog.module.\n  // TS compiles this file to a goog.module which then disallows throwing\n  // directly.\n  (() => {\n    throw new Error('__firestore_exports__ not found.');\n  })();\n}\n"]}