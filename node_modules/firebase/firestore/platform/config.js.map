{"version":3,"sources":["src/firestore/platform/config.ts"],"names":["configureForFirebase","configureForStandalone","firestoreNamespace","Firestore","GeoPoint","Blob","Transaction","WriteBatch","DocumentReference","DocumentSnapshot","Query","QuerySnapshot","CollectionReference","FieldPath","FieldValue","setLogLevel","firebase","INTERNAL","registerService","app","exportObject","copiedNamespace"],"mappings":";;;;;QAsDMA,oB,GAAAA,oB;QAaAC,sB,GAAAA,sB;;AAjDN;;AACA;;AAWA;;AACA;;AACA;;AACA;;AAjCA;;;;;;;;;;;;;;;AAmCA,IAAMC,qBAAqB;AACzBC,sCADyB;AAEzBC,+BAFyB;AAGzBC,wBAHyB;AAIzBC,0CAJyB;AAKzBC,wCALyB;AAMzBC,sDANyB;AAOzBC,oDAPyB;AAQzBC,8BARyB;AASzBC,8CATyB;AAUzBC,0DAVyB;AAWzBC,kCAXyB;AAYzBC,2CAZyB;AAazBC,eAAa,oBAAUA;AAbE,CAA3B;AAgBA;;;AAGM,SAAAf,oBAAA,CAA+BgB,QAA/B,EAA0D;AAC9DA,WAASC,QAAT,CAAkBC,eAAlB,CACE,WADF,EAEE,UAACC,GAAD,EAAsB;AAAK,WAAA,wBAAcA,GAAd,CAAA;AAAkB,GAF/C,EAGE,sBAAYjB,kBAAZ,CAHF;AAKD;AAED;;;;;AAKM,SAAAD,sBAAA,CAAiCmB,YAAjC,EAEL;AACC,MAAMC,kBAAkB,sBAAYnB,kBAAZ,CAAxB;AACA;AACA;AACAmB,kBAAgB,WAAhB;AACAD,eAAa,WAAb,IAA4BC,eAA5B;AACD","file":"config.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firestore from 'firestore';\n\nimport { PublicBlob } from '../api/blob';\nimport {\n  Firestore,\n  PublicCollectionReference,\n  PublicDocumentReference,\n  PublicDocumentSnapshot,\n  PublicFirestore,\n  PublicQuery,\n  PublicQuerySnapshot,\n  PublicTransaction,\n  PublicWriteBatch\n} from '../api/database';\nimport { FieldPath } from '../api/field_path';\nimport { PublicFieldValue } from '../api/field_value';\nimport { GeoPoint } from '../api/geo_point';\nimport { shallowCopy } from '../util/obj';\n\nconst firestoreNamespace = {\n  Firestore: PublicFirestore,\n  GeoPoint: GeoPoint,\n  Blob: PublicBlob,\n  Transaction: PublicTransaction,\n  WriteBatch: PublicWriteBatch,\n  DocumentReference: PublicDocumentReference,\n  DocumentSnapshot: PublicDocumentSnapshot,\n  Query: PublicQuery,\n  QuerySnapshot: PublicQuerySnapshot,\n  CollectionReference: PublicCollectionReference,\n  FieldPath: FieldPath,\n  FieldValue: PublicFieldValue,\n  setLogLevel: Firestore.setLogLevel\n};\n\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nexport function configureForFirebase(firebase: FirebaseNamespace): void {\n  firebase.INTERNAL.registerService(\n    'firestore',\n    (app: firebase.app.App) => new Firestore(app),\n    shallowCopy(firestoreNamespace)\n  );\n}\n\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nexport function configureForStandalone(exportObject: {\n  [key: string]: {};\n}): void {\n  const copiedNamespace = shallowCopy(firestoreNamespace);\n  // Unlike the use with Firebase, the standalone allows the use of the\n  // constructor, so export it's internal class\n  copiedNamespace['Firestore'] = Firestore;\n  exportObject['firestore'] = copiedNamespace;\n}\n"]}