{"version":3,"sources":["src/firestore/model/collections.ts"],"names":["maybeDocumentMap","documentMap","documentVersionMap","documentKeySet","EMPTY_MAYBE_DOCUMENT_MAP","comparator","EMPTY_DOCUMENT_MAP","EMPTY_DOCUMENT_VERSION_MAP","EMPTY_DOCUMENT_KEY_SET"],"mappings":";;;;;QA6BMA,gB,GAAAA,gB;QAQAC,W,GAAAA,W;QAQAC,kB,GAAAA,kB;QAMAC,c,GAAAA,c;;AAlCN;;AACA;;AAGA;;AAKA,IAAMC,2BAA2B,0BAC/B,0BAAYC,UADmB,CAAjC,C,CA1BA;;;;;;;;;;;;;;;AA6BM,SAAAL,gBAAA,GAAA;AACJ,WAAOI,wBAAP;AACD;AAGD,IAAME,qBAAqB,0BACzB,0BAAYD,UADa,CAA3B;AAGM,SAAAJ,WAAA,GAAA;AACJ,WAAOK,kBAAP;AACD;AAGD,IAAMC,6BAA6B,0BACjC,0BAAYF,UADqB,CAAnC;AAGM,SAAAH,kBAAA,GAAA;AACJ,WAAOK,0BAAP;AACD;AAGD,IAAMC,yBAAyB,0BAAc,0BAAYH,UAA1B,CAA/B;AACM,SAAAF,cAAA,GAAA;AACJ,WAAOK,sBAAP;AACD","file":"collections.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MaybeDocument } from './document';\nimport { DocumentKey } from './document_key';\n\n/** Miscellaneous collection types / constants. */\n\nexport type MaybeDocumentMap = SortedMap<DocumentKey, MaybeDocument>;\nconst EMPTY_MAYBE_DOCUMENT_MAP = new SortedMap<DocumentKey, MaybeDocument>(\n  DocumentKey.comparator\n);\nexport function maybeDocumentMap() {\n  return EMPTY_MAYBE_DOCUMENT_MAP;\n}\n\nexport type DocumentMap = SortedMap<DocumentKey, Document>;\nconst EMPTY_DOCUMENT_MAP = new SortedMap<DocumentKey, Document>(\n  DocumentKey.comparator\n);\nexport function documentMap() {\n  return EMPTY_DOCUMENT_MAP;\n}\n\nexport type DocumentVersionMap = SortedMap<DocumentKey, SnapshotVersion>;\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap<DocumentKey, SnapshotVersion>(\n  DocumentKey.comparator\n);\nexport function documentVersionMap() {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nexport type DocumentKeySet = SortedSet<DocumentKey>;\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet() {\n  return EMPTY_DOCUMENT_KEY_SET;\n}\n"]}