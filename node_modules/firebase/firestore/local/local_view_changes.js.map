{"version":3,"sources":["src/firestore/local/local_view_changes.ts","firestore/local/local_view_changes.js"],"names":["LocalViewChanges","query","addedKeys","removedKeys","fromSnapshot","viewSnapshot","_i","_a","docChanges","length","docChange","type","Added","add","doc","key","Removed"],"mappings":";;;;;;;AAiBA;;AACA;;AAEA;;;;;AApBA;;;;;;;;;;;;;;;AAyBA,IAAAA,mBAAA,aAAA,YAAA;AACE,aAAAA,gBAAA,CACWC,KADX,EAEWC,SAFX,EAGWC,WAHX,EAGsC;AAF3B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACP;AAEGH,qBAAAI,YAAA,GAAP,UAAoBC,YAApB,EAA8C;AAC5C,YAAIH,YAAY,kCAAhB;AACA,YAAIC,cAAc,kCAAlB;AAEA,aAAwB,IAAAG,KAAA,CAAA,EAAAC,KAAAF,aAAaG,UAArC,EAAwBF,KAAAC,GAAAE,MAAxB,EAAwBH,IAAxB,EAA+C;AAA1C,gBAAMI,YAASH,GAAAD,EAAA,CAAf;AACH,oBAAQI,UAAUC,IAAlB;AACE,qBAAK,0BAAWC,KAAhB;AACEV,gCAAYA,UAAUW,GAAV,CAAcH,UAAUI,GAAV,CAAcC,GAA5B,CAAZ;AACA;AACF,qBAAK,0BAAWC,OAAhB;AACEb,kCAAcA,YAAYU,GAAZ,CAAgBH,UAAUI,GAAV,CAAcC,GAA9B,CAAd;AACA;AACF;AAPF;AAUD;AAED,eAAO,IAAIf,gBAAJ,CAAqBK,aAAaJ,KAAlC,EAAyCC,SAAzC,EAAoDC,WAApD,CAAP;AACD,KAlBM;AAmBT,WAAAH,gBAAA;AA1BA,CAAA,EAAA;QCsBSA,gB,GAAAA,gB","file":"local_view_changes.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../core/query';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nexport class LocalViewChanges {\n  constructor(\n    readonly query: Query,\n    readonly addedKeys: DocumentKeySet,\n    readonly removedKeys: DocumentKeySet\n  ) {}\n\n  static fromSnapshot(viewSnapshot: ViewSnapshot): LocalViewChanges {\n    let addedKeys = documentKeySet();\n    let removedKeys = documentKeySet();\n\n    for (const docChange of viewSnapshot.docChanges) {\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n  }\n}\n","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChangeType } from '../core/view_snapshot';\nimport { documentKeySet } from '../model/collections';\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nvar LocalViewChanges = /** @class */ (function () {\n    function LocalViewChanges(query, addedKeys, removedKeys) {\n        this.query = query;\n        this.addedKeys = addedKeys;\n        this.removedKeys = removedKeys;\n    }\n    LocalViewChanges.fromSnapshot = function (viewSnapshot) {\n        var addedKeys = documentKeySet();\n        var removedKeys = documentKeySet();\n        for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\n            var docChange = _a[_i];\n            switch (docChange.type) {\n                case ChangeType.Added:\n                    addedKeys = addedKeys.add(docChange.doc.key);\n                    break;\n                case ChangeType.Removed:\n                    removedKeys = removedKeys.add(docChange.doc.key);\n                    break;\n                default:\n            }\n        }\n        return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\n    };\n    return LocalViewChanges;\n}());\nexport { LocalViewChanges };\n\n\n"]}