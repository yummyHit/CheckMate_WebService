{"version":3,"sources":["src/firestore/platform_browser/browser_platform.ts","firestore/platform_browser/browser_platform.js"],"names":["BrowserPlatform","emptyByteString","base64Available","atob","prototype","loadConnection","databaseInfo","resolve","newSerializer","databaseId","useProto3Json","encoded","btoa","raw"],"mappings":";;;;;;;AAmBA;;AACA;;AAEA;;AAEA,IAAAA,kBAAA,aAAA,YAAA;AAKE,aAAAA,eAAA,GAAA;AAFS,aAAAC,eAAA,GAAkB,EAAlB;AAGP,aAAKC,eAAL,GAAuB,OAAOC,IAAP,KAAgB,WAAvC;AACD;AAEDH,oBAAAI,SAAA,CAAAC,cAAA,GAAA,UAAeC,YAAf,EAAyC;AACvC,eAAO,qBAAQC,OAAR,CAAgB,gDAAyBD,YAAzB,CAAhB,CAAP;AACD,KAFD;AAIAN,oBAAAI,SAAA,CAAAI,aAAA,GAAA,UAAcC,UAAd,EAAoC;AAClC,eAAO,oCAAwBA,UAAxB,EAAoC,EAAEC,eAAe,IAAjB,EAApC,CAAP;AACD,KAFD;AAIAV,oBAAAI,SAAA,CAAAD,IAAA,GAAA,UAAKQ,OAAL,EAAoB;AAClB,eAAOR,KAAKQ,OAAL,CAAP;AACD,KAFD;AAIAX,oBAAAI,SAAA,CAAAQ,IAAA,GAAA,UAAKC,GAAL,EAAgB;AACd,eAAOD,KAAKC,GAAL,CAAP;AACD,KAFD;AAGF,WAAAb,eAAA;AAxBA,CAAA,EAAA,C,CAxBA;;;;;;;;;;;;;;;QCqCSA,e,GAAAA,e","file":"browser_platform.js","sourcesContent":["/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { Platform } from '../platform/platform';\nimport { Connection } from '../remote/connection';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { PromiseImpl as Promise } from '../../utils/promise';\n\nimport { WebChannelConnection } from './webchannel_connection';\n\nexport class BrowserPlatform implements Platform {\n  readonly base64Available: boolean;\n\n  readonly emptyByteString = '';\n\n  constructor() {\n    this.base64Available = typeof atob !== 'undefined';\n  }\n\n  loadConnection(databaseInfo: DatabaseInfo): Promise<Connection> {\n    return Promise.resolve(new WebChannelConnection(databaseInfo));\n  }\n\n  newSerializer(databaseId: DatabaseId): JsonProtoSerializer {\n    return new JsonProtoSerializer(databaseId, { useProto3Json: true });\n  }\n\n  atob(encoded: string): string {\n    return atob(encoded);\n  }\n\n  btoa(raw: string): string {\n    return btoa(raw);\n  }\n}\n","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { PromiseImpl as Promise } from '../../utils/promise';\nimport { WebChannelConnection } from './webchannel_connection';\nvar BrowserPlatform = /** @class */ (function () {\n    function BrowserPlatform() {\n        this.emptyByteString = '';\n        this.base64Available = typeof atob !== 'undefined';\n    }\n    BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\n        return Promise.resolve(new WebChannelConnection(databaseInfo));\n    };\n    BrowserPlatform.prototype.newSerializer = function (databaseId) {\n        return new JsonProtoSerializer(databaseId, { useProto3Json: true });\n    };\n    BrowserPlatform.prototype.atob = function (encoded) {\n        return atob(encoded);\n    };\n    BrowserPlatform.prototype.btoa = function (raw) {\n        return btoa(raw);\n    };\n    return BrowserPlatform;\n}());\nexport { BrowserPlatform };\n\n\n"]}