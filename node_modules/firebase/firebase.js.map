{"version":3,"sources":["webpack:///firebase-app.js","webpack:/webpack/bootstrap 6cb149ba8cc0d40c95b7","webpack:///src/app/errors.ts","webpack:///src/utils/promise.ts","webpack:///src/app/subscribe.ts","webpack:///src/utils/globalScope.ts","webpack:///(webpack)/buildin/global.js","webpack:///node_modules/process/browser.js","webpack:///src/utils/deep_copy.ts","webpack:///src/utils/shims.ts","webpack:///node_modules/promise-polyfill/promise.js","webpack:///node_modules/timers-browserify/main.js","webpack:///node_modules/setimmediate/setImmediate.js","webpack:///src/app/firebase_app.ts","webpack:///src/app.ts","firebase-auth.js","webpack:///firebase-database.js","webpack:///src/utils/assert.ts","webpack:///src/utils/crypt.ts","webpack:///src/utils/hash.ts","webpack:///src/utils/Sha1.ts","webpack:///src/database/core/util/util.ts","webpack:///src/utils/obj.ts","webpack:///src/database/core/util/Path.ts","webpack:///src/database/core/snap/indexes/PriorityIndex.ts","webpack:///src/database/core/snap/ChildrenNode.ts","webpack:///src/database/core/snap/Node.ts","webpack:///src/utils/json.ts","webpack:///src/utils/validation.ts","webpack:///src/database/core/util/validation.ts","webpack:///src/database/core/operation/Operation.ts","webpack:///src/utils/environment.ts","webpack:///src/database/core/view/Change.ts","webpack:///src/database/core/snap/indexes/KeyIndex.ts","webpack:///src/database/core/snap/nodeFromJSON.ts","webpack:///src/utils/constants.ts","webpack:///src/database/core/storage/DOMStorageWrapper.ts","webpack:///src/database/core/storage/MemoryStorage.ts","webpack:///src/database/core/storage/storage.ts","webpack:///src/database/realtime/Constants.ts","webpack:///src/database/core/snap/indexes/Index.ts","webpack:///src/database/core/snap/LeafNode.ts","webpack:///src/database/core/util/SortedMap.ts","webpack:///src/database/core/operation/AckUserWrite.ts","webpack:///src/database/core/operation/ListenComplete.ts","webpack:///src/database/core/operation/Overwrite.ts","webpack:///src/database/core/operation/Merge.ts","webpack:///src/database/core/CompoundWrite.ts","webpack:///src/database/core/WriteTree.ts","webpack:///src/database/core/SyncTree.ts","webpack:///src/database/core/SnapshotHolder.ts","webpack:///src/database/core/AuthTokenProvider.ts","webpack:///src/database/core/stats/StatsListener.ts","webpack:///src/database/core/stats/StatsReporter.ts","webpack:///src/database/core/view/EventQueue.ts","webpack:///src/utils/util.ts","webpack:///src/database/core/ReadonlyRestClient.ts","webpack:///src/database/core/Repo.ts","webpack:///src/utils/utf8.ts","webpack:///src/database/api/onDisconnect.ts","webpack:///src/database/api/TransactionResult.ts","webpack:///src/database/core/util/NextPushId.ts","webpack:///src/database/core/view/filter/RangedFilter.ts","webpack:///src/database/core/view/filter/LimitedFilter.ts","webpack:///src/database/core/view/QueryParams.ts","webpack:///src/database/api/Reference.ts","webpack:///src/database/core/util/ImmutableTree.ts","webpack:///src/database/core/view/filter/IndexedFilter.ts","webpack:///src/database/core/stats/StatsCollection.ts","webpack:///src/database/core/stats/StatsManager.ts","webpack:///src/database/core/Repo_transaction.ts","webpack:///src/database/core/util/Tree.ts","webpack:///src/database/core/RepoManager.ts","webpack:///src/database/api/Database.ts","webpack:///src/database/core/util/libs/parser.ts","webpack:///src/database/core/RepoInfo.ts","webpack:///src/database/core/view/Event.ts","webpack:///src/database/core/view/EventRegistration.ts","webpack:///src/database/api/Query.ts","webpack:///src/database/core/snap/snap.ts","webpack:///src/database/core/snap/indexes/ValueIndex.ts","webpack:///src/database/core/snap/IndexMap.ts","webpack:///src/database/core/snap/childSet.ts","webpack:///src/database/core/snap/comparators.ts","webpack:///src/database/core/snap/indexes/PathIndex.ts","webpack:///src/database/api/DataSnapshot.ts","webpack:///src/database/core/util/ServerValues.ts","webpack:///src/database/core/SparseSnapshotTree.ts","webpack:///src/database/core/util/CountedSet.ts","webpack:///src/database/core/view/CacheNode.ts","webpack:///src/database/core/view/ViewCache.ts","webpack:///src/database/core/view/ChildChangeAccumulator.ts","webpack:///src/database/core/view/CompleteChildSource.ts","webpack:///src/database/core/view/ViewProcessor.ts","webpack:///src/database/core/view/EventGenerator.ts","webpack:///src/database/core/view/View.ts","webpack:///src/database/core/SyncPoint.ts","webpack:///src/database/core/util/EventEmitter.ts","webpack:///src/database/core/util/VisibilityMonitor.ts","webpack:///src/database/core/util/OnlineMonitor.ts","webpack:///src/utils/jwt.ts","webpack:///src/database/core/PersistentConnection.ts","webpack:///src/database/realtime/TransportManager.ts","webpack:///src/database/realtime/Connection.ts","webpack:///src/database/realtime/polling/PacketReceiver.ts","webpack:///src/database/realtime/BrowserPollConnection.ts","webpack:///src/database/realtime/WebSocketConnection.ts","webpack:///src/database/core/ServerActions.ts","webpack:///src/database.ts","webpack:///(webpack)/buildin/harmony-module.js","webpack:///src/database/api/internal.ts","webpack:///src/database/api/test_access.ts","webpack:///firebase-messaging.js","webpack:///src/messaging/helpers/array-buffer-to-base64.ts","webpack:///src/messaging.ts","webpack:///src/messaging/models/errors.ts","webpack:///src/messaging/models/fcm-details.ts","webpack:///src/messaging/models/token-manager.ts","webpack:///src/messaging/controllers/controller-interface.ts","webpack:///src/messaging/models/worker-page-message.ts","webpack:///src/messaging/models/default-sw.ts","webpack:///src/messaging/controllers/window-controller.ts","webpack:///src/messaging/controllers/sw-controller.ts","webpack:///firebase-storage.js","webpack:///src/storage/implementation/error.ts","webpack:///src/storage/implementation/string.ts","webpack:///src/storage/implementation/taskenums.ts","webpack:///src/storage/implementation/object.ts","webpack:///src/storage/implementation/promise_external.ts","webpack:///src/storage/implementation/type.ts","webpack:///src/storage/implementation/json.ts","webpack:///src/storage/implementation/path.ts","webpack:///src/storage/implementation/url.ts","webpack:///src/storage/implementation/metadata.ts","webpack:///src/storage/implementation/args.ts","webpack:///src/storage/implementation/fs.ts","webpack:///src/storage/implementation/array.ts","webpack:///src/storage/implementation/requests.ts","webpack:///src/storage/implementation/async.ts","webpack:///src/storage/implementation/backoff.ts","webpack:///src/storage/implementation/request.ts","webpack:///src/storage.ts","webpack:///src/storage/implementation/constants.ts","webpack:///src/storage/implementation/xhrio.ts","webpack:///src/storage/implementation/xhrio_network.ts","webpack:///src/storage/implementation/xhriopool.ts","webpack:///src/storage/implementation/location.ts","webpack:///src/storage/implementation/blob.ts","webpack:///src/storage/implementation/requestinfo.ts","webpack:///src/storage/implementation/observer.ts","webpack:///src/storage/tasksnapshot.ts","webpack:///src/storage/task.ts","webpack:///src/storage/reference.ts","webpack:///src/storage/implementation/failrequest.ts","webpack:///src/storage/implementation/requestmap.ts","webpack:///src/storage/implementation/authwrapper.ts","webpack:///src/storage/service.ts"],"names":["firebase","window","self","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","parentJsonpFunction","chunkIds","moreModules","executeModules","chunkId","result","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","shift","s","4","e","onScriptComplete","script","onerror","onload","clearTimeout","timeout","chunk","Error","undefined","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","createElement","type","charset","async","nc","setAttribute","src","p","setTimeout","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","object","property","oe","err","console","error","24","__webpack_exports__","ErrorFactory","ERROR_NAME","captureStackTrace","FirebaseError","code","message","this","create","err_1","apply","arguments","stack","constructor","service","serviceName","errors","pattern","data","template","fullCode","replace","match","key","value","prop","slice","3","PromiseImpl","Deferred","attachDummyErrorHandler","__WEBPACK_IMPORTED_MODULE_0__utils_globalScope__","wrapCallback","opt_nodeCallback","meta","opt_value","catch","31","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","implementsAnyMethods","obj","methods","_typeof","_i","methods_1","method","noop","__WEBPACK_IMPORTED_MODULE_0__utils_promise__","Symbol","iterator","_this","observers","unsubscribes","observerCount","task","finalized","then","next","forEachObserver","observer","close","complete","nextOrObserver","unsub","unsubscribeOne","finalError","fn","sendOne","32","global","globalScope","scope","Function","33","g","eval","34","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","array","process","nextTick","args","Array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","35","deepCopy","deepExtend","target","source","Date","dateValue","getTime","patchProperty","56","findIndex","predicate","TypeError","thisArg","k","kValue","find","57","setImmediate","root","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","newValue","finale","_unhandledRejectionFn","Handler","done","reason","ex","setTimeoutFunc","prom","all","arr","res","val","remaining","race","values","warn","_setImmediateFn","_setUnhandledRejectionFn","58","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","59","callback","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","doc","attachTo","getPrototypeOf","toString","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","Math","random","onGlobalMessage","event","indexOf","addEventListener","attachEvent","MessageChannel","channel","port1","port2","html","documentElement","onreadystatechange","removeChild","9","createFirebaseNamespace","removeApp","callAppHooks","apps_","app","DEFAULT_ENTRY_NAME","contains","initializeApp","options","firebase_app_FirebaseAppImpl","namespace","getApps","keys","map","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","forEach","serviceNamespace","appArg","deep_copy","_getService","extendNamespace","props","eventName","factoryName","useAsService","useService","apps","SDK_VERSION","INTERNAL","appErrors","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","name_","options_","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","filter","listener","checkDestroyed_","delete","services","serviceKey","instanceKey","instanceIdentifier","instanceSpecifier","extendApp","log","firebase_app_errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","default","webpackJsonpFirebase","assert","assertionError","__WEBPACK_IMPORTED_MODULE_0__constants__","assertion","utils_obj","stringToByteArray","str","output","charCodeAt","byteArrayToString","bytes","String","fromCharCode","base64","_","O","S","T","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","isArray","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charToByteMapWebSafe_","charToByteMap_","charAt","haveByte4","byte4","N","Hash","blockSize","__extends","extendStatics","setPrototypeOf","__proto__","b","__","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","reset","compress_","buf","opt_offset","W","t","f","a","update","opt_length","lengthMinusBlock","inbuf","digest","totalBits","j","utf8","json","storage","environment","LUIDGenerator","util_base64Encode","util_base64Decode","util_sha1","logger","util_enableLogging","util_log","logWrapper","fatal","warnIfPageIsSecure","isInvalidJSONNumber","util_executeWhenDOMReady","MIN_NAME","MAX_NAME","nameCompare","stringCompare","util_requireKey","util_ObjectToUniqueKey","splitStringBySize","util_each","util_doubleToIEEE754String","isChromeExtensionContentScript","isWindowsStoreApp","errorForServerCode","exceptionGuard","beingCrawled","setTimeoutNonBlocking","BufferImpl","utf8Bytes","sha1","sha1Bytes","util_buildLogMessage_","buildLogMessage_","var_args","firstLog_","logger_","persistent","set","remove","prefix","location","protocol","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","readyState","called_1","wrappedFn_1","body","floor","aAsInt","tryParseInt","bAsInt","ObjectToUniqueKey","sort","segsize","dataSegs","substring","v","ln","bits","abs","pow","min","LN2","round","reverse","hexByteString","hexByte","parseInt","substr","toLowerCase","test","href","Windows","UI","query","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","search","time","safeGet","clone","isEmpty","getCount","findKey","findValue","getAnyKey","getValues","every","extend","objTo","objFrom","rv","opt_obj","opt_this","Path","ValidationPath","__WEBPACK_IMPORTED_MODULE_0__util__","__WEBPACK_IMPORTED_MODULE_1__utils_utf8__","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","begin","parent","pieces","child","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","setNodeFromJSON","nodeFromJSON","setMaxNode","MAX_NODE","PRIORITY_INDEX","__WEBPACK_IMPORTED_MODULE_0__Index__","__WEBPACK_IMPORTED_MODULE_1__util_util__","__WEBPACK_IMPORTED_MODULE_2__Node__","__WEBPACK_IMPORTED_MODULE_3__LeafNode__","PriorityIndex","compare","aPriority","node","getPriority","bPriority","indexCmp","compareTo","isDefinedOn","indexedValueChanged","oldNode","newNode","minPost","MIN","maxPost","makePost","indexValue","priorityNode","ChildrenNode","EMPTY_NODE","__WEBPACK_IMPORTED_MODULE_0__utils_assert__","__WEBPACK_IMPORTED_MODULE_2__util_SortedMap__","__WEBPACK_IMPORTED_MODULE_3__Node__","__WEBPACK_IMPORTED_MODULE_4__snap__","__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__","__WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__","__WEBPACK_IMPORTED_MODULE_7__IndexMap__","__WEBPACK_IMPORTED_MODULE_8__LeafNode__","__WEBPACK_IMPORTED_MODULE_9__comparators__","children_","priorityNode_","indexMap_","lazyHash_","Default","isLeafNode","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","front","hasChild","updateImmediateChild","newChildNode","namedNode","newChildren","newIndexMap","newPriority","removeFromIndexes","insert","addToIndexes","updateChild","newImmediateChild","numChildren","count","exportFormat","numKeys","maxKey","allIntegerKeys","forEachChild","childNode","hash","toHash_1","childHash","getPredecessorChildName","index","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","indexDefinition","minKey","getFirstChild","getLastChildName","getLastChild","action","inorderTraversal","wrappedNode","getIterator","getIteratorFrom","startPost","Wrap","peek","getNext","getReverseIterator","getReverseIteratorFrom","endPost","withIndex","hasIndex","addIndex","isIndexed","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","__EMPTY_NODE","__childrenNodeConstructor","NamedNode","jsonEval","stringify","JSON","parse","errorPrefix","fnName","argumentNumber","optional","argName","validateArgCount","validateCallback","validateContextObject","minCount","maxCount","argCount","argError","context","isValidPriority","validateFirebaseDataArg","validateFirebaseData","validateFirebaseMergeDataArg","validatePriority","validateEventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","__WEBPACK_IMPORTED_MODULE_0__Path__","__WEBPACK_IMPORTED_MODULE_1__utils_obj__","__WEBPACK_IMPORTED_MODULE_2__util__","__WEBPACK_IMPORTED_MODULE_3__utils_validation__","__WEBPACK_IMPORTED_MODULE_4__utils_utf8__","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidRootPathString","priority","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","eventType","parsedUrl","repoInfo","host","bool","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","isMobileCordova","isReactNative","isNodeSdk","getUA","navigator","NODE_CLIENT","NODE_ADMIN","Change","snapshotNode","oldSnap","prevName","valueChange","snapshot","VALUE","childAddedChange","childKey","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","KeyIndex","KEY_INDEX","__WEBPACK_IMPORTED_MODULE_1__Node__","__WEBPACK_IMPORTED_MODULE_2__util_util__","__WEBPACK_IMPORTED_MODULE_3__utils_assert__","__WEBPACK_IMPORTED_MODULE_0__ChildrenNode__","__WEBPACK_IMPORTED_MODULE_4__utils_assert__","jsonLeaf","__WEBPACK_IMPORTED_MODULE_1__LeafNode__","USE_HINZE","node_1","jsonObj_1","__WEBPACK_IMPORTED_MODULE_3__utils_obj__","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","__WEBPACK_IMPORTED_MODULE_5__childSet__","__WEBPACK_IMPORTED_MODULE_6__comparators__","sortedChildSet","__WEBPACK_IMPORTED_MODULE_8__indexes_PriorityIndex__","getCompare",".priority","CONSTANTS","DOMStorageWrapper_DOMStorageWrapper","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage_MemoryStorage","MemoryStorage","cache_","isInMemoryStorage","PersistentStorage","SessionStorage","storage_createStoragefor","domStorageName","domStorage","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","Index","__WEBPACK_IMPORTED_MODULE_0__Node__","oldWrapped","newWrapped","LeafNode","__WEBPACK_IMPORTED_MODULE_2__snap__","value_",".value","getValue","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","LLRBNode","SortedMap","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","hasNext","color","RED","copy","reverseTraversal","min_","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","rightParent","resultGenerator","ServerValues","SparseSnapshotTree","util","Operation","AckUserWrite_AckUserWrite","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","children","childTree","subtree","Empty","ImmutableTree","ListenComplete_ListenComplete","ListenComplete","LISTEN_COMPLETE","Overwrite_Overwrite","Overwrite","snap","OVERWRITE","Merge_Merge","Merge","MERGE","SyncPoint","Node","CompoundWrite_CompoundWrite","CompoundWrite","writeTree_","addWrite","rootmost","findRootMostValueAndPath","rootMostPath","setTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree_WriteTree","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","changedChildren","getWrite","record","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","calcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","write","mergeAtPath","layerTree_","layeredCache","subMerge","calcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","childSnap","merge_1","calcEventCacheAfterServerOverwrite","childPath","existingEventSnap","existingServerSnap","childMerge","calcCompleteChild","isCompleteForChild","getNode","shadowingWrite","calcIndexedSlice","completeServerData","toIterate","nodes","iter","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","writePath","deepNode","treePath_","existingServerCache","SyncTree_SyncTree","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","fromObject","ackUserWrite","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","addEventRegistration","eventRegistration","serverCache","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","getCompleteServerCache","hasCompleteView","syncPoint","serverCacheComplete","foreachChild","childSyncPoint","completeCache","viewAlreadyExists","viewExistsForQuery","getQueryParams","loadsAllData","makeQueryKey_","getNextQueryTag_","writesCache","events","view","viewForQuery","setupListener_","removeEventRegistration","cancelError","maybeSyncPoint","cancelEvents","queryIdentifier","removedAndEvents","removed","removingDefault","covered","findOnPath","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","getQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","onComplete","stopListening","queryToRemove","tagToRemove","removeTags_","pathSoFar","fold","maybeChildSyncPoint","childMap","getCompleteView","views_1","getQueryViews","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","getRef","queriesToStop","queries_1","childQueries","queryToStop","getServerCache","status","splitIndex","nextQueryTag_","operation","applyOperation","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder_SnapshotHolder","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider_AuthTokenProvider","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsManager","StatsListener_StatsListener","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter_StatsReporter","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventData","eventPath","getPath","EventQueue_EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","EventList","events_","eventFn","getEventRunner","PersistentConnection","util_querystring","querystringParams","params","arrayVal","ServerActions","ReadonlyRestClient_ReadonlyRestClient","ReadonlyRestClient","repoInfo_","onDataUpdate_","authTokenProvider_","log_","listens_","getListenId_","listen","currentHashFn","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","unlisten","refreshAuthToken","token","queryStringParameters","authTokenData","authToken","accessToken","url","secure","xhr","XMLHttpRequest","responseText","open","send","Database","Repo_Repo","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","onDisconnect_","persistentConnection_","authTokenProvider","stats_","getCollection","onConnectStatus_","authOverride","onServerInfoUpdate_","statsReporter_","getOrCreateReporter","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","timestamp","isMerge","taggedChildren","raw","taggedSnap","affectedPath","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","setWithPriority","newVal","serverValues","newNodeUnresolved","put","errorReason","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","forEachTree","onDisconnectCancel","forget","onDisconnectSet","onDisconnectPut","remember","onDisconnectSetWithPriority","onDisconnectUpdate","onDisconnectMerge","addEventCallbackForQuery","removeEventCallbackForQuery","interrupt","resume","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","incrementCounter","__database","stringLength","__WEBPACK_IMPORTED_MODULE_0__assert__","out","high","validation","util_validation","utils_promise","onDisconnect_OnDisconnect","OnDisconnect","repo_","cancel","objectToMerge","newObjectToMerge","TransactionResult_TransactionResult","TransactionResult","committed","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","Query","ValueIndex","PathIndex","IndexedFilter","RangedFilter_RangedFilter","RangedFilter","indexedFilter_","getIndex","index_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","newChild","optChangeAccumulator","updateFullNode","newSnap","filtered","filtersNodes","getIndexedFilter","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter_LimitedFilter","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","trackChildChange","newEventCache","QueryParams_QueryParams","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","hasLimit","hasAnchoredLimit","copy_","limit","newLimit","newParams","limitToFirst","limitToLast","VIEW_FROM_RIGHT","startAt","endAt","orderBy","getQueryObject","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","getNodeFilter","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","VALUE_INDEX","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference_Reference","Reference","repo","getKey","getParent","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","onDisconnect","__referenceConstructor","emptyChildrenSingleton","__WEBPACK_IMPORTED_MODULE_0__SortedMap__","__WEBPACK_IMPORTED_MODULE_1__Path__","EmptyChildren","tree","findRootMostMatchingPathAndValue","childExistingPathAndValue","toSet","newTree","fold_","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach","foreach_","__WEBPACK_IMPORTED_MODULE_1__Change__","__WEBPACK_IMPORTED_MODULE_2__snap_ChildrenNode__","__WEBPACK_IMPORTED_MODULE_3__snap_indexes_PriorityIndex__","oldChild","StatsCollection_StatsCollection","StatsCollection","counters_","amount","StatsManager_StatsManager","hashString","collections_","creatorFunction","reporters_","TransactionStatus","parser","DataSnapshot","TreeNode","childCount","Tree_Tree","Tree","parent_","node_","subTree","pathObj","setValue","updateParents_","clear","hasChildren","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","callbacks","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","q","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","from","abortTransactionsOnNode_","lastSent","RepoManager_RepoManager","_staticInstance","RepoManager","repos_","useRestClient_","getInstance","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","toURLString","__WEBPACK_IMPORTED_MODULE_0__core_util_util__","__WEBPACK_IMPORTED_MODULE_1__core_util_libs_parser__","__WEBPACK_IMPORTED_MODULE_2__core_util_Path__","__WEBPACK_IMPORTED_MODULE_3__utils_promise__","__WEBPACK_IMPORTED_MODULE_4__Reference__","__WEBPACK_IMPORTED_MODULE_5__core_Repo__","__WEBPACK_IMPORTED_MODULE_6__core_RepoManager__","__WEBPACK_IMPORTED_MODULE_7__utils_validation__","__WEBPACK_IMPORTED_MODULE_8__core_util_validation__","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","decodePath","pathStringDecoded","piece","decodeURIComponent","parseRepoInfo","__WEBPACK_IMPORTED_MODULE_1__RepoInfo__","dataURL","parseURL","subdomain","domain","webSocketOnly","scheme","port","colonInd","slashInd","parts","RepoInfo","__WEBPACK_IMPORTED_MODULE_2__storage_storage__","__WEBPACK_IMPORTED_MODULE_3__realtime_Constants__","persistenceKey","internalHost","needsQueryParam","isCacheableHost","isDemoHost","isCustomHost","updateHost","newHost","connectionURL","connURL","pairs","utils_validation","Event_DataEvent","DataEvent","getEventType","exportVal","CancelEvent","EventRegistration_ValueEventRegistration","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","ctx","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","EventRegistration_ChildEventRegistration","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","Query_Query","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","userCallback","cancelOrContext","firstCall","onceCallback","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","equalTo","queryObject","isEqual","sameRepo","samePath","sameQueryIdentifier","priorityHashText","validatePriorityNode","__WEBPACK_IMPORTED_MODULE_2__utils_obj__","__WEBPACK_IMPORTED_MODULE_3__nodeFromJSON__","valueNode","IndexMap","_defaultIndexMap","__WEBPACK_IMPORTED_MODULE_1__childSet__","__WEBPACK_IMPORTED_MODULE_4__indexes_PriorityIndex__","__WEBPACK_IMPORTED_MODULE_5__indexes_KeyIndex__","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","existingChildren","childList","sawIndexedValue","newIndex","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","buildChildSet","__WEBPACK_IMPORTED_MODULE_0__util_SortedMap__","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","keyFn","mapSortFn","buildBalancedTree","low","middle","base12","buildPennant","chunkSize","attachPennant","pennant","isOne","NAME_ONLY_COMPARATOR","__WEBPACK_IMPORTED_MODULE_0__util_util__","NAME_COMPARATOR","__WEBPACK_IMPORTED_MODULE_2__Index__","__WEBPACK_IMPORTED_MODULE_3__ChildrenNode__","__WEBPACK_IMPORTED_MODULE_4__Node__","__WEBPACK_IMPORTED_MODULE_5__nodeFromJSON__","indexPath_","extractChild","aChild","bChild","__WEBPACK_IMPORTED_MODULE_0__utils_validation__","__WEBPACK_IMPORTED_MODULE_1__core_util_validation__","__WEBPACK_IMPORTED_MODULE_3__core_snap_indexes_PriorityIndex__","ref_","exists","childPathString","childRef","generateWithValues","resolveDeferredValueTree","resolveDeferredValueSnapshot","__WEBPACK_IMPORTED_MODULE_2__SparseSnapshotTree__","__WEBPACK_IMPORTED_MODULE_3__snap_LeafNode__","__WEBPACK_IMPORTED_MODULE_4__snap_nodeFromJSON__","__WEBPACK_IMPORTED_MODULE_5__snap_indexes_PriorityIndex__","resolveDeferredValue","resolvedTree","rawPri","leafNode","childrenNode","__WEBPACK_IMPORTED_MODULE_0__util_Path__","__WEBPACK_IMPORTED_MODULE_1__snap_indexes_PriorityIndex__","__WEBPACK_IMPORTED_MODULE_2__util_CountedSet__","self_1","prefixPath","func","each","CountedSet","__WEBPACK_IMPORTED_MODULE_0__utils_obj__","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","ViewCache_ViewCache","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getCompleteServerSnap","ChildChangeAccumulator_ChildChangeAccumulator","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","CompleteChildSource_WriteTreeCompleteChildSource","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","ProcessorResult","viewCache","changes","ViewProcessor_ViewProcessor","ViewProcessor","filter_","assertIndexed","oldViewCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","curViewCache","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","EventGenerator_EventGenerator","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View_View","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","cache","path_1","maybeEvent","existing","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint_SyncPoint","views_","optCompleteServerCache","events_1","eventCacheComplete","hadCompleteView","viewQueryId","EventEmitter_EventEmitter","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor_VisibilityMonitor","VisibilityMonitor","hidden","visibilityChange","visible_","OnlineMonitor___extends","OnlineMonitor_OnlineMonitor","OnlineMonitor","online_","currentlyOnline","jwt_decode","header","claims","signature","isValidFormat","decoded","isAdmin","Connection","constants","PersistentConnection_PersistentConnection","PersistentConnection__typeof","PersistentConnection___extends","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","authOverride_","nextPersistentConnectionId_","interruptReasons_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","lastSessionId","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","sendRequest","onResponse","curReqNum","msg","listenSpec","sendListen_","req","payload","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","onDataMessage_","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","onReady_","sessionId","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","Constants","BrowserPollConnection","WebSocketConnection","TransportManager_TransportManager","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection_Connection","onMessage_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","bytesReceived","markConnectionHealthy","bytesSent","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","tryCleanupConnection","connId","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","start","onControl_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","ts","h","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","onMessage","closeConnections_","PacketReceiver_PacketReceiver","PacketReceiver","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","this_1","toProcess","BrowserPollConnection_BrowserPollConnection","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","transportSessionId","everConnected_","urlFn","curSegmentNum","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","BrowserPollConnection_FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","style","display","FirebaseIFrameScriptHolder","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","iframeContents","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","rstate","parentNode","__WEBPACK_IMPORTED_MODULE_0__app__","__WEBPACK_IMPORTED_MODULE_1__utils_assert__","__WEBPACK_IMPORTED_MODULE_2__core_util_util__","__WEBPACK_IMPORTED_MODULE_3__core_stats_StatsManager__","__WEBPACK_IMPORTED_MODULE_4__Constants__","__WEBPACK_IMPORTED_MODULE_5__utils_constants__","__WEBPACK_IMPORTED_MODULE_6__core_storage_storage__","__WEBPACK_IMPORTED_MODULE_7__utils_json__","__WEBPACK_IMPORTED_MODULE_8__utils_environment__","WebSocketImpl","MozWebSocket","WebSocket","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","platform","origin","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","userAgent","oldAndroidRegex","oldAndroidMatch","parseFloat","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","registerDatabase","instance","unused","__WEBPACK_IMPORTED_MODULE_5__database_core_RepoManager__","__WEBPACK_IMPORTED_MODULE_3__database_api_Reference__","__WEBPACK_IMPORTED_MODULE_2__database_api_Query__","__WEBPACK_IMPORTED_MODULE_1__database_api_Database__","enableLogging","__WEBPACK_IMPORTED_MODULE_4__database_core_util_util__","__WEBPACK_IMPORTED_MODULE_6__database_api_internal__","TEST_ACCESS","__WEBPACK_IMPORTED_MODULE_7__database_api_test_access__","originalModule","webpackPolyfill","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","__WEBPACK_IMPORTED_MODULE_0__realtime_WebSocketConnection__","__WEBPACK_IMPORTED_MODULE_1__realtime_BrowserPollConnection__","DataConnection","RealTimeConnection","hijackHash","ConnectionTarget","listens","__WEBPACK_IMPORTED_MODULE_0__core_RepoInfo__","__WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__","__WEBPACK_IMPORTED_MODULE_2__core_RepoManager__","__WEBPACK_IMPORTED_MODULE_3__realtime_Connection__","simpleListen","echo","onEcho","newHash","oldPut","opt_onComplete","opt_hash","firebaseRef","_forceRestClient","61","toBase64","arrayBuffer","uint8Version","Uint8Array","registerMessaging","factoryMethod","sw_controller","window_controller","namespaceExports","Messaging","_a","CODES","AVAILABLE_IN_WINDOW","AVAILABLE_IN_SW","SHOULD_BE_INHERITED","BAD_SENDER_ID","INCORRECT_GCM_SENDER_ID","PERMISSION_DEFAULT","PERMISSION_BLOCKED","UNSUPPORTED_BROWSER","NOTIFICATIONS_BLOCKED","FAILED_DEFAULT_REGISTRATION","SW_REGISTRATION_EXPECTED","GET_SUBSCRIPTION_FAILED","INVALID_SAVED_TOKEN","SW_REG_REDUNDANT","TOKEN_SUBSCRIBE_FAILED","TOKEN_SUBSCRIBE_NO_TOKEN","TOKEN_SUBSCRIBE_NO_PUSH_SET","USE_SW_BEFORE_GET_TOKEN","INVALID_DELETE_TOKEN","DELETE_TOKEN_NOT_FOUND","DELETE_SCOPE_NOT_FOUND","BG_HANDLER_FUNCTION_EXPECTED","NO_WINDOW_CLIENT_TO_MSG","UNABLE_TO_RESUBSCRIBE","NO_FCM_TOKEN_FOR_RESUBSCRIBE","FAILED_TO_DELETE_TOKEN","NO_SW_IN_REG","BAD_SCOPE","BAD_VAPID_KEY","BAD_SUBSCRIPTION","BAD_TOKEN","BAD_PUSH_SET","FAILED_DELETE_VAPID_KEY","ERROR_MAP","models_errors","codes","array_buffer_to_base64","FCM_APPLICATION_SERVER_KEY","SUBSCRIPTION_DETAILS","userVisibleOnly","applicationServerKey","fcm_details","ENDPOINT","APPLICATION_SERVER_KEY","SUBSCRIPTION_OPTIONS","FCM_TOKEN_OBJ_STORE","token_manager_TokenManager","TokenManager","errorFactory_","openDbPromise_","openDatabase_","indexedDB","onsuccess","onupgradeneeded","db","objectStore","createObjectStore","keyPath","createIndex","unique","closeDatabase","getTokenDetailsFromToken","fcmToken","getTokenDetailsFromSWScope_","swScope","scopeRequest","getAllTokenDetailsForSenderId_","senderId","senderIdTokens","cursorRequest","openCursor","cursor","continue","subscribeToFCM","subscription","pushSet","p256dh","auth","fcmSubscribeBody","endpoint","Headers","append","subscribeOptions","fetch","fcmTokenResponse","isSameSubscription_","masterTokenDetails","saveTokenDetails_","swRegistration","fcmPushSet","details","fcmSenderId","getSavedToken","ServiceWorkerRegistration","allTokenDetails","tokenDetails","pushManager","getSubscription","createToken","fcmTokenDetails","sub","deleteToken","token_manager","SENDER_ID_OPTION_NAME","controller_interface_ControllerInterface","ControllerInterface","messagingSenderId_","tokenManager_","currentPermission","getNotificationPermission_","notification_permission","getSWRegistration_","unsubscribe","requestPermission","useServiceWorker","optError","optCompleted","onTokenRefresh","setBackgroundMessageHandler","Notification","permission","getTokenManager","controller_interface","PARAMS","TYPE_OF_MSG","DATA","msgType","PUSH_MSG_RECEIVED","NOTIFICATION_CLICKED","createNewMsg","msgData","worker_page_message","TYPES_OF_MSG","default_sw","window_controller_WindowController","WindowController","registrationToUse_","manifestCheckPromise_","messageObserver_","tokenRefreshObserver_","onTokenRefresh_","setupSWMessageListener_","isSupported_","manifestCheck_","manifestTag","querySelector","manifestContent","managePermissionResult","permissionPromise","waitForRegistrationToActivate_","serviceWorker","installing","waiting","state","stateChangeListener","removeEventListener","register","browserErrorMessage","workerPageMessage","pushMessage","PushSubscription","sw_controller___extends","sw_controller_SWController","SWController","onPush_","onSubChange_","onNotificationClick_","bgMessageHandler_","msgPayload","handleMsgPromise","hasVisibleClients_","hasVisibleClients","notification","sendMessageToWindowClients_","notificationDetails","getNotificationData_","notificationTitle","showNotification","waitUntil","promiseChain","tokenManager","newSubscription","stopImmediatePropagation","clickAction","getWindowClient_","windowClient","clients","openWindow","internalMsg","attemptToMessageClient_","notificationInformation","assign","URL","matchAll","includeUncontrolled","clientList","suitableClient","focus","client","some","visibilityState","src_app","60","prependCode","unknown","FirebaseStorageError","Code","UNKNOWN","objectNotFound","OBJECT_NOT_FOUND","quotaExceeded","bucket","QUOTA_EXCEEDED","unauthenticated","UNAUTHENTICATED","unauthorized","UNAUTHORIZED","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","error_canceled","CANCELED","invalidUrl","INVALID_URL","invalidDefaultBucket","INVALID_DEFAULT_BUCKET","cannotSliceBlob","CANNOT_SLICE_BLOB","serverFileWrongSize","SERVER_FILE_WRONG_SIZE","noDownloadURL","NO_DOWNLOAD_URL","invalidArgument","INVALID_ARGUMENT","invalidArgumentCount","argMin","argMax","real","countPart","plural","INVALID_ARGUMENT_COUNT","appDeleted","APP_DELETED","invalidRootOperation","INVALID_ROOT_OPERATION","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","formatValidator","stringFormat","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","dataFromString","string","StringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","valid","hi","lo","percentEncodedBytes_","hasMinus","hasUnder","invalidChar","hasPlus","hasSlash","string_DataURLParts","rest","contentType","endsWith","end","taskStateFromInternalTaskState","InternalTaskState","RUNNING","PAUSING","CANCELING","TaskState","PAUSED","SUCCESS","ERROR","make","resolver","promise_external_resolve","promise_external_reject","isDef","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","isString","isNumber","isNativeBlob","isNativeBlobDefined","Blob","jsonObjectOrNull","path_parent","lastIndexOf","canonicalChildPath","component","lastComponent","makeNormalUrl","urlPart","domainBase","apiBaseUrl","makeDownloadUrl","downloadBase","makeUploadUrl","apiUploadBaseUrl","makeQueryString","encode","queryPart","nextPart","noXform_","metadata","xformPath","fullPath","getMappings","mappingsXformPath","xformSize","size","xformTokens","tokens","alt","mappings_","mappings","Mapping","nameMapping","xform","sizeMapping","addRef","authWrapper","generateRef","loc","location_Location","makeStorageReference","fromResource","resource","mapping","local","server","fromResourceString","resourceString","toResourceString","writable","metadataValidator","validate","specs","passed","minArgs","maxArgs","validator","and_","v1","v2","stringSpec","opt_validator","opt_optional","stringValidator","args_ArgSpec","uploadDataSpec","ArrayBuffer","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","sliceBlob","blob","webkitSlice","mozSlice","array_contains","elem","array_clone","arraylike","handlerCheck","cndn","metadataHandler","handler","text","sharedErrorHandler","errorHandler","newErr","getStatus","setServerResponseProp","serverResponseProp","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","RequestInfo","updateMetadata","Content-Type","deleteObject","successCodes","determineContentType_","metadataForUpload_","opt_metadata","multipartUpload","bucketOnlyServerUrl","X-Goog-Upload-Protocol","boundary","metadataString","preBlobPart","postBlobPart","blob_FbsBlob","maxUploadRetryTime","uploadData","checkResumeHeader_","opt_allowed","getResponseHeader","createResumableUpload","X-Goog-Upload-Command","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","getResumableUploadStatus","sizeString","ResumableUploadStatus","continueResumableUpload","opt_status","opt_progressCallback","uploadStatus","newCurrent","current","bytesToUpload","total","bytesLeft","startByte","endByte","uploadCommand","X-Goog-Upload-Offset","progressCallback","async_async","argsToForward","canceled","cancelState","triggerCallback","triggeredCallback","callWithDelay","millis","timeoutId","hitTimeout","waitSeconds","waitMillis","stop","wasTimeout","stopped","addAuthHeader_","addVersionHeader_","number","makeRequest","pool","request_NetworkRequest","additionalRetryCodes","factory","opt_url","service_Service","xhriopool_XhrIoPool","registerStorage","TaskEvent","Storage","reference_Reference","STORAGE_TYPE","ErrorCode","defaultMaxOperationRetryTime","defaultMaxUploadRetryTime","minSafeInteger","code_","message_","serverResponse_","codeProp","codeEquals","serverResponse","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","INVALID_CHECKSUM","INVALID_EVENT_NAME","NO_DEFAULT_BUCKET","opt_contentType","DataURLParts","STATE_CHANGED","xhrio_network_NetworkXhrIo","NetworkXhrIo","sent_","xhr_","errorCode_","NO_ERROR","sendPromise_","ABORT","NETWORK_ERROR","opt_body","opt_headers","setRequestHeader","getErrorCode","getResponseText","abort","addUploadProgressListener","upload","removeUploadProgressListener","XhrIoPool","createXhrIo","Location","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","gsModify","httpModify","gsRegex","gsIndices","httpRegex","httpIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","opt_local","opt_writable","opt_xform","ArgSpec","FbsBlob","opt_elideCopy","blobType","data_","byteLength","size_","type_","realBlob","sliced","buffer","blobby","uint8Arrays","finalLength_1","merged_1","index_1","observer_Observer","Observer","opt_error","opt_complete","UploadTaskSnapshot","bytesTransferred","totalBytes","urls","task_UploadTask","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","getAuthToken","createRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","multipartRequest","transferred","old","notifyObservers_","wasPaused","externalState","completed","typeValidator","_p","nextOrObserverValidator","nextValidator","observerValidator","nextOrObserverMessage","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","notifyObserver_","finishPromise_","triggered","pause","newRef","newPath","throwIfRoot_","putString","getDownloadURL","failrequest_FailRequest","FailRequest","appDelete","requestmap_RequestMap","RequestMap","map_","id_","addRequest","unmap","authwrapper_AuthWrapper","AuthWrapper","maker","requestMaker","bucket_","deleted_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","config","_error","deleteApp","setMaxUploadRetryTime","setMaxOperationRetryTime","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","errorCallback_","progressCallback_","timeout_","doTheRequest","backoffCallback","progressListener","progressEvent","lengthComputable","RequestEndStatus","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","Service","authWrapperBucket","internals_","service_ServiceInternals","ServiceInternals"],"mappings":"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","file":"firebase.js","sourcesContent":["var firebase = (function() {\n            var window = typeof window === 'undefined' ? self : window;\n          return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonpFirebase\"];\n/******/ \twindow[\"webpackJsonpFirebase\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/ \t\tif(executeModules) {\n/******/ \t\t\tfor(i=0; i < executeModules.length; i++) {\n/******/ \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\treturn result;\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// objects to store loaded and loading chunks\n/******/ \tvar installedChunks = {\n/******/ \t\t4: 0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar installedChunkData = installedChunks[chunkId];\n/******/ \t\tif(installedChunkData === 0) {\n/******/ \t\t\treturn new Promise(function(resolve) { resolve(); });\n/******/ \t\t}\n/******/\n/******/ \t\t// a Promise means \"currently loading\".\n/******/ \t\tif(installedChunkData) {\n/******/ \t\t\treturn installedChunkData[2];\n/******/ \t\t}\n/******/\n/******/ \t\t// setup Promise in chunk cache\n/******/ \t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n/******/ \t\t});\n/******/ \t\tinstalledChunkData[2] = promise;\n/******/\n/******/ \t\t// start chunk loading\n/******/ \t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\tvar script = document.createElement('script');\n/******/ \t\tscript.type = 'text/javascript';\n/******/ \t\tscript.charset = 'utf-8';\n/******/ \t\tscript.async = true;\n/******/ \t\tscript.timeout = 120000;\n/******/\n/******/ \t\tif (__webpack_require__.nc) {\n/******/ \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n/******/ \t\t}\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".js\";\n/******/ \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n/******/ \t\tscript.onerror = script.onload = onScriptComplete;\n/******/ \t\tfunction onScriptComplete() {\n/******/ \t\t\t// avoid mem leaks in IE.\n/******/ \t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\tclearTimeout(timeout);\n/******/ \t\t\tvar chunk = installedChunks[chunkId];\n/******/ \t\t\tif(chunk !== 0) {\n/******/ \t\t\t\tif(chunk) {\n/******/ \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = undefined;\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\thead.appendChild(script);\n/******/\n/******/ \t\treturn promise;\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 24:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export patchCapture */\n/* unused harmony export FirebaseError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ErrorFactory; });\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error.captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nvar FirebaseError = /** @class */function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        } else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function get() {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}();\n\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        } else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}();\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PromiseImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Deferred; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return attachDummyErrorHandler; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_globalScope__ = __webpack_require__(32);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PromiseImpl = __WEBPACK_IMPORTED_MODULE_0__utils_globalScope__[\"a\" /* globalScope */].Promise || __webpack_require__(57);\n/**\r\n * A deferred promise implementation.\r\n */\nvar Deferred = /** @class */function () {\n    /** @constructor */\n    function Deferred() {\n        var self = this;\n        this.resolve = null;\n        this.reject = null;\n        this.promise = new PromiseImpl(function (resolve, reject) {\n            self.resolve = resolve;\n            self.reject = reject;\n        });\n    }\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} opt_nodeCallback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\n    Deferred.prototype.wrapCallback = function (opt_nodeCallback) {\n        var self = this;\n        /**\r\n           * @param {?Error} error\r\n           * @param {?=} opt_value\r\n           */\n        function meta(error, opt_value) {\n            if (error) {\n                self.reject(error);\n            } else {\n                self.resolve(opt_value);\n            }\n            if (typeof opt_nodeCallback === 'function') {\n                attachDummyErrorHandler(self.promise);\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (opt_nodeCallback.length === 1) {\n                    opt_nodeCallback(error);\n                } else {\n                    opt_nodeCallback(error, opt_value);\n                }\n            }\n        }\n        return meta;\n    };\n    return Deferred;\n}();\n\n/**\r\n * Chrome (and maybe other browsers) report an Error in the console if you reject a promise\r\n * and nobody handles the error. This is normally a good thing, but this will confuse devs who\r\n * never intended to use promises in the first place. So in some cases (in particular, if the\r\n * developer attached a callback), we should attach a dummy resolver to the promise to suppress\r\n * this error.\r\n *\r\n * Note: We can't do this all the time, since it breaks the Promise spec (though in the obscure\r\n * 3.3.3 section related to upgrading non-compliant promises).\r\n * @param {!firebase.Promise} promise\r\n */\nvar attachDummyErrorHandler = function attachDummyErrorHandler(promise) {\n    promise.catch(function () {});\n};\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createSubscribe;\n/* unused harmony export async */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_promise__ = __webpack_require__(3);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\nvar ObserverProxy = /** @class */function () {\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = __WEBPACK_IMPORTED_MODULE_0__utils_promise__[\"b\" /* PromiseImpl */].resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task.then(function () {\n            executor(_this);\n        }).catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined && error === undefined && complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        } else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    } else {\n                        observer.complete();\n                    }\n                } catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                } catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}();\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        __WEBPACK_IMPORTED_MODULE_0__utils_promise__[\"b\" /* PromiseImpl */].resolve(true).then(function () {\n            fn.apply(void 0, args);\n        }).catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\nfunction implementsAnyMethods(obj, methods) {\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return globalScope; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar scope;\nif (typeof global !== 'undefined') {\n    scope = global;\n} else if (typeof self !== 'undefined') {\n    scope = self;\n} else {\n    try {\n        scope = Function('return this')();\n    } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n}\nvar globalScope = scope;\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(33)))\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = deepCopy;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = deepExtend;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = patchProperty;\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports) {\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This is the Array.prototype.findIndex polyfill from MDN\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\r\n */\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return -1.\n            return -1;\n        }\n    });\n}\n/**\r\n * This is the Array.prototype.find polyfill from MDN\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\r\n */\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function value(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var o = Object(this);\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n            // 5. Let k be 0.\n            var k = 0;\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(58).setImmediate))\n\n/***/ }),\n\n/***/ 58:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(59);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n\n/***/ 59:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(33), __webpack_require__(34)))\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./src/utils/shims.ts\nvar shims = __webpack_require__(56);\nvar shims_default = /*#__PURE__*/__webpack_require__.n(shims);\n\n// EXTERNAL MODULE: ./src/app/subscribe.ts\nvar subscribe = __webpack_require__(31);\n\n// EXTERNAL MODULE: ./src/app/errors.ts\nvar errors = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./src/utils/promise.ts\nvar promise = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./src/utils/deep_copy.ts\nvar deep_copy = __webpack_require__(35);\n\n// CONCATENATED MODULE: ./src/app/firebase_app.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\nvar contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\nvar firebase_app_FirebaseAppImpl = /** @class */function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = Object(deep_copy[\"a\" /* deepCopy */])(options);\n        this.INTERNAL = {\n            getUid: function getUid() {\n                return null;\n            },\n            getToken: function getToken() {\n                return promise[\"b\" /* PromiseImpl */].resolve(null);\n            },\n            addAuthTokenListener: function addAuthTokenListener(callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () {\n                    return callback(null);\n                }, 0);\n            },\n            removeAuthTokenListener: function removeAuthTokenListener(callback) {\n                tokenListeners = tokenListeners.filter(function (listener) {\n                    return listener !== callback;\n                });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function get() {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new promise[\"b\" /* PromiseImpl */](function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        }).then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return promise[\"b\" /* PromiseImpl */].all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        }).then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) {\n            instanceIdentifier = DEFAULT_ENTRY_NAME;\n        }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        Object(deep_copy[\"b\" /* deepExtend */])(this, props);\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}();\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\nfirebase_app_FirebaseAppImpl.prototype.name && firebase_app_FirebaseAppImpl.prototype.options || firebase_app_FirebaseAppImpl.prototype.delete || console.log('dc');\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: promise[\"b\" /* PromiseImpl */],\n        SDK_VERSION: '4.5.0',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: subscribe[\"a\" /* createSubscribe */],\n            ErrorFactory: errors[\"a\" /* ErrorFactory */],\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: promise[\"b\" /* PromiseImpl */],\n            deepExtend: deep_copy[\"b\" /* deepExtend */]\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    Object(deep_copy[\"c\" /* patchProperty */])(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    Object(deep_copy[\"c\" /* patchProperty */])(app, 'App', firebase_app_FirebaseAppImpl);\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        } else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new firebase_app_FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) {\n            return apps_[name];\n        });\n    }\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function serviceNamespace(appArg) {\n            if (appArg === void 0) {\n                appArg = app();\n            }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            Object(deep_copy[\"b\" /* deepExtend */])(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        firebase_app_FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\n    function extendNamespace(props) {\n        Object(deep_copy[\"b\" /* deepExtend */])(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar firebase_app_errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" + 'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'\n};\nvar appErrors = new errors[\"a\" /* ErrorFactory */]('app', 'Firebase', firebase_app_errors);\n// CONCATENATED MODULE: ./src/app.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Import the needed shims\n\n// Import the createFirebaseNamespace function\n\n// Export a single instance of firebase app\nvar firebase = createFirebaseNamespace();\n/* harmony default export */ var src_app = __webpack_exports__[\"default\"] = (firebase);\n\n/***/ })\n\n/******/ });\n          })().default;\n\n\n// WEBPACK FOOTER //\n// firebase-app.js"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonpFirebase\"];\n \twindow[\"webpackJsonpFirebase\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6cb149ba8cc0d40c95b7","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\nexport type ErrorList<T> = { [code: string]: string };\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString: () => string;\n}\n\nlet captureStackTrace: (obj: Object, fn?: Function) => void = (Error as any)\n  .captureStackTrace;\n\n// Export for faking in tests\nexport function patchCapture(captureFake?: any): any {\n  let result: any = captureStackTrace;\n  captureStackTrace = captureFake;\n  return result;\n}\n\nexport interface FirebaseError {\n  // Unique code for error - format is service/error-code-string\n  code: string;\n\n  // Developer-friendly error message.\n  message: string;\n\n  // Always 'FirebaseError'\n  name: string;\n\n  // Where available - stack backtrace in a string\n  stack: string;\n}\n\nexport class FirebaseError implements FirebaseError {\n  public stack: string;\n  public name: string;\n\n  constructor(public code: string, public message: string) {\n    let stack: string;\n    // We want the stack value, if implemented by Error\n    if (captureStackTrace) {\n      // Patches this.stack, omitted calls above ErrorFactory#create\n      captureStackTrace(this, ErrorFactory.prototype.create);\n    } else {\n      let err = Error.apply(this, arguments);\n      this.name = ERROR_NAME;\n      // Make non-enumerable getter for the property.\n      Object.defineProperty(this, 'stack', {\n        get: function() {\n          return err.stack;\n        }\n      });\n    }\n  }\n}\n\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype) as FirebaseError;\nFirebaseError.prototype.constructor = FirebaseError;\n(FirebaseError.prototype as any).name = ERROR_NAME;\n\nexport class ErrorFactory<T extends string> {\n  // Matches {$name}, by default.\n  public pattern = /\\{\\$([^}]+)}/g;\n\n  constructor(\n    private service: string,\n    private serviceName: string,\n    private errors: ErrorList<T>\n  ) {\n    // empty\n  }\n\n  create(code: T, data?: { [prop: string]: StringLike }): FirebaseError {\n    if (data === undefined) {\n      data = {};\n    }\n\n    let template = this.errors[code as string];\n\n    let fullCode = this.service + '/' + code;\n    let message: string;\n\n    if (template === undefined) {\n      message = 'Error';\n    } else {\n      message = template.replace(this.pattern, (match, key) => {\n        let value = data![key];\n        return value !== undefined ? value.toString() : '<' + key + '?>';\n      });\n    }\n\n    // Service: Error message (service/code).\n    message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n    let err = new FirebaseError(fullCode, message);\n\n    // Populate the Error object with message parts for programmatic\n    // accesses (e.g., e.file).\n    for (let prop in data) {\n      if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n        continue;\n      }\n      (err as any)[prop] = data[prop];\n    }\n\n    return err;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/errors.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { globalScope } from '../utils/globalScope';\n\nexport const PromiseImpl =\n    (globalScope.Promise || require('promise-polyfill')) as PromiseConstructor;\n\n/**\n * A deferred promise implementation.\n */\nexport class Deferred {\n  resolve;\n  reject;\n  promise;\n\n  /** @constructor */\n  constructor() {\n    var self = this;\n    this.resolve = null;\n    this.reject = null;\n    this.promise = new PromiseImpl(function(resolve, reject) {\n      self.resolve = resolve;\n      self.reject = reject;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} opt_nodeCallback\n   * @return {!function(?(Error), ?=)}\n   */\n  wrapCallback(opt_nodeCallback?) {\n    var self = this;\n    /**\n       * @param {?Error} error\n       * @param {?=} opt_value\n       */\n    function meta(error, opt_value) {\n      if (error) {\n        self.reject(error);\n      } else {\n        self.resolve(opt_value);\n      }\n      if (typeof opt_nodeCallback === 'function') {\n        attachDummyErrorHandler(self.promise);\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (opt_nodeCallback.length === 1) {\n          opt_nodeCallback(error);\n        } else {\n          opt_nodeCallback(error, opt_value);\n        }\n      }\n    }\n    return meta;\n  }\n}\n\n/**\n * Chrome (and maybe other browsers) report an Error in the console if you reject a promise\n * and nobody handles the error. This is normally a good thing, but this will confuse devs who\n * never intended to use promises in the first place. So in some cases (in particular, if the\n * developer attached a callback), we should attach a dummy resolver to the promise to suppress\n * this error.\n *\n * Note: We can't do this all the time, since it breaks the Promise spec (though in the obscure\n * 3.3.3 section related to upgrading non-compliant promises).\n * @param {!firebase.Promise} promise\n */\nexport const attachDummyErrorHandler = function(promise) {\n  promise.catch(() => {});\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/promise.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\n// Allow for any of the Observer methods to be undefined.\nexport interface PartialObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n}\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nimport { PromiseImpl } from '../utils/promise';\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  let proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = PromiseImpl.resolve();\n  private finalized = false;\n  private finalError: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T) {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error) {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete() {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver: PartialObserver<T> | Function,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: (nextOrObserver as any) as NextFn<T>,\n        error: error,\n        complete: complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    let unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number) {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: any[]) => {\n    PromiseImpl.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj: any, methods: string[]): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (let method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/subscribe.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet scope;\n\nif (typeof global !== 'undefined') {\n  scope = global;\n} else if (typeof self !== 'undefined') {\n  scope = self;\n} else {\n  try {\n    scope = Function('return this')();\n  } catch (e) {\n    throw new Error(\n      'polyfill failed because global object is unavailable in this environment'\n    );\n  }\n}\n\nexport const globalScope = scope;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/globalScope.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 33\n// module chunks = 4","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 34\n// module chunks = 4","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value);\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nexport function deepExtend(target: any, source: any): any {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      let dateValue = (source as any) as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (let prop in source) {\n    if (!source.hasOwnProperty(prop)) {\n      continue;\n    }\n    target[prop] = deepExtend(target[prop], source[prop]);\n  }\n\n  return target;\n}\n\n// TODO: Really needed (for JSCompiler type checking)?\nexport function patchProperty(obj: any, prop: string, value: any) {\n  obj[prop] = value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/deep_copy.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the Array.prototype.findIndex polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n */\nif (!Array.prototype.findIndex) {\n  Object.defineProperty(Array.prototype, 'findIndex', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return k.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return k;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return -1.\n      return -1;\n    }\n  });\n}\n\n/**\n * This is the Array.prototype.find polyfill from MDN\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * https://tc39.github.io/ecma262/#sec-array.prototype.find\n */\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/shims.ts","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise-polyfill/promise.js\n// module id = 57\n// module chunks = 4","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 58\n// module chunks = 4","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 59\n// module chunks = 4","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createSubscribe, Observer, Subscribe } from './subscribe';\nimport { ErrorFactory, FirebaseError } from './errors';\nimport { PromiseImpl } from '../utils/promise';\nimport { patchProperty, deepCopy, deepExtend } from '../utils/deep_copy';\n\nexport interface FirebaseAuthTokenData {\n  accessToken: string;\n}\n\nexport interface FirebaseAppInternals {\n  getToken(refreshToken?: boolean): Promise<FirebaseAuthTokenData | null>;\n  getUid(): string | null;\n  addAuthTokenListener(fn: (token: string | null) => void): void;\n  removeAuthTokenListener(fn: (token: string | null) => void): void;\n}\n\nexport type FirebaseOptions = {\n  apiKey?: string;\n  authDomain?: string;\n  databaseURL?: string;\n  projectId?: string;\n  storageBucket?: string;\n  messagingSenderId?: string;\n  [name: string]: any;\n};\n\n// An instance of the firebase.App\nexport interface FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n\n  INTERNAL: FirebaseAppInternals;\n}\n\nexport interface FirebaseServiceInternals {\n  /**\n   * Delete the service and free it's resources - called from\n   * app.delete().\n   */\n  delete(): Promise<void>;\n}\n\n// Services are exposed through instances - each of which is associated with a\n// FirebaseApp.\nexport interface FirebaseService {\n  app: FirebaseApp;\n  INTERNAL?: FirebaseServiceInternals;\n}\n\nexport type AppHook = (event: string, app: FirebaseApp) => void;\n\n/**\n * Firebase Services create instances given a Firebase App instance and can\n * optionally add properties and methods to each FirebaseApp via the extendApp()\n * function.\n */\nexport interface FirebaseServiceFactory {\n  (\n    app: FirebaseApp,\n    extendApp?: (props: { [prop: string]: any }) => void,\n    instanceString?: string\n  ): FirebaseService;\n}\n\n/**\n * All ServiceNamespaces extend from FirebaseServiceNamespace\n */\nexport interface FirebaseServiceNamespace<T extends FirebaseService> {\n  (app?: FirebaseApp): T;\n}\n\nexport interface FirebaseErrorFactory<T> {\n  create(code: T, data?: { [prop: string]: any }): FirebaseError;\n}\n\nexport interface FirebaseErrorFactoryClass {\n  new (\n    service: string,\n    serviceName: string,\n    errors: { [code: string]: string }\n  ): FirebaseErrorFactory<any>;\n}\n\nexport interface FirebaseNamespace {\n  /**\n   * Create (and intialize) a FirebaseApp.\n   *\n   * @param options Options to configure the services use in the App.\n   * @param name The optional name of the app to initialize ('[DEFAULT]' if\n   *   none)\n   */\n  initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n\n  app: {\n    /**\n     * Retrieve an instance of a FirebaseApp.\n     *\n     * Usage: firebase.app()\n     *\n     * @param name The optional name of the app to return ('[DEFAULT]' if none)\n     */\n    (name?: string): FirebaseApp;\n\n    /**\n     * For testing FirebaseApp instances:\n     *   app() instanceof firebase.app.App\n     * DO NOT call this constuctor directly (use firebase.app() instead).\n     */\n    App: Function;\n  };\n\n  /**\n   * A (read-only) array of all the initialized Apps.\n   */\n  apps: FirebaseApp[];\n\n  // Inherit the type information of our exported Promise implementation from\n  // es6-promises.\n  Promise: typeof Promise;\n\n  // The current SDK version ('4.5.0').\n  SDK_VERSION: string;\n\n  // TODO: Migrate to firebase-app-internal.d.ts\n  INTERNAL: {\n    /**\n     * Internal API to register a Firebase Service into the firebase namespace.\n     *\n     * Each service will create a child namespace (firease.name) which acts as\n     * both a namespace for service specific properties, and also as a service\n     * accessor function (firebase.name() or firebase.name(app)).\n     *\n     * @param name The Firebase Service being registered.\n     * @param createService Factory function to create a service instance.\n     * @param serviceProperties Properties to copy to the service's namespace.\n     * @param appHook All appHooks called before intializeApp returns to caller.\n     * @param allowMultipleInstances Whether the registered service supports\n     *   multiple instances per app. If not specified, the default is false.\n     */\n    registerService(\n      name: string,\n      createService: FirebaseServiceFactory,\n      serviceProperties?: { [prop: string]: any },\n      appHook?: AppHook,\n      allowMultipleInstances?: boolean\n    ): FirebaseServiceNamespace<FirebaseService>;\n\n    /**\n     * Just used for testing to start from a fresh namespace.\n     */\n    createFirebaseNamespace(): FirebaseNamespace;\n\n    /**\n     * Internal API to install properties on the top-level firebase namespace.\n     * @prop props The top level properties of this object are copied to the\n     *   namespace.\n     */\n    extendNamespace(props: { [prop: string]: any }): void;\n\n    /**\n     * Create a Subscribe function.  A proxy Observer is created so that\n     * events can be sent to single Observer to be fanned out automatically.\n     */\n    createSubscribe<T>(\n      executor: (observer: Observer<T>) => void,\n      onNoObservers?: (observer: Observer<T>) => void\n    ): Subscribe<T>;\n\n    /**\n     * Utility exposed for internal testing.\n     */\n    deepExtend(target: any, source: any): any;\n\n    /**\n     * Internal API to remove an app from the list of registered apps.\n     */\n    removeApp(name: string): void;\n\n    /**\n     * Service factories for each registered service.\n     */\n    factories: { [name: string]: FirebaseServiceFactory };\n\n    /*\n     * Convert service name to factory name to use.\n     */\n    useAsService(app: FirebaseApp, serviceName: string): string | null;\n\n    /**\n     * Use to construct all thrown FirebaseError's.\n     */\n    ErrorFactory: FirebaseErrorFactoryClass;\n  };\n}\n\nconst contains = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n// An array to capture listeners before the true auth functions\n// exist\nlet tokenListeners = [];\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nclass FirebaseAppImpl implements FirebaseApp {\n  private options_: FirebaseOptions;\n  private name_: string;\n  private isDeleted_ = false;\n  private services_: {\n    [name: string]: {\n      [serviceName: string]: FirebaseService;\n    };\n  } = {};\n\n  public INTERNAL;\n\n  constructor(\n    options: FirebaseOptions,\n    name: string,\n    private firebase_: FirebaseNamespace\n  ) {\n    this.name_ = name;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n    this.INTERNAL = {\n      getUid: () => null,\n      getToken: () => PromiseImpl.resolve(null),\n      addAuthTokenListener: (callback: (token: string | null) => void) => {\n        tokenListeners.push(callback);\n        // Make sure callback is called, asynchronously, in the absence of the auth module\n        setTimeout(() => callback(null), 0);\n      },\n      removeAuthTokenListener: callback => {\n        tokenListeners = tokenListeners.filter(\n          listener => listener !== callback\n        );\n      }\n    };\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new PromiseImpl(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n        let services: FirebaseService[] = [];\n        Object.keys(this.services_).forEach(serviceKey => {\n          Object.keys(this.services_[serviceKey]).forEach(instanceKey => {\n            services.push(this.services_[serviceKey][instanceKey]);\n          });\n        });\n        return PromiseImpl.all(\n          services.map(service => {\n            return service.INTERNAL!.delete();\n          })\n        );\n      })\n      .then((): void => {\n        this.isDeleted_ = true;\n        this.services_ = {};\n      });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   * \n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   * \n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   * \n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = this.firebase_.INTERNAL.factories[name](\n        this,\n        this.extendApp.bind(this),\n        instanceSpecifier\n      );\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  }\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: any }): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n\n    /**\n     * If the app has overwritten the addAuthTokenListener stub, forward\n     * the active token listeners on to the true fxn.\n     * \n     * TODO: This function is required due to our current module\n     * structure. Once we are able to rely strictly upon a single module\n     * implementation, this code should be refactored and Auth should \n     * provide these stubs and the upgrade logic\n     */\n    if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n      tokenListeners.forEach(listener => {\n        this.INTERNAL.addAuthTokenListener(listener);\n      });\n      tokenListeners = [];\n    }\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      error('app-deleted', { name: this.name_ });\n    }\n  }\n}\n\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n  FirebaseAppImpl.prototype.delete ||\n  console.log('dc');\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  let apps_: { [name: string]: FirebaseApp } = {};\n  let factories: { [service: string]: FirebaseServiceFactory } = {};\n  let appHooks: { [service: string]: AppHook } = {};\n\n  // A namespace is a plain JavaScript Object.\n  let namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    __esModule: true,\n    initializeApp: initializeApp,\n    app: app as any,\n    apps: null as any,\n    Promise: PromiseImpl,\n    SDK_VERSION: '4.5.0',\n    INTERNAL: {\n      registerService: registerService,\n      createFirebaseNamespace: createFirebaseNamespace,\n      extendNamespace: extendNamespace,\n      createSubscribe: createSubscribe,\n      ErrorFactory: ErrorFactory,\n      removeApp: removeApp,\n      factories: factories,\n      useAsService: useAsService,\n      Promise: PromiseImpl,\n      deepExtend: deepExtend\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  patchProperty(namespace, 'default', namespace);\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    let app = apps_[name];\n    callAppHooks(app, 'delete');\n    delete apps_[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps_, name)) {\n      error('no-app', { name: name });\n    }\n    return apps_[name];\n  }\n\n  patchProperty(app, 'App', FirebaseAppImpl);\n\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp {\n    if (name === undefined) {\n      name = DEFAULT_ENTRY_NAME;\n    } else {\n      if (typeof name !== 'string' || name === '') {\n        error('bad-app-name', { name: name + '' });\n      }\n    }\n    if (contains(apps_, name)) {\n      error('duplicate-app', { name: name });\n    }\n\n    let app = new FirebaseAppImpl(\n      options,\n      name!,\n      namespace as FirebaseNamespace\n    );\n\n    apps_[name!] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps_).map(name => apps_[name]);\n  }\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: any },\n    appHook?: AppHook,\n    allowMultipleInstances?: boolean\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // Cannot re-register a service that already exists\n    if (factories[name]) {\n      error('duplicate-service', { name: name });\n    }\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n      });\n    }\n\n    // The Service namespace is an accessor function ...\n    const serviceNamespace = (appArg: FirebaseApp = app()) => {\n      if (typeof (appArg as any)[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        error('invalid-app-argument', { name: name });\n      }\n\n      // Forward service instance lookup to the FirebaseApp.\n      return (appArg as any)[name]();\n    };\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n    }\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    (namespace as any)[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    FirebaseAppImpl.prototype[name] = function(...args) {\n      const serviceFxn = this._getService.bind(this, name);\n      return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n    };\n\n    return serviceNamespace;\n  }\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: any }): void {\n    deepExtend(namespace, props);\n  }\n\n  function callAppHooks(app: FirebaseApp, eventName: string) {\n    Object.keys(factories).forEach(serviceName => {\n      // Ignore virtual services\n      let factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    });\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    let useService = name;\n    let options = app.options;\n\n    return useService;\n  }\n\n  return (namespace as any) as FirebaseNamespace;\n}\n\ntype AppError =\n  | 'no-app'\n  | 'bad-app-name'\n  | 'duplicate-app'\n  | 'app-deleted'\n  | 'duplicate-service'\n  | 'sa-not-supported'\n  | 'invalid-app-argument';\n\nfunction error(code: AppError, args?: { [name: string]: any }) {\n  throw appErrors.create(code, args);\n}\n\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nlet errors: { [code: string]: string } = {\n  'no-app':\n    \"No Firebase App '{$name}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  'bad-app-name': \"Illegal App name: '{$name}\",\n  'duplicate-app': \"Firebase App named '{$name}' already exists\",\n  'app-deleted': \"Firebase App named '{$name}' already deleted\",\n  'duplicate-service': \"Firebase service named '{$name}' already registered\",\n  'sa-not-supported':\n    'Initializing the Firebase SDK with a service ' +\n    'account is only allowed in a Node.js environment. On client ' +\n    'devices, you should instead initialize the SDK with an api key and ' +\n    'auth domain',\n  'invalid-app-argument':\n    'firebase.{$name}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\nlet appErrors = new ErrorFactory<AppError>('app', 'Firebase', errors);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/firebase_app.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Import the needed shims\nimport './utils/shims';\n\n// Import the createFirebaseNamespace function\nimport { createFirebaseNamespace, FirebaseNamespace } from './app/firebase_app';\n\n// Export a single instance of firebase app\nconst firebase: FirebaseNamespace = createFirebaseNamespace();\n\nexport default firebase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","(function(){var h,aa=aa||{},k=this,ba=function(a){return void 0!==a},m=function(a){return\"string\"==typeof a},ca=function(a){return\"boolean\"==typeof a},da=function(){},ea=function(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";\nif(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";else if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b},fa=function(a){return null===a},ha=function(a){return\"array\"==ea(a)},ia=function(a){var b=ea(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length},p=function(a){return\"function\"==ea(a)},q=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==\nb},ja=function(a,b,c){return a.call.apply(a.bind,arguments)},ka=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}},r=function(a,b,c){r=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?ja:ka;return r.apply(null,arguments)},la=function(a,b){var c=\nArray.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}},ma=Date.now||function(){return+new Date},t=function(a,b){function c(){}c.prototype=b.prototype;a.Vc=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Ng=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};var u=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))};t(u,Error);u.prototype.name=\"CustomError\";var na=function(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")},oa=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")},wa=function(a){if(!pa.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(qa,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(ra,\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(sa,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(ta,\"&quot;\"));-1!=a.indexOf(\"'\")&&\n(a=a.replace(ua,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(va,\"&#0;\"));return a},qa=/&/g,ra=/</g,sa=/>/g,ta=/\"/g,ua=/'/g,va=/\\x00/g,pa=/[\\x00&<>\"']/,v=function(a,b){return-1!=a.indexOf(b)},xa=function(a,b){return a<b?-1:a>b?1:0};var ya=function(a,b){b.unshift(a);u.call(this,na.apply(null,b));b.shift()};t(ya,u);ya.prototype.name=\"AssertionError\";\nvar za=function(a,b,c,d){var e=\"Assertion failed\";if(c){e+=\": \"+c;var f=d}else a&&(e+=\": \"+a,f=b);throw new ya(\"\"+e,f||[]);},w=function(a,b,c){a||za(\"\",null,b,Array.prototype.slice.call(arguments,2));return a},Aa=function(a,b){throw new ya(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));},Ba=function(a,b,c){\"number\"==typeof a||za(\"Expected number but got %s: %s.\",[ea(a),a],b,Array.prototype.slice.call(arguments,2));return a},Ca=function(a,b,c){m(a)||za(\"Expected string but got %s: %s.\",\n[ea(a),a],b,Array.prototype.slice.call(arguments,2))},Da=function(a,b,c){p(a)||za(\"Expected function but got %s: %s.\",[ea(a),a],b,Array.prototype.slice.call(arguments,2))};var Fa=function(){this.Uc=\"\";this.gf=Ea};Fa.prototype.qb=!0;Fa.prototype.ob=function(){return this.Uc};Fa.prototype.toString=function(){return\"Const{\"+this.Uc+\"}\"};var Ga=function(a){if(a instanceof Fa&&a.constructor===Fa&&a.gf===Ea)return a.Uc;Aa(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"},Ea={},Ha=function(a){var b=new Fa;b.Uc=a;return b};Ha(\"\");var Ja=function(){this.Mc=\"\";this.hf=Ia};Ja.prototype.qb=!0;Ja.prototype.ob=function(){return this.Mc};Ja.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.Mc+\"}\"};\nvar Ka=function(a){if(a instanceof Ja&&a.constructor===Ja&&a.hf===Ia)return a.Mc;Aa(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+ea(a));return\"type_error:TrustedResourceUrl\"},Ma=function(a,b){a=La(a,b);b=new Ja;b.Mc=a;return b},La=function(a,b){var c=Ga(a);if(!Na.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);return c.replace(Oa,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+\nJSON.stringify(b));a=b[e];return a instanceof Fa?Ga(a):encodeURIComponent(String(a))})},Oa=/%{(\\w+)}/g,Na=/^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank(#|$)/i,Ia={};var Pa=Array.prototype.indexOf?function(a,b,c){w(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(m(a))return m(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){w(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},Qa=function(a,b){for(var c=m(a)?\na.split(\"\"):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)},Ra=Array.prototype.map?function(a,b,c){w(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=m(a)?a.split(\"\"):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},Sa=Array.prototype.some?function(a,b,c){w(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1},\nUa=function(a){a:{var b=Ta;for(var c=a.length,d=m(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:m(a)?a.charAt(b):a[b]},Va=function(a,b){return 0<=Pa(a,b)},Xa=function(a,b){b=Pa(a,b);var c;(c=0<=b)&&Wa(a,b);return c},Wa=function(a,b){w(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length},Ya=function(a,b){var c=0;Qa(a,function(d,e){b.call(void 0,d,e,a)&&Wa(a,e)&&c++})},Za=function(a){return Array.prototype.concat.apply([],arguments)},\n$a=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var ab=function(a){return Ra(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};var bb;a:{var cb=k.navigator;if(cb){var db=cb.userAgent;if(db){bb=db;break a}}bb=\"\"}var y=function(a){return v(bb,a)};var eb=function(a,b){for(var c in a)b.call(void 0,a[c],c,a)},fb=function(a,b){for(var c in a)if(b.call(void 0,a[c],c,a))return!0;return!1},gb=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b},hb=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b},ib=function(a){for(var b in a)return!1;return!0},jb=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0},kb=function(a){var b={},c;for(c in a)b[c]=a[c];return b},lb=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \"),\nmb=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<lb.length;f++)c=lb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var nb=function(a){nb[\" \"](a);return a};nb[\" \"]=da;var pb=function(a,b){var c=ob;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var qb=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),rb=y(\"Edge\"),sb=rb||z,tb=y(\"Gecko\")&&!(v(bb.toLowerCase(),\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),ub=v(bb.toLowerCase(),\"webkit\")&&!y(\"Edge\"),vb=function(){var a=k.document;return a?a.documentMode:void 0},wb;\na:{var xb=\"\",yb=function(){var a=bb;if(tb)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(rb)return/Edge\\/([\\d\\.]+)/.exec(a);if(z)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(ub)return/WebKit\\/(\\S+)/.exec(a);if(qb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();yb&&(xb=yb?yb[1]:\"\");if(z){var Ab=vb();if(null!=Ab&&Ab>parseFloat(xb)){wb=String(Ab);break a}}wb=xb}\nvar Bb=wb,ob={},A=function(a){return pb(a,function(){for(var b=0,c=oa(String(Bb)).split(\".\"),d=oa(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||\"\",l=d[f]||\"\";do{g=/(\\d*)(\\D*)(.*)/.exec(g)||[\"\",\"\",\"\",\"\"];l=/(\\d*)(\\D*)(.*)/.exec(l)||[\"\",\"\",\"\",\"\"];if(0==g[0].length&&0==l[0].length)break;b=xa(0==g[1].length?0:parseInt(g[1],10),0==l[1].length?0:parseInt(l[1],10))||xa(0==g[2].length,0==l[2].length)||xa(g[2],l[2]);g=g[3];l=l[3]}while(0==b)}return 0<=b})},Cb;var Db=k.document;\nCb=Db&&z?vb()||(\"CSS1Compat\"==Db.compatMode?parseInt(Bb,10):5):void 0;var Eb=null,Fb=null,Hb=function(a){var b=\"\";Gb(a,function(a){b+=String.fromCharCode(a)});return b},Gb=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=Fb[c];if(null!=e)return e;if(!/^[\\s\\xa0]*$/.test(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}Ib();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),l=c(64);if(64===l&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=l&&b(g<<6&192|l))}},Ib=function(){if(!Eb){Eb={};Fb={};for(var a=0;65>a;a++)Eb[a]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".charAt(a),\nFb[Eb[a]]=a,62<=a&&(Fb[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\".charAt(a)]=a)}};var Jb=function(){this.Da=-1};var Mb=function(a,b){this.Da=-1;this.Da=64;this.rc=k.Uint8Array?new Uint8Array(this.Da):Array(this.Da);this.Yc=this.rb=0;this.l=[];this.$f=a;this.Ee=b;this.Bg=k.Int32Array?new Int32Array(64):Array(64);ba(Kb)||(Kb=k.Int32Array?new Int32Array(Lb):Lb);this.reset()},Kb;t(Mb,Jb);for(var Nb=[],Ob=0;63>Ob;Ob++)Nb[Ob]=0;var Pb=Za(128,Nb);Mb.prototype.reset=function(){this.Yc=this.rb=0;this.l=k.Int32Array?new Int32Array(this.Ee):$a(this.Ee)};\nvar Qb=function(a){var b=a.rc;w(b.length==a.Da);for(var c=a.Bg,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,g=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+g|0}d=a.l[0]|0;e=a.l[1]|0;var l=a.l[2]|0,n=a.l[3]|0,F=a.l[4]|0,zb=a.l[5]|0,hc=a.l[6]|0;f=a.l[7]|0;for(b=0;64>b;b++){var vi=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&l^e&l)|0;g=F&zb^~F&hc;f=f+((F>>>\n6|F<<26)^(F>>>11|F<<21)^(F>>>25|F<<7))|0;g=g+(Kb[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=hc;hc=zb;zb=F;F=n+g|0;n=l;l=e;e=d;d=g+vi|0}a.l[0]=a.l[0]+d|0;a.l[1]=a.l[1]+e|0;a.l[2]=a.l[2]+l|0;a.l[3]=a.l[3]+n|0;a.l[4]=a.l[4]+F|0;a.l[5]=a.l[5]+zb|0;a.l[6]=a.l[6]+hc|0;a.l[7]=a.l[7]+f|0};\nMb.prototype.update=function(a,b){ba(b)||(b=a.length);var c=0,d=this.rb;if(m(a))for(;c<b;)this.rc[d++]=a.charCodeAt(c++),d==this.Da&&(Qb(this),d=0);else if(ia(a))for(;c<b;){var e=a[c++];if(!(\"number\"==typeof e&&0<=e&&255>=e&&e==(e|0)))throw Error(\"message must be a byte array\");this.rc[d++]=e;d==this.Da&&(Qb(this),d=0)}else throw Error(\"message must be string or array\");this.rb=d;this.Yc+=b};\nMb.prototype.digest=function(){var a=[],b=8*this.Yc;56>this.rb?this.update(Pb,56-this.rb):this.update(Pb,this.Da-(this.rb-56));for(var c=63;56<=c;c--)this.rc[c]=b&255,b/=256;Qb(this);for(c=b=0;c<this.$f;c++)for(var d=24;0<=d;d-=8)a[b++]=this.l[c]>>d&255;return a};\nvar Lb=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var Sb=function(){Mb.call(this,8,Rb)};t(Sb,Mb);var Rb=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];var Tb=Object.freeze||function(a){return a};var Ub=function(){this.Ma=this.Ma;this.Jc=this.Jc};Ub.prototype.Ma=!1;Ub.prototype.isDisposed=function(){return this.Ma};Ub.prototype.lb=function(){if(this.Jc)for(;this.Jc.length;)this.Jc.shift()()};var Vb=!z||9<=Number(Cb),Wb=z&&!A(\"9\");!ub||A(\"528\");tb&&A(\"1.9b\")||z&&A(\"8\")||qb&&A(\"9.5\")||ub&&A(\"528\");tb&&!A(\"8\")||z&&A(\"9\");var Xb=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",da,b);k.removeEventListener(\"test\",da,b);return a}();var B=function(a,b){this.type=a;this.currentTarget=this.target=b;this.defaultPrevented=this.Wa=!1;this.Se=!0};B.prototype.stopPropagation=function(){this.Wa=!0};B.prototype.preventDefault=function(){this.defaultPrevented=!0;this.Se=!1};var Yb=function(a,b){B.call(this,a?a.type:\"\");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key=\"\";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType=\"\";this.P=null;a&&this.init(a,b)};t(Yb,B);var Zb=Tb({2:\"touch\",3:\"pen\",4:\"mouse\"});\nYb.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;if(b=a.relatedTarget){if(tb){a:{try{nb(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.offsetX=ub||void 0!==a.offsetX?a.offsetX:a.layerX,this.offsetY=ub||void 0!==a.offsetY?a.offsetY:a.layerY,this.clientX=void 0!==a.clientX?a.clientX:a.pageX,\nthis.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||\"\";this.charCode=a.charCode||(\"keypress\"==c?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\nm(a.pointerType)?a.pointerType:Zb[a.pointerType]||\"\";this.state=a.state;this.P=a;a.defaultPrevented&&this.preventDefault()};Yb.prototype.stopPropagation=function(){Yb.Vc.stopPropagation.call(this);this.P.stopPropagation?this.P.stopPropagation():this.P.cancelBubble=!0};Yb.prototype.preventDefault=function(){Yb.Vc.preventDefault.call(this);var a=this.P;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Wb)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};\nYb.prototype.Ef=function(){return this.P};var $b=\"closure_listenable_\"+(1E6*Math.random()|0),ac=0;var bc=function(a,b,c,d,e){this.listener=a;this.Nc=null;this.src=b;this.type=c;this.capture=!!d;this.wc=e;this.key=++ac;this.Bb=this.qc=!1},cc=function(a){a.Bb=!0;a.listener=null;a.Nc=null;a.src=null;a.wc=null};var dc=function(a){this.src=a;this.I={};this.kc=0};dc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.I[f];a||(a=this.I[f]=[],this.kc++);var g=ec(a,b,d,e);-1<g?(b=a[g],c||(b.qc=!1)):(b=new bc(b,this.src,f,!!d,e),b.qc=c,a.push(b));return b};dc.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.I))return!1;var e=this.I[a];b=ec(e,b,c,d);return-1<b?(cc(e[b]),Wa(e,b),0==e.length&&(delete this.I[a],this.kc--),!0):!1};\nvar fc=function(a,b){var c=b.type;c in a.I&&Xa(a.I[c],b)&&(cc(b),0==a.I[c].length&&(delete a.I[c],a.kc--))};dc.prototype.td=function(a,b,c,d){a=this.I[a.toString()];var e=-1;a&&(e=ec(a,b,c,d));return-1<e?a[e]:null};dc.prototype.hasListener=function(a,b){var c=ba(a),d=c?a.toString():\"\",e=ba(b);return fb(this.I,function(a){for(var f=0;f<a.length;++f)if(!(c&&a[f].type!=d||e&&a[f].capture!=b))return!0;return!1})};\nvar ec=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Bb&&f.listener==b&&f.capture==!!c&&f.wc==d)return e}return-1};var gc=\"closure_lm_\"+(1E6*Math.random()|0),ic={},jc=0,lc=function(a,b,c,d,e){if(d&&d.once)kc(a,b,c,d,e);else if(ha(b))for(var f=0;f<b.length;f++)lc(a,b[f],c,d,e);else c=mc(c),a&&a[$b]?a.listen(b,c,q(d)?!!d.capture:!!d,e):nc(a,b,c,!1,d,e)},nc=function(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var g=q(e)?!!e.capture:!!e,l=oc(a);l||(a[gc]=l=new dc(a));c=l.add(b,c,d,g,f);if(!c.Nc){d=pc();c.Nc=d;d.src=a;d.listener=c;if(a.addEventListener)Xb||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),\nd,e);else if(a.attachEvent)a.attachEvent(qc(b.toString()),d);else throw Error(\"addEventListener and attachEvent are unavailable.\");jc++}},pc=function(){var a=rc,b=Vb?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b},kc=function(a,b,c,d,e){if(ha(b))for(var f=0;f<b.length;f++)kc(a,b[f],c,d,e);else c=mc(c),a&&a[$b]?sc(a,b,c,q(d)?!!d.capture:!!d,e):nc(a,b,c,!0,d,e)},tc=function(a,b,c,d,e){if(ha(b))for(var f=0;f<b.length;f++)tc(a,b[f],c,d,\ne);else d=q(d)?!!d.capture:!!d,c=mc(c),a&&a[$b]?a.ga.remove(String(b),c,d,e):a&&(a=oc(a))&&(b=a.td(b,c,d,e))&&uc(b)},uc=function(a){if(\"number\"!=typeof a&&a&&!a.Bb){var b=a.src;if(b&&b[$b])fc(b.ga,a);else{var c=a.type,d=a.Nc;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent&&b.detachEvent(qc(c),d);jc--;(c=oc(b))?(fc(c,a),0==c.kc&&(c.src=null,b[gc]=null)):cc(a)}}},qc=function(a){return a in ic?ic[a]:ic[a]=\"on\"+a},wc=function(a,b,c,d){var e=!0;if(a=oc(a))if(b=a.I[b.toString()])for(b=\nb.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.Bb&&(f=vc(f,d),e=e&&!1!==f)}return e},vc=function(a,b){var c=a.listener,d=a.wc||a.src;a.qc&&uc(a);return c.call(d,b)},rc=function(a,b){if(a.Bb)return!0;if(!Vb){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Yb(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=\n!0}d=[];for(e=b.currentTarget;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;!b.Wa&&0<=e;e--){b.currentTarget=d[e];var f=wc(d[e],a,!0,b);c=c&&f}for(e=0;!b.Wa&&e<d.length;e++)b.currentTarget=d[e],f=wc(d[e],a,!1,b),c=c&&f}return c}return vc(a,new Yb(b,this))},oc=function(a){a=a[gc];return a instanceof dc?a:null},xc=\"__closure_events_fn_\"+(1E9*Math.random()>>>0),mc=function(a){w(a,\"Listener can not be null.\");if(p(a))return a;w(a.handleEvent,\"An object listener must have handleEvent method.\");\na[xc]||(a[xc]=function(b){return a.handleEvent(b)});return a[xc]};var yc=/^[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}$/;var Ac=function(){this.xa=\"\";this.ff=zc};Ac.prototype.qb=!0;Ac.prototype.ob=function(){return this.xa};Ac.prototype.toString=function(){return\"SafeUrl{\"+this.xa+\"}\"};\nvar Bc=function(a){if(a instanceof Ac&&a.constructor===Ac&&a.ff===zc)return a.xa;Aa(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+ea(a));return\"type_error:SafeUrl\"},Cc=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i,Ec=function(a){if(a instanceof Ac)return a;a=a.qb?a.ob():String(a);Cc.test(a)||(a=\"about:invalid#zClosurez\");return Dc(a)},zc={},Dc=function(a){var b=new Ac;b.xa=a;return b};Dc(\"about:blank\");var Hc=function(a){var b=[];Fc(new Gc,a,b);return b.join(\"\")},Gc=function(){this.Oc=void 0},Fc=function(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(ha(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),e=d[f],Fc(a,a.Oc?a.Oc.call(d,String(f),e):e,c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");f=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(e=b[d],\"function\"!=typeof e&&(c.push(f),\nIc(d,c),c.push(\":\"),Fc(a,a.Oc?a.Oc.call(b,d,e):e,c),f=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Ic(b,c);break;case \"number\":c.push(isFinite(b)&&!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}},Jc={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Kc=/\\uffff/.test(\"\\uffff\")?/[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g,\nIc=function(a,b){b.push('\"',a.replace(Kc,function(a){var b=Jc[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Jc[a]=b);return b}),'\"')};var Lc=function(){};Lc.prototype.ie=null;var Mc=function(a){return a.ie||(a.ie=a.Cd())};var Nc,Oc=function(){};t(Oc,Lc);Oc.prototype.sc=function(){var a=Pc(this);return a?new ActiveXObject(a):new XMLHttpRequest};Oc.prototype.Cd=function(){var a={};Pc(this)&&(a[0]=!0,a[1]=!0);return a};\nvar Pc=function(a){if(!a.De&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.De=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.De};Nc=new Oc;var Qc=function(){};t(Qc,Lc);Qc.prototype.sc=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new Rc;throw Error(\"Unsupported browser\");};Qc.prototype.Cd=function(){return{}};\nvar Rc=function(){this.oa=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText=\"\";this.status=-1;this.statusText=this.responseXML=null;this.oa.onload=r(this.If,this);this.oa.onerror=r(this.ye,this);this.oa.onprogress=r(this.Jf,this);this.oa.ontimeout=r(this.Kf,this)};h=Rc.prototype;h.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.oa.open(a,b)};\nh.send=function(a){if(a)if(\"string\"==typeof a)this.oa.send(a);else throw Error(\"Only string data is supported\");else this.oa.send()};h.abort=function(){this.oa.abort()};h.setRequestHeader=function(){};h.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.oa.contentType:\"\"};h.If=function(){this.status=200;this.responseText=this.oa.responseText;Sc(this,4)};h.ye=function(){this.status=500;this.responseText=\"\";Sc(this,4)};h.Kf=function(){this.ye()};\nh.Jf=function(){this.status=200;Sc(this,1)};var Sc=function(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()};Rc.prototype.getAllResponseHeaders=function(){return\"content-type: \"+this.oa.contentType};var Tc=function(a,b,c){this.Vf=c;this.tf=a;this.kg=b;this.Ic=0;this.xc=null};Tc.prototype.get=function(){if(0<this.Ic){this.Ic--;var a=this.xc;this.xc=a.next;a.next=null}else a=this.tf();return a};Tc.prototype.put=function(a){this.kg(a);this.Ic<this.Vf&&(this.Ic++,a.next=this.xc,this.xc=a)};var Uc=function(a){k.setTimeout(function(){throw a;},0)},Vc,Wc=function(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;\na=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==c)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(ba(c.next)){c=c.next;var a=c.me;c.me=null;a()}};return function(a){d.next={me:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?\nfunction(a){var b=document.createElement(\"SCRIPT\");b.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Xc=function(){this.cd=this.hb=null},Zc=new Tc(function(){return new Yc},function(a){a.reset()},100);Xc.prototype.add=function(a,b){var c=Zc.get();c.set(a,b);this.cd?this.cd.next=c:(w(!this.hb),this.hb=c);this.cd=c};Xc.prototype.remove=function(){var a=null;this.hb&&(a=this.hb,this.hb=this.hb.next,this.hb||(this.cd=null),a.next=null);return a};var Yc=function(){this.next=this.scope=this.rd=null};Yc.prototype.set=function(a,b){this.rd=a;this.scope=b;this.next=null};\nYc.prototype.reset=function(){this.next=this.scope=this.rd=null};var dd=function(a,b){$c||ad();bd||($c(),bd=!0);cd.add(a,b)},$c,ad=function(){if(-1!=String(k.Promise).indexOf(\"[native code]\")){var a=k.Promise.resolve(void 0);$c=function(){a.then(ed)}}else $c=function(){var a=ed;!p(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(Vc||(Vc=Wc()),Vc(a)):k.setImmediate(a)}},bd=!1,cd=new Xc,ed=function(){for(var a;a=cd.remove();){try{a.rd.call(a.scope)}catch(b){Uc(b)}Zc.put(a)}bd=!1};var fd=function(a){return q(a)?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):void 0===a?\"undefined\":null===a?\"null\":typeof a},gd=function(a){return(a=a&&a.ownerDocument)&&(a.defaultView||a.parentWindow)||k};var hd=!z||9<=Number(Cb);!tb&&!z||z&&9<=Number(Cb)||tb&&A(\"1.9.1\");z&&A(\"9\");var jd=function(){this.xa=\"\";this.ef=id};jd.prototype.qb=!0;jd.prototype.ob=function(){return this.xa};jd.prototype.toString=function(){return\"SafeHtml{\"+this.xa+\"}\"};var kd=function(a){if(a instanceof jd&&a.constructor===jd&&a.ef===id)return a.xa;Aa(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+ea(a));return\"type_error:SafeHtml\"},id={};jd.prototype.Qf=function(a){this.xa=a;return this};var ld=function(a,b){var c=gd(a);\"undefined\"!=typeof c.HTMLScriptElement&&\"undefined\"!=typeof c.Element&&w(a&&(a instanceof c.HTMLScriptElement||!(a instanceof c.Element)),\"Argument is not a HTMLScriptElement (or a non-Element mock); got: %s\",fd(a));a.src=Ka(b)};var md=function(a){var b=document;return m(a)?b.getElementById(a):a},od=function(a,b){eb(b,function(b,d){b&&b.qb&&(b=b.ob());\"style\"==d?a.style.cssText=b:\"class\"==d?a.className=b:\"for\"==d?a.htmlFor=b:nd.hasOwnProperty(d)?a.setAttribute(nd[d],b):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,b):a[d]=b})},nd={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",\ntype:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"},qd=function(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!hd&&g&&(g.name||g.type)){f=[\"<\",f];g.name&&f.push(' name=\"',wa(g.name),'\"');if(g.type){f.push(' type=\"',wa(g.type),'\"');var l={};mb(l,g);delete l.type;g=l}f.push(\">\");f=f.join(\"\")}f=e.createElement(f);g&&(m(g)?f.className=g:ha(g)?f.className=g.join(\" \"):od(f,g));2<d.length&&pd(e,f,d);return f},pd=function(a,b,c){function d(c){c&&b.appendChild(m(c)?a.createTextNode(c):\nc)}for(var e=2;e<c.length;e++){var f=c[e];!ia(f)||q(f)&&0<f.nodeType?d(f):x(rd(f)?$a(f):f,d)}},rd=function(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(p(a))return\"function\"==typeof a.item}return!1};var sd=function(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0},td=function(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};var C=function(a,b){this.aa=0;this.za=void 0;this.kb=this.ua=this.w=null;this.vc=this.pd=!1;if(a!=da)try{var c=this;a.call(b,function(a){ud(c,2,a)},function(a){if(!(a instanceof vd))try{if(a instanceof Error)throw a;throw Error(\"Promise rejected.\");}catch(e){}ud(c,3,a)})}catch(d){ud(this,3,d)}},wd=function(){this.next=this.context=this.tb=this.Ua=this.child=null;this.Hb=!1};wd.prototype.reset=function(){this.context=this.tb=this.Ua=this.child=null;this.Hb=!1};\nvar xd=new Tc(function(){return new wd},function(a){a.reset()},100),yd=function(a,b,c){var d=xd.get();d.Ua=a;d.tb=b;d.context=c;return d},D=function(a){if(a instanceof C)return a;var b=new C(da);ud(b,2,a);return b},E=function(a){return new C(function(b,c){c(a)})},Ad=function(a,b,c){zd(a,b,c,null)||dd(la(b,a))},Bd=function(a){return new C(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},g=function(a){c(a)},l=0,n;l<a.length;l++)n=a[l],Ad(n,la(f,l),g);else b(e)})},\nCd=function(a){return new C(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{Df:!0,value:f}:{Df:!1,reason:f};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],Ad(g,la(e,f,!0),la(e,f,!1));else b(d)})};C.prototype.then=function(a,b,c){null!=a&&Da(a,\"opt_onFulfilled should be a function.\");null!=b&&Da(b,\"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\");return Dd(this,p(a)?a:null,p(b)?b:null,c)};sd(C);\nvar Fd=function(a,b){b=yd(b,b,void 0);b.Hb=!0;Ed(a,b);return a};C.prototype.g=function(a,b){return Dd(this,null,a,b)};C.prototype.cancel=function(a){0==this.aa&&dd(function(){var b=new vd(a);Gd(this,b)},this)};\nvar Gd=function(a,b){if(0==a.aa)if(a.w){var c=a.w;if(c.ua){for(var d=0,e=null,f=null,g=c.ua;g&&(g.Hb||(d++,g.child==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(0==c.aa&&1==d?Gd(c,b):(f?(d=f,w(c.ua),w(null!=d),d.next==c.kb&&(c.kb=d),d.next=d.next.next):Hd(c),Id(c,e,3,b)))}a.w=null}else ud(a,3,b)},Ed=function(a,b){a.ua||2!=a.aa&&3!=a.aa||Jd(a);w(null!=b.Ua);a.kb?a.kb.next=b:a.ua=b;a.kb=b},Dd=function(a,b,c,d){var e=yd(null,null,null);e.child=new C(function(a,g){e.Ua=b?function(c){try{var e=b.call(d,\nc);a(e)}catch(F){g(F)}}:a;e.tb=c?function(b){try{var e=c.call(d,b);!ba(e)&&b instanceof vd?g(b):a(e)}catch(F){g(F)}}:g});e.child.w=a;Ed(a,e);return e.child};C.prototype.yg=function(a){w(1==this.aa);this.aa=0;ud(this,2,a)};C.prototype.zg=function(a){w(1==this.aa);this.aa=0;ud(this,3,a)};\nvar ud=function(a,b,c){0==a.aa&&(a===c&&(b=3,c=new TypeError(\"Promise cannot resolve to itself\")),a.aa=1,zd(c,a.yg,a.zg,a)||(a.za=c,a.aa=b,a.w=null,Jd(a),3!=b||c instanceof vd||Kd(a,c)))},zd=function(a,b,c,d){if(a instanceof C)return null!=b&&Da(b,\"opt_onFulfilled should be a function.\"),null!=c&&Da(c,\"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?\"),Ed(a,yd(b||da,c||null,d)),!0;if(td(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(p(e))return Ld(a,\ne,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1},Ld=function(a,b,c,d,e){var f=!1,g=function(a){f||(f=!0,c.call(e,a))},l=function(a){f||(f=!0,d.call(e,a))};try{b.call(a,g,l)}catch(n){l(n)}},Jd=function(a){a.pd||(a.pd=!0,dd(a.yf,a))},Hd=function(a){var b=null;a.ua&&(b=a.ua,a.ua=b.next,b.next=null);a.ua||(a.kb=null);null!=b&&w(null!=b.Ua);return b};C.prototype.yf=function(){for(var a;a=Hd(this);)Id(this,a,this.aa,this.za);this.pd=!1};\nvar Id=function(a,b,c,d){if(3==c&&b.tb&&!b.Hb)for(;a&&a.vc;a=a.w)a.vc=!1;if(b.child)b.child.w=null,Md(b,c,d);else try{b.Hb?b.Ua.call(b.context):Md(b,c,d)}catch(e){Nd.call(null,e)}xd.put(b)},Md=function(a,b,c){2==b?a.Ua.call(a.context,c):a.tb&&a.tb.call(a.context,c)},Kd=function(a,b){a.vc=!0;dd(function(){a.vc&&Nd.call(null,b)})},Nd=Uc,vd=function(a){u.call(this,a)};t(vd,u);vd.prototype.name=\"cancel\";\nvar Od=function(a,b){this.Rc=[];this.Le=a;this.qe=b||null;this.Pb=this.nb=!1;this.za=void 0;this.ae=this.ge=this.gd=!1;this.Zc=0;this.w=null;this.hd=0};Od.prototype.cancel=function(a){if(this.nb)this.za instanceof Od&&this.za.cancel();else{if(this.w){var b=this.w;delete this.w;a?b.cancel(a):(b.hd--,0>=b.hd&&b.cancel())}this.Le?this.Le.call(this.qe,this):this.ae=!0;this.nb||Pd(this,new Qd)}};Od.prototype.oe=function(a,b){this.gd=!1;Rd(this,a,b)};\nvar Rd=function(a,b,c){a.nb=!0;a.za=c;a.Pb=!b;Sd(a)},Ud=function(a){if(a.nb){if(!a.ae)throw new Td;a.ae=!1}};Od.prototype.callback=function(a){Ud(this);Vd(a);Rd(this,!0,a)};var Pd=function(a,b){Ud(a);Vd(b);Rd(a,!1,b)},Vd=function(a){w(!(a instanceof Od),\"An execution sequence may not be initiated with a blocking Deferred.\")},Xd=function(a,b){Wd(a,null,b,void 0)},Wd=function(a,b,c,d){w(!a.ge,\"Blocking Deferreds can not be re-used\");a.Rc.push([b,c,d]);a.nb&&Sd(a)};\nOd.prototype.then=function(a,b,c){var d,e,f=new C(function(a,b){d=a;e=b});Wd(this,d,function(a){a instanceof Qd?f.cancel():e(a)});return f.then(a,b,c)};sd(Od);\nvar Yd=function(a){return Sa(a.Rc,function(a){return p(a[1])})},Sd=function(a){if(a.Zc&&a.nb&&Yd(a)){var b=a.Zc,c=Zd[b];c&&(k.clearTimeout(c.Qb),delete Zd[b]);a.Zc=0}a.w&&(a.w.hd--,delete a.w);b=a.za;for(var d=c=!1;a.Rc.length&&!a.gd;){var e=a.Rc.shift(),f=e[0],g=e[1];e=e[2];if(f=a.Pb?g:f)try{var l=f.call(e||a.qe,b);ba(l)&&(a.Pb=a.Pb&&(l==b||l instanceof Error),a.za=b=l);if(td(b)||\"function\"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.gd=!0}catch(n){b=n,a.Pb=!0,Yd(a)||(c=!0)}}a.za=b;d&&(l=r(a.oe,\na,!0),d=r(a.oe,a,!1),b instanceof Od?(Wd(b,l,d),b.ge=!0):b.then(l,d));c&&(b=new $d(b),Zd[b.Qb]=b,a.Zc=b.Qb)},Td=function(){u.call(this)};t(Td,u);Td.prototype.message=\"Deferred has already fired\";Td.prototype.name=\"AlreadyCalledError\";var Qd=function(){u.call(this)};t(Qd,u);Qd.prototype.message=\"Deferred was canceled\";Qd.prototype.name=\"CanceledError\";var $d=function(a){this.Qb=k.setTimeout(r(this.xg,this),0);this.ba=a};\n$d.prototype.xg=function(){w(Zd[this.Qb],\"Cannot throw an error that is not scheduled.\");delete Zd[this.Qb];throw this.ba;};var Zd={};var ee=function(a){var b={},c=b.document||document,d=Ka(a),e=document.createElement(\"SCRIPT\"),f={Te:e,jc:void 0},g=new Od(ae,f),l=null,n=null!=b.timeout?b.timeout:5E3;0<n&&(l=window.setTimeout(function(){be(e,!0);Pd(g,new ce(1,\"Timeout reached for loading script \"+d))},n),f.jc=l);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(be(e,b.Og||!1,l),g.callback(null))};e.onerror=function(){be(e,!0,l);Pd(g,new ce(0,\"Error while loading script \"+d))};\nf=b.attributes||{};mb(f,{type:\"text/javascript\",charset:\"UTF-8\"});od(e,f);ld(e,a);de(c).appendChild(e);return g},de=function(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement},ae=function(){if(this&&this.Te){var a=this.Te;a&&\"SCRIPT\"==a.tagName&&be(a,!0,this.jc)}},be=function(a,b,c){null!=c&&k.clearTimeout(c);a.onload=da;a.onerror=da;a.onreadystatechange=da;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)},ce=function(a,\nb){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);u.call(this,c);this.code=a};t(ce,u);var fe=function(a,b,c,d,e){this.reset(a,b,c,d,e)};fe.prototype.se=null;var ge=0;fe.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||ge++;d||ma();this.Vb=a;this.Zf=b;delete this.se};fe.prototype.Ue=function(a){this.Vb=a};var he=function(a){this.Je=a;this.ze=this.kd=this.Vb=this.w=null},ie=function(a,b){this.name=a;this.value=b};ie.prototype.toString=function(){return this.name};var je=new ie(\"SEVERE\",1E3),ke=new ie(\"INFO\",800),le=new ie(\"CONFIG\",700),me=new ie(\"FINE\",500);he.prototype.getName=function(){return this.Je};he.prototype.getParent=function(){return this.w};he.prototype.Ue=function(a){this.Vb=a};var ne=function(a){if(a.Vb)return a.Vb;if(a.w)return ne(a.w);Aa(\"Root logger has no level set.\");return null};\nhe.prototype.log=function(a,b,c){if(a.value>=ne(this).value)for(p(b)&&(b=b()),a=new fe(a,String(b),this.Je),c&&(a.se=c),c=\"log:\"+a.Zf,(b=k.console)&&b.timeStamp&&b.timeStamp(c),(b=k.msWriteProfilerMark)&&b(c),c=this;c;){var d=c,e=a;if(d.ze)for(var f=0;b=d.ze[f];f++)b(e);c=c.getParent()}};he.prototype.info=function(a,b){this.log(ke,a,b)};he.prototype.config=function(a,b){this.log(le,a,b)};\nvar oe={},pe=null,qe=function(a){pe||(pe=new he(\"\"),oe[\"\"]=pe,pe.Ue(le));var b;if(!(b=oe[a])){b=new he(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=qe(a.substr(0,c));c.kd||(c.kd={});c.kd[d]=b;b.w=c;oe[a]=b}return b};var G=function(){Ub.call(this);this.ga=new dc(this);this.kf=this;this.Kd=null};t(G,Ub);G.prototype[$b]=!0;h=G.prototype;h.addEventListener=function(a,b,c,d){lc(this,a,b,c,d)};h.removeEventListener=function(a,b,c,d){tc(this,a,b,c,d)};\nh.dispatchEvent=function(a){re(this);var b=this.Kd;if(b){var c=[];for(var d=1;b;b=b.Kd)c.push(b),w(1E3>++d,\"infinite loop\")}b=this.kf;d=a.type||a;if(m(a))a=new B(a,b);else if(a instanceof B)a.target=a.target||b;else{var e=a;a=new B(d,b);mb(a,e)}e=!0;if(c)for(var f=c.length-1;!a.Wa&&0<=f;f--){var g=a.currentTarget=c[f];e=se(g,d,!0,a)&&e}a.Wa||(g=a.currentTarget=b,e=se(g,d,!0,a)&&e,a.Wa||(e=se(g,d,!1,a)&&e));if(c)for(f=0;!a.Wa&&f<c.length;f++)g=a.currentTarget=c[f],e=se(g,d,!1,a)&&e;return e};\nh.lb=function(){G.Vc.lb.call(this);if(this.ga){var a=this.ga,b=0,c;for(c in a.I){for(var d=a.I[c],e=0;e<d.length;e++)++b,cc(d[e]);delete a.I[c];a.kc--}}this.Kd=null};h.listen=function(a,b,c,d){re(this);return this.ga.add(String(a),b,!1,c,d)};\nvar sc=function(a,b,c,d,e){a.ga.add(String(b),c,!0,d,e)},se=function(a,b,c,d){b=a.ga.I[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.Bb&&g.capture==c){var l=g.listener,n=g.wc||g.src;g.qc&&fc(a.ga,g);e=!1!==l.call(n,d)&&e}}return e&&0!=d.Se};G.prototype.td=function(a,b,c,d){return this.ga.td(String(a),b,c,d)};G.prototype.hasListener=function(a,b){return this.ga.hasListener(ba(a)?String(a):void 0,b)};var re=function(a){w(a.ga,\"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?\")};var te=\"StopIteration\"in k?k.StopIteration:{message:\"StopIteration\",stack:\"\"},ue=function(){};ue.prototype.next=function(){throw te;};ue.prototype.jf=function(){return this};var H=function(a,b){a&&a.log(me,b,void 0)};var ve=function(a,b){this.ja={};this.B=[];this.gb=this.u=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else a&&this.addAll(a)};h=ve.prototype;h.ha=function(){we(this);for(var a=[],b=0;b<this.B.length;b++)a.push(this.ja[this.B[b]]);return a};h.va=function(){we(this);return this.B.concat()};h.Jb=function(a){return xe(this.ja,a)};h.clear=function(){this.ja={};this.gb=this.u=this.B.length=0};\nh.remove=function(a){return xe(this.ja,a)?(delete this.ja[a],this.u--,this.gb++,this.B.length>2*this.u&&we(this),!0):!1};var we=function(a){if(a.u!=a.B.length){for(var b=0,c=0;b<a.B.length;){var d=a.B[b];xe(a.ja,d)&&(a.B[c++]=d);b++}a.B.length=c}if(a.u!=a.B.length){var e={};for(c=b=0;b<a.B.length;)d=a.B[b],xe(e,d)||(a.B[c++]=d,e[d]=1),b++;a.B.length=c}};h=ve.prototype;h.get=function(a,b){return xe(this.ja,a)?this.ja[a]:b};\nh.set=function(a,b){xe(this.ja,a)||(this.u++,this.B.push(a),this.gb++);this.ja[a]=b};h.addAll=function(a){if(a instanceof ve){var b=a.va();a=a.ha()}else b=hb(a),a=gb(a);for(var c=0;c<b.length;c++)this.set(b[c],a[c])};h.forEach=function(a,b){for(var c=this.va(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};h.clone=function(){return new ve(this)};\nh.jf=function(a){we(this);var b=0,c=this.gb,d=this,e=new ue;e.next=function(){if(c!=d.gb)throw Error(\"The map has changed since the iterator was created\");if(b>=d.B.length)throw te;var e=d.B[b++];return a?e:d.ja[e]};return e};var xe=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var ye=function(a){if(a.ha&&\"function\"==typeof a.ha)return a.ha();if(m(a))return a.split(\"\");if(ia(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return gb(a)},ze=function(a){if(a.va&&\"function\"==typeof a.va)return a.va();if(!a.ha||\"function\"!=typeof a.ha){if(ia(a)||m(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}return hb(a)}},Ae=function(a,b,c){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,c);else if(ia(a)||m(a))x(a,b,c);else for(var d=ze(a),e=ye(a),f=e.length,\ng=0;g<f;g++)b.call(c,e[g],d&&d[g],a)};var Be=function(a,b,c){if(p(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)},Ce=function(a){var b=null;return(new C(function(c,d){b=Be(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).g(function(a){k.clearTimeout(b);throw a;})};var De=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/,Ee=function(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};var I=function(a){G.call(this);this.headers=new ve;this.ed=a||null;this.Ca=!1;this.dd=this.b=null;this.Ub=this.Ie=this.Fc=\"\";this.Qa=this.zd=this.Ac=this.od=!1;this.Db=0;this.Wc=null;this.Pc=\"\";this.$c=this.fg=this.df=!1};t(I,G);var Fe=I.prototype,Ge=qe(\"goog.net.XhrIo\");Fe.R=Ge;var He=/^https?$/i,Ie=[\"POST\",\"PUT\"];\nI.prototype.send=function(a,b,c,d){if(this.b)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.Fc+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.Fc=a;this.Ub=\"\";this.Ie=b;this.od=!1;this.Ca=!0;this.b=this.ed?this.ed.sc():Nc.sc();this.dd=this.ed?Mc(this.ed):Mc(Nc);this.b.onreadystatechange=r(this.Pe,this);this.fg&&\"onprogress\"in this.b&&(this.b.onprogress=r(function(a){this.Oe(a,!0)},this),this.b.upload&&(this.b.upload.onprogress=r(this.Oe,this)));try{H(this.R,Je(this,\"Opening Xhr\")),\nthis.zd=!0,this.b.open(b,String(a),!0),this.zd=!1}catch(f){H(this.R,Je(this,\"Error opening Xhr: \"+f.message));this.ba(5,f);return}a=c||\"\";var e=this.headers.clone();d&&Ae(d,function(a,b){e.set(b,a)});d=Ua(e.va());c=k.FormData&&a instanceof k.FormData;!Va(Ie,b)||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(a,b){this.b.setRequestHeader(b,a)},this);this.Pc&&(this.b.responseType=this.Pc);\"withCredentials\"in this.b&&this.b.withCredentials!==this.df&&\n(this.b.withCredentials=this.df);try{Ke(this),0<this.Db&&(this.$c=Le(this.b),H(this.R,Je(this,\"Will abort after \"+this.Db+\"ms if incomplete, xhr2 \"+this.$c)),this.$c?(this.b.timeout=this.Db,this.b.ontimeout=r(this.jc,this)):this.Wc=Be(this.jc,this.Db,this)),H(this.R,Je(this,\"Sending request\")),this.Ac=!0,this.b.send(a),this.Ac=!1}catch(f){H(this.R,Je(this,\"Send error: \"+f.message)),this.ba(5,f)}};\nvar Le=function(a){return z&&A(9)&&\"number\"==typeof a.timeout&&ba(a.ontimeout)},Ta=function(a){return\"content-type\"==a.toLowerCase()};I.prototype.jc=function(){\"undefined\"!=typeof aa&&this.b&&(this.Ub=\"Timed out after \"+this.Db+\"ms, aborting\",H(this.R,Je(this,this.Ub)),this.dispatchEvent(\"timeout\"),this.abort(8))};I.prototype.ba=function(a,b){this.Ca=!1;this.b&&(this.Qa=!0,this.b.abort(),this.Qa=!1);this.Ub=b;Me(this);Ne(this)};var Me=function(a){a.od||(a.od=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))};\nI.prototype.abort=function(){this.b&&this.Ca&&(H(this.R,Je(this,\"Aborting\")),this.Ca=!1,this.Qa=!0,this.b.abort(),this.Qa=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),Ne(this))};I.prototype.lb=function(){this.b&&(this.Ca&&(this.Ca=!1,this.Qa=!0,this.b.abort(),this.Qa=!1),Ne(this,!0));I.Vc.lb.call(this)};I.prototype.Pe=function(){this.isDisposed()||(this.zd||this.Ac||this.Qa?Oe(this):this.bg())};I.prototype.bg=function(){Oe(this)};\nvar Oe=function(a){if(a.Ca&&\"undefined\"!=typeof aa)if(a.dd[1]&&4==Pe(a)&&2==Qe(a))H(a.R,Je(a,\"Local request error detected and ignored\"));else if(a.Ac&&4==Pe(a))Be(a.Pe,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==Pe(a)){H(a.R,Je(a,\"Request complete\"));a.Ca=!1;try{var b=Qe(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.Fc).match(De)[1]||null;if(!f&&k.self&&k.self.location){var g=\nk.self.location.protocol;f=g.substr(0,g.length-1)}e=!He.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var l=2<Pe(a)?a.b.statusText:\"\"}catch(n){H(a.R,\"Can not get status: \"+n.message),l=\"\"}a.Ub=l+\" [\"+Qe(a)+\"]\";Me(a)}}finally{Ne(a)}}};I.prototype.Oe=function(a,b){w(\"progress\"===a.type,\"goog.net.EventType.PROGRESS is of the same type as raw XHR progress.\");this.dispatchEvent(Re(a,\"progress\"));this.dispatchEvent(Re(a,b?\"downloadprogress\":\"uploadprogress\"))};\nvar Re=function(a,b){return{type:b,lengthComputable:a.lengthComputable,loaded:a.loaded,total:a.total}},Ne=function(a,b){if(a.b){Ke(a);var c=a.b,d=a.dd[0]?da:null;a.b=null;a.dd=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.R)&&a.log(je,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}},Ke=function(a){a.b&&a.$c&&(a.b.ontimeout=null);a.Wc&&(k.clearTimeout(a.Wc),a.Wc=null)},Pe=function(a){return a.b?a.b.readyState:0},Qe=function(a){try{return 2<Pe(a)?\na.b.status:-1}catch(b){return-1}},Se=function(a){try{return a.b?a.b.responseText:\"\"}catch(b){return H(a.R,\"Can not get responseText: \"+b.message),\"\"}};\nI.prototype.getResponse=function(){try{if(!this.b)return null;if(\"response\"in this.b)return this.b.response;switch(this.Pc){case \"\":case \"text\":return this.b.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.b)return this.b.mozResponseArrayBuffer}var a=this.R;a&&a.log(je,\"Response type \"+this.Pc+\" is not supported on this browser\",void 0);return null}catch(b){return H(this.R,\"Can not get response: \"+b.message),null}};\nI.prototype.getResponseHeader=function(a){if(this.b&&4==Pe(this))return a=this.b.getResponseHeader(a),null===a?void 0:a};I.prototype.getAllResponseHeaders=function(){return this.b&&4==Pe(this)?this.b.getAllResponseHeaders():\"\"};var Je=function(a,b){return b+\" [\"+a.Ie+\" \"+a.Fc+\" \"+Qe(a)+\"]\"};var Te=function(a,b){this.pa=this.eb=this.qa=\"\";this.vb=null;this.Pa=this.Ga=\"\";this.da=this.Uf=!1;if(a instanceof Te){this.da=ba(b)?b:a.da;Ue(this,a.qa);var c=a.eb;J(this);this.eb=c;Ve(this,a.pa);We(this,a.vb);Xe(this,a.Ga);Ye(this,a.ea.clone());a=a.Pa;J(this);this.Pa=a}else a&&(c=String(a).match(De))?(this.da=!!b,Ue(this,c[1]||\"\",!0),a=c[2]||\"\",J(this),this.eb=Ze(a),Ve(this,c[3]||\"\",!0),We(this,c[4]),Xe(this,c[5]||\"\",!0),Ye(this,c[6]||\"\",!0),a=c[7]||\"\",J(this),this.Pa=Ze(a)):(this.da=!!b,this.ea=\nnew $e(null,0,this.da))};Te.prototype.toString=function(){var a=[],b=this.qa;b&&a.push(af(b,bf,!0),\":\");var c=this.pa;if(c||\"file\"==b)a.push(\"//\"),(b=this.eb)&&a.push(af(b,bf,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.vb,null!=c&&a.push(\":\",String(c));if(c=this.Ga)this.pa&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(af(c,\"/\"==c.charAt(0)?cf:df,!0));(c=this.ea.toString())&&a.push(\"?\",c);(c=this.Pa)&&a.push(\"#\",af(c,ef));return a.join(\"\")};\nTe.prototype.resolve=function(a){var b=this.clone(),c=!!a.qa;c?Ue(b,a.qa):c=!!a.eb;if(c){var d=a.eb;J(b);b.eb=d}else c=!!a.pa;c?Ve(b,a.pa):c=null!=a.vb;d=a.Ga;if(c)We(b,a.vb);else if(c=!!a.Ga){if(\"/\"!=d.charAt(0))if(this.pa&&!this.Ga)d=\"/\"+d;else{var e=b.Ga.lastIndexOf(\"/\");-1!=e&&(d=b.Ga.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(v(e,\"./\")||v(e,\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],g=0;g<e.length;){var l=e[g++];\".\"==l?d&&g==e.length&&f.push(\"\"):\"..\"==l?((1<f.length||\n1==f.length&&\"\"!=f[0])&&f.pop(),d&&g==e.length&&f.push(\"\")):(f.push(l),d=!0)}d=f.join(\"/\")}else d=e}c?Xe(b,d):c=\"\"!==a.ea.toString();c?Ye(b,a.ea.clone()):c=!!a.Pa;c&&(a=a.Pa,J(b),b.Pa=a);return b};Te.prototype.clone=function(){return new Te(this)};\nvar Ue=function(a,b,c){J(a);a.qa=c?Ze(b,!0):b;a.qa&&(a.qa=a.qa.replace(/:$/,\"\"))},Ve=function(a,b,c){J(a);a.pa=c?Ze(b,!0):b},We=function(a,b){J(a);if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.vb=b}else a.vb=null},Xe=function(a,b,c){J(a);a.Ga=c?Ze(b,!0):b},Ye=function(a,b,c){J(a);b instanceof $e?(a.ea=b,a.ea.Zd(a.da)):(c||(b=af(b,ff)),a.ea=new $e(b,0,a.da))},K=function(a,b,c){J(a);a.ea.set(b,c)},gf=function(a,b){return a.ea.get(b)};\nTe.prototype.removeParameter=function(a){J(this);this.ea.remove(a);return this};var J=function(a){if(a.Uf)throw Error(\"Tried to modify a read-only Uri\");};Te.prototype.Zd=function(a){this.da=a;this.ea&&this.ea.Zd(a);return this};\nvar hf=function(a){return a instanceof Te?a.clone():new Te(a,void 0)},jf=function(a,b){var c=new Te(null,void 0);Ue(c,\"https\");a&&Ve(c,a);b&&Xe(c,b);return c},Ze=function(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"},af=function(a,b,c){return m(a)?(a=encodeURI(a).replace(b,kf),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null},kf=function(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)},bf=/[#\\/\\?@]/g,df=/[\\#\\?:]/g,cf=/[\\#\\?]/g,ff=/[\\#\\?@]/g,\nef=/#/g,$e=function(a,b,c){this.u=this.s=null;this.V=a||null;this.da=!!c},lf=function(a){a.s||(a.s=new ve,a.u=0,a.V&&Ee(a.V,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))},nf=function(a){var b=ze(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new $e(null,0,void 0);a=ye(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];ha(f)?mf(c,e,f):c.add(e,f)}return c};h=$e.prototype;\nh.add=function(a,b){lf(this);this.V=null;a=this.ca(a);var c=this.s.get(a);c||this.s.set(a,c=[]);c.push(b);this.u=Ba(this.u)+1;return this};h.remove=function(a){lf(this);a=this.ca(a);return this.s.Jb(a)?(this.V=null,this.u=Ba(this.u)-this.s.get(a).length,this.s.remove(a)):!1};h.clear=function(){this.s=this.V=null;this.u=0};h.Jb=function(a){lf(this);a=this.ca(a);return this.s.Jb(a)};h.forEach=function(a,b){lf(this);this.s.forEach(function(c,d){x(c,function(c){a.call(b,c,d,this)},this)},this)};\nh.va=function(){lf(this);for(var a=this.s.ha(),b=this.s.va(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};h.ha=function(a){lf(this);var b=[];if(m(a))this.Jb(a)&&(b=Za(b,this.s.get(this.ca(a))));else{a=this.s.ha();for(var c=0;c<a.length;c++)b=Za(b,a[c])}return b};h.set=function(a,b){lf(this);this.V=null;a=this.ca(a);this.Jb(a)&&(this.u=Ba(this.u)-this.s.get(a).length);this.s.set(a,[b]);this.u=Ba(this.u)+1;return this};\nh.get=function(a,b){a=a?this.ha(a):[];return 0<a.length?String(a[0]):b};var mf=function(a,b,c){a.remove(b);0<c.length&&(a.V=null,a.s.set(a.ca(b),$a(c)),a.u=Ba(a.u)+c.length)};h=$e.prototype;h.toString=function(){if(this.V)return this.V;if(!this.s)return\"\";for(var a=[],b=this.s.va(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.ha(d);for(var f=0;f<d.length;f++){var g=e;\"\"!==d[f]&&(g+=\"=\"+encodeURIComponent(String(d[f])));a.push(g)}}return this.V=a.join(\"&\")};\nh.clone=function(){var a=new $e;a.V=this.V;this.s&&(a.s=this.s.clone(),a.u=this.u);return a};h.ca=function(a){a=String(a);this.da&&(a=a.toLowerCase());return a};h.Zd=function(a){a&&!this.da&&(lf(this),this.V=null,this.s.forEach(function(a,c){var b=c.toLowerCase();c!=b&&(this.remove(c),mf(this,b,a))},this));this.da=a};h.extend=function(a){for(var b=0;b<arguments.length;b++)Ae(arguments[b],function(a,b){this.add(b,a)},this)};var of={Jg:{qd:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",Vd:\"https://securetoken.googleapis.com/v1/token\",id:\"p\"},Kg:{qd:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",Vd:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",id:\"s\"},Lg:{qd:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",Vd:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",id:\"t\"}},pf=function(a){for(var b in of)if(of[b].id===a)return a=\nof[b],{firebaseEndpoint:a.qd,secureTokenEndpoint:a.Vd};return null},qf;qf=pf(\"__EID__\")?\"__EID__\":void 0;var rf=function(){var a=L();return z&&!!Cb&&11==Cb||/Edge\\/\\d+/.test(a)},sf=function(){return k.window&&k.window.location.href||\"\"},tf=function(a,b){b=b||k.window;var c=\"about:blank\";a&&(c=Bc(Ec(a)));b.location.href=c},uf=function(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):ha(a[d])?jb(a[d],b[d])||c.push(d):\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<uf(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c},wf=function(){var a=\nL();a=\"Chrome\"!=vf(a)?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!z||!Cb||9<Cb},xf=function(a){a=(a||L()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1},yf=function(a){a=a||k.window;try{a.close()}catch(b){}},zf=function(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-\nb)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=L().toLowerCase();d&&(b.target=d,v(c,\"crios/\")&&(b.target=\"_blank\"));\"Firefox\"==vf(L())&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(d=b)||(d={});a=window;b=c instanceof Ac?c:Ec(\"undefined\"!=typeof c.href?c.href:String(c));c=d.target||c.target;e=[];for(g in d)switch(g){case \"width\":case \"height\":case \"top\":case \"left\":e.push(g+\"=\"+d[g]);break;case \"target\":case \"noreferrer\":break;default:e.push(g+\n\"=\"+(d[g]?1:0))}var g=e.join(\",\");(y(\"iPhone\")&&!y(\"iPod\")&&!y(\"iPad\")||y(\"iPad\")||y(\"iPod\"))&&a.navigator&&a.navigator.standalone&&c&&\"_self\"!=c?(g=a.document.createElement(\"A\"),e=gd(g),\"undefined\"!=typeof e.HTMLAnchorElement&&\"undefined\"!=typeof e.Location&&\"undefined\"!=typeof e.Element&&w(g&&(g instanceof e.HTMLAnchorElement||!(g instanceof e.Location||g instanceof e.Element)),\"Argument is not a HTMLAnchorElement (or a non-Element mock); got: %s\",fd(g)),b instanceof Ac||b instanceof Ac||(b=b.qb?\nb.ob():String(b),w(Cc.test(b))||(b=\"about:invalid#zClosurez\"),b=Dc(b)),g.href=Bc(b),g.setAttribute(\"target\",c),d.noreferrer&&g.setAttribute(\"rel\",\"noreferrer\"),d=document.createEvent(\"MouseEvent\"),d.initMouseEvent(\"click\",!0,!0,a,1),g.dispatchEvent(d),g={}):d.noreferrer?(g=a.open(\"\",c,g),d=Bc(b),g&&(sb&&v(d,\";\")&&(d=\"'\"+d.replace(/'/g,\"%27\")+\"'\"),g.opener=null,a=Ha(\"b/12014412, meta tag with sanitized URL\"),d='<META HTTP-EQUIV=\"refresh\" content=\"0; url='+wa(d)+'\">',Ca(Ga(a),\"must provide justification\"),\nw(!/^[\\s\\xa0]*$/.test(Ga(a)),\"must provide non-empty justification\"),g.document.write(kd((new jd).Qf(d))),g.document.close())):g=a.open(Bc(b),c,g);if(g)try{g.focus()}catch(l){}return g},Af=function(a){return new C(function(b){var c=function(){Ce(2E3).then(function(){if(!a||a.closed)b();else return c()})};return c()})},Bf=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,Cf=function(){var a=null;return(new C(function(b){\"complete\"==k.document.readyState?b():(a=function(){b()},kc(window,\"load\",a))})).g(function(b){tc(window,\n\"load\",a);throw b;})},Ef=function(){return Df(void 0)?Cf().then(function(){return new C(function(a,b){var c=k.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):E(Error(\"Cordova must run in an Android or iOS file scheme.\"))},Df=function(a){a=a||L();return!(\"file:\"!==Ff()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))},Gf=function(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}},\nHf=function(){return firebase.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":firebase.INTERNAL.hasOwnProperty(\"node\")?\"Node\":\"Browser\"},If=function(){var a=Hf();return\"ReactNative\"===a||\"Node\"===a},vf=function(a){var b=a.toLowerCase();if(v(b,\"opera/\")||v(b,\"opr/\")||v(b,\"opios/\"))return\"Opera\";if(v(b,\"iemobile\"))return\"IEMobile\";if(v(b,\"msie\")||v(b,\"trident/\"))return\"IE\";if(v(b,\"edge/\"))return\"Edge\";if(v(b,\"firefox/\"))return\"Firefox\";if(v(b,\"silk/\"))return\"Silk\";if(v(b,\"blackberry\"))return\"Blackberry\";\nif(v(b,\"webos\"))return\"Webos\";if(!v(b,\"safari/\")||v(b,\"chrome/\")||v(b,\"crios/\")||v(b,\"android\"))if(!v(b,\"chrome/\")&&!v(b,\"crios/\")||v(b,\"edge/\")){if(v(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&2==a.length)return a[1]}else return\"Chrome\";else return\"Safari\";return\"Other\"},Jf={Eg:\"FirebaseCore-web\",Gg:\"FirebaseUI-web\"},Kf=function(a,b){b=b||[];var c=[],d={},e;for(e in Jf)d[Jf[e]]=!0;for(e=0;e<b.length;e++)\"undefined\"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));\nc.sort();b=c;b.length||(b=[\"FirebaseCore-web\"]);c=Hf();return(\"Browser\"===c?vf(L()):c)+\"/JsCore/\"+a+\"/\"+b.join(\",\")},L=function(){return k.navigator&&k.navigator.userAgent||\"\"},M=function(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length&&\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b},Mf=function(){try{var a=k.localStorage,b=Lf();if(a)return a.setItem(b,\"1\"),a.removeItem(b),rf()?!!k.indexedDB:!0}catch(c){}return!1},Of=function(){return(Nf()||\"chrome-extension:\"===Ff()||\nDf())&&!If()&&Mf()},Nf=function(){return\"http:\"===Ff()||\"https:\"===Ff()},Ff=function(){return k.location&&k.location.protocol||null},Pf=function(a){a=a||L();return xf(a)||\"Firefox\"==vf(a)?!1:!0},Qf=function(a){return\"undefined\"===typeof a?null:Hc(a)},Rf=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b},Sf=function(a){if(null!==a)return JSON.parse(a)},Lf=function(a){return a?a:\"\"+Math.floor(1E9*Math.random()).toString()},Tf=function(a){a=a||L();\nreturn\"Safari\"==vf(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0},Uf=function(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null},Vf=function(){var a=k.navigator;return a&&\"boolean\"===typeof a.onLine&&(Nf()||\"chrome-extension:\"===Ff()||\"undefined\"!==typeof a.connection)?a.onLine:!0},Wf=function(a,b,c,d){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.tg=a;\nthis.Yf=b;a=c||L();d=d||Hf();this.Tf=xf(a)||\"ReactNative\"===d};Wf.prototype.get=function(){return this.Tf?this.Yf:this.tg};\nvar Xf=function(){var a=k.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0},Yf=function(){var a=k.document,b=null;return Xf()||!a?D():(new C(function(c){b=function(){Xf()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).g(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})};var Zf={};var $f;try{var ag={};Object.defineProperty(ag,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(ag,\"abcd\",{configurable:!0,enumerable:!0,value:2});$f=2==ag.abcd}catch(a){$f=!1}\nvar N=function(a,b,c){$f?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c},bg=function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&N(a,c,b[c])},cg=function(a){var b={};bg(b,a);return b},dg=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},eg=function(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0},fg=function(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\n\"length\"in a?[]:{};for(var c in a)N(b,c,fg(a[c]))}return b};var gg=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),hg=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],ig={Fg:{Ec:\"locale\",Zb:500,Yb:600,providerId:\"facebook.com\",Td:hg},Hg:{Ec:null,Zb:500,Yb:620,providerId:\"github.com\",Td:hg},Ig:{Ec:\"hl\",Zb:515,Yb:680,providerId:\"google.com\",Td:hg},Mg:{Ec:\"lang\",Zb:485,Yb:705,providerId:\"twitter.com\",Td:gg}},jg=function(a){for(var b in ig)if(ig[b].providerId==a)return ig[b];\nreturn null};var O=function(a,b){this.code=\"auth/\"+a;this.message=b||kg[a]||\"\"};t(O,Error);O.prototype.G=function(){return{code:this.code,message:this.message}};O.prototype.toJSON=function(){return this.G()};\nvar lg=function(a){var b=a&&a.code;return b?new O(b.substring(5),a.message):null},kg={\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\n\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\n\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\n\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"The user's credential is no longer valid. The user must sign in again.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\n\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\n\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\n\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\n\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\n\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\n\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\n\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\n\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\"quota-exceeded\":\"The SMS quota for this project has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",\ntimeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"user-cancelled\":\"User did not grant your application the permissions it requested.\",\n\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};var mg=function(a,b,c,d,e){this.ma=a;this.W=b||null;this.Eb=c||null;this.Xd=d||null;this.ba=e||null;if(this.Eb||this.ba){if(this.Eb&&this.ba)throw new O(\"invalid-auth-event\");if(this.Eb&&!this.Xd)throw new O(\"invalid-auth-event\");}else throw new O(\"invalid-auth-event\");};mg.prototype.uc=function(){return this.Xd};mg.prototype.getError=function(){return this.ba};mg.prototype.G=function(){return{type:this.ma,eventId:this.W,urlResponse:this.Eb,sessionId:this.Xd,error:this.ba&&this.ba.G()}};\nvar ng=function(a){a=a||{};return a.type?new mg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&lg(a.error)):null};var og=function(a){var b=\"unauthorized-domain\",c=void 0,d=hf(a);a=d.pa;d=d.qa;\"chrome-extension\"==d?c=na(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=na(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\n\"operation-not-supported-in-this-environment\";O.call(this,b,c)};t(og,O);var pg=function(a){this.Wf=a.sub;ma();this.Mb=a.email||null;this.gg=a.provider_id||null;this.mf=!!a.is_anonymous||\"anonymous\"==this.gg};pg.prototype.getEmail=function(){return this.Mb};pg.prototype.isAnonymous=function(){return this.mf};var qg=function(a,b){return a.then(function(a){if(a.idToken){a:{var c=a.idToken.split(\".\");if(3==c.length){c=c[1];for(var e=(4-c.length%4)%4,f=0;f<e;f++)c+=\".\";try{var g=JSON.parse(Hb(c));if(g.sub&&g.iss&&g.aud&&g.exp){var l=new pg(g);break a}}catch(n){}}l=null}if(!l||b!=l.Wf)throw new O(\"user-mismatch\");return a}throw new O(\"user-mismatch\");}).g(function(a){throw a&&a.code&&\"auth/user-not-found\"==a.code?new O(\"user-mismatch\"):a;})},rg=function(a,b){if(b.idToken||b.accessToken)b.idToken&&N(this,\"idToken\",\nb.idToken),b.accessToken&&N(this,\"accessToken\",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)N(this,\"accessToken\",b.oauthToken),N(this,\"secret\",b.oauthTokenSecret);else throw new O(\"internal-error\",\"failed to construct a credential\");N(this,\"providerId\",a)};rg.prototype.Ob=function(a){return sg(a,tg(this))};rg.prototype.Gc=function(a,b){var c=tg(this);c.idToken=b;return ug(a,c)};rg.prototype.Gd=function(a,b){var c=tg(this);return qg(vg(a,c),b)};\nvar tg=function(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:nf(b).toString(),requestUri:\"http://localhost\"}};rg.prototype.G=function(){var a={providerId:this.providerId};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};\nvar wg=function(a,b){this.jg=b||[];bg(this,{providerId:a,isOAuthProvider:!0});this.pe={};this.Ed=(jg(a)||{}).Ec||null;this.nd=null};wg.prototype.setCustomParameters=function(a){this.pe=kb(a);return this};var P=function(a){wg.call(this,a,hg);this.Ud=[]};t(P,wg);P.prototype.addScope=function(a){Va(this.Ud,a)||this.Ud.push(a);return this};P.prototype.xe=function(){return $a(this.Ud)};\nP.prototype.credential=function(a,b){if(!a&&!b)throw new O(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new rg(this.providerId,{idToken:a||null,accessToken:b||null})};var xg=function(){P.call(this,\"facebook.com\")};t(xg,P);N(xg,\"PROVIDER_ID\",\"facebook.com\");\nvar yg=function(a){if(!a)throw new O(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new xg).credential(null,b)},zg=function(){P.call(this,\"github.com\")};t(zg,P);N(zg,\"PROVIDER_ID\",\"github.com\");var Ag=function(a){if(!a)throw new O(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new zg).credential(null,b)},Bg=function(){P.call(this,\"google.com\");this.addScope(\"profile\")};\nt(Bg,P);N(Bg,\"PROVIDER_ID\",\"google.com\");var Cg=function(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Bg).credential(c,b)},Dg=function(){wg.call(this,\"twitter.com\",gg)};t(Dg,wg);N(Dg,\"PROVIDER_ID\",\"twitter.com\");\nvar Eg=function(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new O(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new rg(\"twitter.com\",c)},Fg=function(a,b){this.Mb=a;this.Ld=b;N(this,\"providerId\",\"password\")};Fg.prototype.Ob=function(a){return Q(a,Gg,{email:this.Mb,password:this.Ld})};Fg.prototype.Gc=function(a,b){return Q(a,Hg,{idToken:b,email:this.Mb,password:this.Ld})};\nFg.prototype.Gd=function(a,b){return qg(this.Ob(a),b)};Fg.prototype.G=function(){return{email:this.Mb,password:this.Ld}};var Ig=function(){bg(this,{providerId:\"password\",isOAuthProvider:!1})};bg(Ig,{PROVIDER_ID:\"password\"});var Jg=function(a){if(!(a.verificationId&&a.ad||a.ic&&a.phoneNumber))throw new O(\"internal-error\");this.S=a;N(this,\"providerId\",\"phone\")};Jg.prototype.Ob=function(a){return a.verifyPhoneNumber(Kg(this))};Jg.prototype.Gc=function(a,b){var c=Kg(this);c.idToken=b;return Q(a,Lg,c)};\nJg.prototype.Gd=function(a,b){var c=Kg(this);c.operation=\"REAUTH\";a=Q(a,Mg,c);return qg(a,b)};Jg.prototype.G=function(){var a={providerId:\"phone\"};this.S.verificationId&&(a.verificationId=this.S.verificationId);this.S.ad&&(a.verificationCode=this.S.ad);this.S.ic&&(a.temporaryProof=this.S.ic);this.S.phoneNumber&&(a.phoneNumber=this.S.phoneNumber);return a};\nvar Kg=function(a){return a.S.ic&&a.S.phoneNumber?{temporaryProof:a.S.ic,phoneNumber:a.S.phoneNumber}:{sessionInfo:a.S.verificationId,code:a.S.ad}},Ng=function(a){try{this.qf=a||firebase.auth()}catch(b){throw new O(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}bg(this,{providerId:\"phone\",isOAuthProvider:!1})};\nNg.prototype.verifyPhoneNumber=function(a,b){var c=this.qf.f;return D(b.verify()).then(function(d){if(!m(d))throw new O(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":return Q(c,Og,{phoneNumber:a,recaptchaToken:d});default:throw new O(\"argument-error\",'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};\nvar Pg=function(a,b){if(!a)throw new O(\"missing-verification-id\");if(!b)throw new O(\"missing-verification-code\");return new Jg({verificationId:a,ad:b})};bg(Ng,{PROVIDER_ID:\"phone\"});\nvar Qg=function(a){if(a.temporaryProof&&a.phoneNumber)return new Jg({ic:a.temporaryProof,phoneNumber:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case \"google.com\":return Cg(a,c);case \"facebook.com\":return yg(c);case \"github.com\":return Ag(c);case \"twitter.com\":return Eg(c,d);default:return(new P(b)).credential(a,c)}}catch(e){return null}},Rg=function(a){if(!a.isOAuthProvider)throw new O(\"invalid-oauth-provider\");\n};var Sg=function(a,b,c){O.call(this,a,c);a=b||{};a.email&&N(this,\"email\",a.email);a.phoneNumber&&N(this,\"phoneNumber\",a.phoneNumber);a.credential&&N(this,\"credential\",a.credential)};t(Sg,O);Sg.prototype.G=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.G();b&&mb(a,b);return a};Sg.prototype.toJSON=function(){return this.G()};\nvar Tg=function(a){if(a.code){var b=a.code||\"\";0==b.indexOf(\"auth/\")&&(b=b.substring(5));var c={credential:Qg(a)};if(a.email)c.email=a.email;else if(a.phoneNumber)c.phoneNumber=a.phoneNumber;else return new O(b,a.message||void 0);return new Sg(b,c,a.message)}return null};var Ug=function(a){this.Dg=a};t(Ug,Lc);Ug.prototype.sc=function(){return new this.Dg};Ug.prototype.Cd=function(){return{}};\nvar R=function(a,b,c){var d=\"Node\"==Hf();d=k.XMLHttpRequest||d&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!d)throw new O(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.m=a;a=b||{};this.pg=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.qg=a.secureTokenTimeout||Vg;this.Qc=kb(a.secureTokenHeaders||Wg);this.Af=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.Bf=a.firebaseTimeout||\nXg;this.mb=kb(a.firebaseHeaders||Yg);c&&(this.mb[\"X-Client-Version\"]=c,this.Qc[\"X-Client-Version\"]=c);this.sf=new Qc;this.Cg=new Ug(d)},Zg,Vg=new Wf(3E4,6E4),Wg={\"Content-Type\":\"application/x-www-form-urlencoded\"},Xg=new Wf(3E4,6E4),Yg={\"Content-Type\":\"application/json\"},$g=function(a,b){b?a.mb[\"X-Firebase-Locale\"]=b:delete a.mb[\"X-Firebase-Locale\"]},ah=function(a,b){b?(a.mb[\"X-Client-Version\"]=b,a.Qc[\"X-Client-Version\"]=b):(delete a.mb[\"X-Client-Version\"],delete a.Qc[\"X-Client-Version\"])},ch=function(a,\nb,c,d,e,f,g){Vf()?(wf()?a=r(a.sg,a):(Zg||(Zg=new C(function(a,b){bh(a,b)})),a=r(a.rg,a)),a(b,c,d,e,f,g)):c&&c(null)};\nR.prototype.sg=function(a,b,c,d,e,f){var g=\"Node\"==Hf(),l=If()?g?new I(this.Cg):new I:new I(this.sf);if(f){l.Db=Math.max(0,f);var n=setTimeout(function(){l.dispatchEvent(\"timeout\")},f)}l.listen(\"complete\",function(){n&&clearTimeout(n);var a=null;try{a=JSON.parse(Se(this))||null}catch(zb){a=null}b&&b(a)});sc(l,\"ready\",function(){n&&clearTimeout(n);this.Ma||(this.Ma=!0,this.lb())});sc(l,\"timeout\",function(){n&&clearTimeout(n);this.Ma||(this.Ma=!0,this.lb());b&&b(null)});l.send(a,c,d,e)};\nvar dh=Ha(\"https://apis.google.com/js/client.js?onload=%{onload}\"),eh=\"__fcb\"+Math.floor(1E6*Math.random()).toString(),bh=function(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[eh]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=Ma(dh,{onload:eh});Xd(ee(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}};\nR.prototype.rg=function(a,b,c,d,e){var f=this;Zg.then(function(){window.gapi.client.setApiKey(f.m);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(a){window.gapi.auth.setToken(g);b&&b(a)}})}).g(function(a){b&&b({error:{message:a&&a.message||\"CORS_UNSUPPORTED\"}})})};\nvar gh=function(a,b){return new C(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?ch(a,a.pg+\"?key=\"+encodeURIComponent(a.m),function(a){a?a.error?d(fh(a)):a.access_token&&a.refresh_token?c(a):d(new O(\"internal-error\")):d(new O(\"network-request-failed\"))},\"POST\",nf(b).toString(),a.Qc,a.qg.get()):d(new O(\"internal-error\"))})},hh=function(a,b,c,d,e,f){var g=hf(a.Af+b);K(g,\"key\",a.m);f&&K(g,\"cb\",ma().toString());var l=\"GET\"==c;if(l)for(var n in d)d.hasOwnProperty(n)&&\nK(g,n,d[n]);return new C(function(b,f){ch(a,g.toString(),function(a){a?a.error?f(fh(a,e||{})):b(a):f(new O(\"network-request-failed\"))},c,l?void 0:Hc(Rf(d)),a.mb,a.Bf.get())})},ih=function(a){if(!yc.test(a.email))throw new O(\"invalid-email\");},jh=function(a){\"email\"in a&&ih(a)},lh=function(a,b){return Q(a,kh,{identifier:b,continueUri:Nf()?sf():\"http://localhost\"}).then(function(a){return a.allProviders||[]})},nh=function(a){return Q(a,mh,{}).then(function(a){return a.authorizedDomains||[]})},oh=function(a){if(!a.idToken)throw new O(\"internal-error\");\n},ph=function(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new O(\"internal-error\");}else{if(!a.sessionInfo)throw new O(\"missing-verification-id\");if(!a.code)throw new O(\"missing-verification-code\");}};R.prototype.signInAnonymously=function(){return Q(this,qh,{})};R.prototype.updateEmail=function(a,b){return Q(this,rh,{idToken:a,email:b})};R.prototype.updatePassword=function(a,b){return Q(this,Hg,{idToken:a,password:b})};var sh={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};\nR.prototype.updateProfile=function(a,b){var c={idToken:a},d=[];eb(sh,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return Q(this,rh,c)};R.prototype.sendPasswordResetEmail=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};mb(a,b);return Q(this,th,a)};R.prototype.sendEmailVerification=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};mb(a,b);return Q(this,uh,a)};R.prototype.verifyPhoneNumber=function(a){return Q(this,vh,a)};\nvar xh=function(a,b,c){return Q(a,wh,{idToken:b,deleteProvider:c})},yh=function(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new O(\"internal-error\");},zh=function(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=Tg(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=Tg(a)):\"EMAIL_EXISTS\"==a.errorMessage&&(a.code=\"email-already-in-use\",b=Tg(a));if(b)throw b;if(!a.idToken)throw new O(\"internal-error\");},sg=function(a,\nb){b.returnIdpCredential=!0;return Q(a,Ah,b)},ug=function(a,b){b.returnIdpCredential=!0;return Q(a,Bh,b)},vg=function(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return Q(a,Ch,b)},Dh=function(a){if(!a.oobCode)throw new O(\"invalid-action-code\");};R.prototype.confirmPasswordReset=function(a,b){return Q(this,Eh,{oobCode:a,newPassword:b})};R.prototype.checkActionCode=function(a){return Q(this,Fh,{oobCode:a})};R.prototype.applyActionCode=function(a){return Q(this,Gh,{oobCode:a})};\nvar Gh={endpoint:\"setAccountInfo\",D:Dh,cb:\"email\"},Fh={endpoint:\"resetPassword\",D:Dh,$:function(a){if(!a.email||!a.requestType)throw new O(\"internal-error\");}},Hh={endpoint:\"signupNewUser\",D:function(a){ih(a);if(!a.password)throw new O(\"weak-password\");},$:oh,Aa:!0},kh={endpoint:\"createAuthUri\"},Ih={endpoint:\"deleteAccount\",ab:[\"idToken\"]},wh={endpoint:\"setAccountInfo\",ab:[\"idToken\",\"deleteProvider\"],D:function(a){if(!ha(a.deleteProvider))throw new O(\"internal-error\");}},Jh={endpoint:\"getAccountInfo\"},\nuh={endpoint:\"getOobConfirmationCode\",ab:[\"idToken\",\"requestType\"],D:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new O(\"internal-error\");},cb:\"email\"},th={endpoint:\"getOobConfirmationCode\",ab:[\"requestType\"],D:function(a){if(\"PASSWORD_RESET\"!=a.requestType)throw new O(\"internal-error\");ih(a)},cb:\"email\"},mh={he:!0,endpoint:\"getProjectConfig\",Ce:\"GET\"},Kh={he:!0,endpoint:\"getRecaptchaParam\",Ce:\"GET\",$:function(a){if(!a.recaptchaSiteKey)throw new O(\"internal-error\");}},Eh={endpoint:\"resetPassword\",\nD:Dh,cb:\"email\"},Og={endpoint:\"sendVerificationCode\",ab:[\"phoneNumber\",\"recaptchaToken\"],cb:\"sessionInfo\"},rh={endpoint:\"setAccountInfo\",ab:[\"idToken\"],D:jh,Aa:!0},Hg={endpoint:\"setAccountInfo\",ab:[\"idToken\"],D:function(a){jh(a);if(!a.password)throw new O(\"weak-password\");},$:oh,Aa:!0},qh={endpoint:\"signupNewUser\",$:oh,Aa:!0},Ah={endpoint:\"verifyAssertion\",D:yh,$:zh,Aa:!0},Ch={endpoint:\"verifyAssertion\",D:yh,$:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new O(\"user-not-found\");\nif(!a.idToken)throw new O(\"internal-error\");},Aa:!0},Bh={endpoint:\"verifyAssertion\",D:function(a){yh(a);if(!a.idToken)throw new O(\"internal-error\");},$:zh,Aa:!0},Lh={endpoint:\"verifyCustomToken\",D:function(a){if(!a.token)throw new O(\"invalid-custom-token\");},$:oh,Aa:!0},Gg={endpoint:\"verifyPassword\",D:function(a){ih(a);if(!a.password)throw new O(\"wrong-password\");},$:oh,Aa:!0},vh={endpoint:\"verifyPhoneNumber\",D:ph,$:oh},Lg={endpoint:\"verifyPhoneNumber\",D:function(a){if(!a.idToken)throw new O(\"internal-error\");\nph(a)},$:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",Tg(a);oh(a)}},Mg={vf:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",D:ph,$:oh},Q=function(a,b,c){if(!eg(c,b.ab))return E(new O(\"internal-error\"));var d=b.Ce||\"POST\",e;return D(c).then(b.D).then(function(){b.Aa&&(c.returnSecureToken=!0);return hh(a,b.endpoint,d,c,b.vf,b.he||!1)}).then(function(a){return e=a}).then(b.$).then(function(){if(!b.cb)return e;if(!(b.cb in e))throw new O(\"internal-error\");return e[b.cb]})},\nfh=function(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new O(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",\nINVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",\nINVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",\nUNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\"};mb(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new O(d[e],b);!b&&a&&(b=Qf(a));return new O(\"internal-error\",b)};var Nh=function(a){this.Ag=a;this.zc=null;this.Id=Mh(this)},Mh=function(a){return Oh().then(function(){return new C(function(b,c){M(\"gapi.iframes.getContext\")().open({where:document.body,url:a.Ag,messageHandlersFilter:M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},function(d){a.zc=d;a.zc.restyle({setHideOnLeave:!1});var e=setTimeout(function(){c(Error(\"Network Error\"))},Ph.get()),f=function(){clearTimeout(e);\nb()};d.ping(f).then(f,function(){c(Error(\"Network Error\"))})})})})};Nh.prototype.sendMessage=function(a){var b=this;return this.Id.then(function(){return new C(function(c){b.zc.send(a.type,a,c,M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})};\nvar Qh=function(a,b){a.Id.then(function(){a.zc.register(\"authEvent\",b,M(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})},Rh=Ha(\"https://apis.google.com/js/api.js?onload=%{onload}\"),Sh=new Wf(3E4,6E4),Ph=new Wf(5E3,15E3),Th=null,Oh=function(){return Th?Th:Th=(new C(function(a,b){if(Vf()){var c=function(){Uf();M(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){Uf();b(Error(\"Network Error\"))},timeout:Sh.get()})};if(M(\"gapi.iframes.Iframe\"))a();else if(M(\"gapi.load\"))c();else{var d=\"__iframefcb\"+\nMath.floor(1E6*Math.random()).toString();k[d]=function(){M(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=Ma(Rh,{onload:d});D(ee(d)).g(function(){b(Error(\"Network Error\"))})}}else b(Error(\"Network Error\"))})).g(function(a){Th=null;throw a;})};var Uh=function(a,b,c){this.A=a;this.m=b;this.o=c;this.fb=null;this.Ba=jf(this.A,\"/__/auth/iframe\");K(this.Ba,\"apiKey\",this.m);K(this.Ba,\"appName\",this.o);this.O=null;this.M=[]};Uh.prototype.$d=function(a){this.fb=a;return this};Uh.prototype.Yd=function(a){this.O=a;return this};\nUh.prototype.toString=function(){this.fb?K(this.Ba,\"v\",this.fb):this.Ba.removeParameter(\"v\");this.O?K(this.Ba,\"eid\",this.O):this.Ba.removeParameter(\"eid\");this.M.length?K(this.Ba,\"fw\",this.M.join(\",\")):this.Ba.removeParameter(\"fw\");return this.Ba.toString()};var Vh=function(a,b,c,d,e){this.A=a;this.m=b;this.o=c;this.pf=d;this.fb=this.W=this.Sd=null;this.xb=e;this.O=null};Vh.prototype.$d=function(a){this.fb=a;return this};Vh.prototype.Yd=function(a){this.O=a;return this};\nVh.prototype.toString=function(){var a=jf(this.A,\"/__/auth/handler\");K(a,\"apiKey\",this.m);K(a,\"appName\",this.o);K(a,\"authType\",this.pf);if(this.xb.isOAuthProvider){var b=this.xb;try{var c=firebase.app(this.o).auth().ia}catch(l){c=null}b.nd=c;K(a,\"providerId\",this.xb.providerId);b=this.xb;c=Rf(b.pe);for(var d in c)c[d]=c[d].toString();d=b.jg;c=kb(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.Ed&&b.nd&&!c[b.Ed]&&(c[b.Ed]=b.nd);ib(c)||K(a,\"customParameters\",Qf(c))}\"function\"===typeof this.xb.xe&&\n(b=this.xb.xe(),b.length&&K(a,\"scopes\",b.join(\",\")));this.Sd?K(a,\"redirectUrl\",this.Sd):a.removeParameter(\"redirectUrl\");this.W?K(a,\"eventId\",this.W):a.removeParameter(\"eventId\");this.fb?K(a,\"v\",this.fb):a.removeParameter(\"v\");if(this.nc)for(var g in this.nc)this.nc.hasOwnProperty(g)&&!gf(a,g)&&K(a,g,this.nc[g]);this.O?K(a,\"eid\",this.O):a.removeParameter(\"eid\");g=Wh(this.o);g.length&&K(a,\"fw\",g.join(\",\"));return a.toString()};\nvar Wh=function(a){try{return $a(firebase.app(a).auth().M)}catch(b){return[]}},Xh=function(a,b,c,d,e){this.A=a;this.m=b;this.o=c;this.La=d||null;this.O=e||null;this.f=this.yd=this.ve=null;this.ta=[];this.Bc=this.wa=null},Yh=function(a){var b=sf();return nh(a).then(function(a){a:{var c=hf(b),e=c.qa;c=c.pa;for(var f=0;f<a.length;f++){var g=a[f];var l=c;var n=e;0==g.indexOf(\"chrome-extension://\")?l=hf(g).pa==l&&\"chrome-extension\"==n:\"http\"!=n&&\"https\"!=n?l=!1:Bf.test(g)?l=l==g:(g=g.split(\".\").join(\"\\\\.\"),\nl=(new RegExp(\"^(.+\\\\.\"+g+\"|\"+g+\")$\",\"i\")).test(l));if(l){a=!0;break a}}a=!1}if(!a)throw new og(sf());})};h=Xh.prototype;h.Sb=function(){if(this.Bc)return this.Bc;var a=this;return this.Bc=Cf().then(function(){if(!a.yd){var b=a.La,c=a.O,d=Wh(a.o);b=(new Uh(a.A,a.m,a.o)).$d(b).Yd(c);b.M=$a(d||[]);a.yd=b.toString()}a.yc=new Nh(a.yd);Zh(a)})};\nh.fc=function(a,b,c){var d=new O(\"popup-closed-by-user\"),e=new O(\"web-storage-unsupported\"),f=this,g=!1;return this.Ra().then(function(){$h(f).then(function(c){c||(a&&yf(a),b(e),g=!0)})}).g(function(){}).then(function(){if(!g)return Af(a)}).then(function(){if(!g)return Ce(c).then(function(){b(d)})})};h.Ve=function(){var a=L();return!Pf(a)&&!Tf(a)};h.Ae=function(){return!1};\nh.$b=function(a,b,c,d,e,f,g){if(!a)return E(new O(\"popup-blocked\"));if(g&&!Pf())return this.Ra().g(function(b){yf(a);e(b)}),d(),D();this.wa||(this.wa=Yh(ai(this)));var l=this;return this.wa.then(function(){var b=l.Ra().g(function(b){yf(a);e(b);throw b;});d();return b}).then(function(){Rg(c);if(!g){var d=bi(l.A,l.m,l.o,b,c,null,f,l.La,void 0,l.O);tf(d,a)}}).g(function(a){\"auth/network-request-failed\"==a.code&&(l.wa=null);throw a;})};\nvar ai=function(a){a.f||(a.ve=a.La?Kf(a.La,Wh(a.o)):null,a.f=new R(a.m,pf(a.O),a.ve));return a.f};Xh.prototype.ac=function(a,b,c){this.wa||(this.wa=Yh(ai(this)));var d=this;return this.wa.then(function(){Rg(b);var e=bi(d.A,d.m,d.o,a,b,sf(),c,d.La,void 0,d.O);tf(e)}).g(function(a){\"auth/network-request-failed\"==a.code&&(d.wa=null);throw a;})};Xh.prototype.Ra=function(){var a=this;return this.Sb().then(function(){return a.yc.Id}).g(function(){a.wa=null;throw new O(\"network-request-failed\");})};\nXh.prototype.Ze=function(){return!0};\nvar bi=function(a,b,c,d,e,f,g,l,n,F){a=new Vh(a,b,c,d,e);a.Sd=f;a.W=g;f=a.$d(l);f.nc=kb(n||null);return f.Yd(F).toString()},Zh=function(a){if(!a.yc)throw Error(\"IfcHandler must be initialized!\");Qh(a.yc,function(b){var c={};if(b&&b.authEvent){var d=!1;b=ng(b.authEvent);for(c=0;c<a.ta.length;c++)d=a.ta[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return D(c)}c.status=\"ERROR\";return D(c)})},$h=function(a){var b={type:\"webStorageSupport\"};return a.Sb().then(function(){return a.yc.sendMessage(b)}).then(function(a){if(a&&a.length&&\n\"undefined\"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})};Xh.prototype.ib=function(a){this.ta.push(a)};Xh.prototype.dc=function(a){Ya(this.ta,function(b){return b==a})};var ci=function(a,b,c,d,e,f){N(this,\"type\",\"recaptcha\");this.bd=this.Ib=null;this.Kb=!1;this.ne=b;this.Fa=c||{theme:\"light\",type:\"image\"};this.J=[];if(this.Fa.sitekey)throw new O(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.Cc=\"invisible\"===this.Fa.size;if(!md(b)||!this.Cc&&md(b).hasChildNodes())throw new O(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.f=new R(a,\nf||null,e||null);this.Gf=d||function(){return null};var g=this;this.Xc=[];var l=this.Fa.callback;this.Fa.callback=function(a){g.Lb(a);if(\"function\"===typeof l)l(a);else if(\"string\"===typeof l){var b=M(l,k);\"function\"===typeof b&&b(a)}};var n=this.Fa[\"expired-callback\"];this.Fa[\"expired-callback\"]=function(){g.Lb(null);if(\"function\"===typeof n)n();else if(\"string\"===typeof n){var a=M(n,k);\"function\"===typeof a&&a()}}};ci.prototype.Lb=function(a){for(var b=0;b<this.Xc.length;b++)try{this.Xc[b](a)}catch(c){}};\nvar di=function(a,b){Ya(a.Xc,function(a){return a==b})};ci.prototype.c=function(a){var b=this;this.J.push(a);Fd(a,function(){Xa(b.J,a)});return a};\nci.prototype.Tb=function(){var a=this;return this.Ib?this.Ib:this.Ib=this.c(D().then(function(){if(Nf())return Cf();throw new O(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){return ei(fi(),a.Gf())}).then(function(){return Q(a.f,Kh,{})}).then(function(b){a.Fa.sitekey=b.recaptchaSiteKey}).g(function(b){a.Ib=null;throw b;}))};\nci.prototype.render=function(){gi(this);var a=this;return this.c(this.Tb().then(function(){if(null===a.bd){var b=a.ne;if(!a.Cc){var c=md(b);b=qd(\"DIV\");c.appendChild(b)}a.bd=grecaptcha.render(b,a.Fa)}return a.bd}))};ci.prototype.verify=function(){gi(this);var a=this;return this.c(this.render().then(function(b){return new C(function(c){var d=grecaptcha.getResponse(b);if(d)c(d);else{var e=function(b){b&&(di(a,e),c(b))};a.Xc.push(e);a.Cc&&grecaptcha.execute(a.bd)}})}))};\nvar gi=function(a){if(a.Kb)throw new O(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");};ci.prototype.clear=function(){gi(this);this.Kb=!0;fi().ld--;for(var a=0;a<this.J.length;a++)this.J[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.Cc){a=md(this.ne);for(var b;b=a.firstChild;)a.removeChild(b)}};\nvar hi=Ha(\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\"),ii=function(){this.ld=k.grecaptcha?Infinity:0;this.Be=null;this.jd=\"__rcb\"+Math.floor(1E6*Math.random()).toString()},ei=function(a,b){return new C(function(c,d){if(Vf())if(!k.grecaptcha||b!==a.Be&&!a.ld){k[a.jd]=function(){if(k.grecaptcha){a.Be=b;var e=k.grecaptcha.render;k.grecaptcha.render=function(b,c){b=e(b,c);a.ld++;return b};c()}else d(new O(\"internal-error\"));delete k[a.jd]};var e=Ma(hi,{onload:a.jd,\nhl:b||\"\"});D(ee(e)).g(function(){d(new O(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else c();else d(new O(\"network-request-failed\"))})},ji=null,fi=function(){ji||(ji=new ii);return ji},ki=function(a,b,c){try{this.i=c||firebase.app()}catch(f){throw new O(\"argument-error\",\"No firebase.app.App instance is currently initialized.\");}if(this.i.options&&this.i.options.apiKey)c=this.i.options.apiKey;else throw new O(\"invalid-api-key\");var d=this,e=null;try{e=$a(this.i.auth().M)}catch(f){}e=\nfirebase.SDK_VERSION?Kf(firebase.SDK_VERSION,e):null;ci.call(this,c,a,b,function(){try{var a=d.i.auth().ia}catch(g){a=null}return a},e,pf(qf))};t(ki,ci);var li=function(a){this.F=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.F)throw new O(\"internal-error\",\"The React Native compatibility library was not found.\");};h=li.prototype;h.get=function(a){return D(this.F.getItem(a)).then(function(a){return a&&Sf(a)})};h.set=function(a,b){return D(this.F.setItem(a,Qf(b)))};h.remove=function(a){return D(this.F.removeItem(a))};h.jb=function(){};h.$a=function(){};var mi=function(){this.F={}};h=mi.prototype;h.get=function(a){return D(this.F[a])};h.set=function(a,b){this.F[a]=b;return D()};h.remove=function(a){delete this.F[a];return D()};h.jb=function(){};h.$a=function(){};var oi=function(){if(!ni()){if(\"Node\"==Hf())throw new O(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new O(\"web-storage-unsupported\");}this.F=k.localStorage||firebase.INTERNAL.node.localStorage},ni=function(){var a=\"Node\"==Hf();a=k.localStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}};h=oi.prototype;\nh.get=function(a){var b=this;return D().then(function(){var c=b.F.getItem(a);return Sf(c)})};h.set=function(a,b){var c=this;return D().then(function(){var d=Qf(b);null===d?c.remove(a):c.F.setItem(a,d)})};h.remove=function(a){var b=this;return D().then(function(){b.F.removeItem(a)})};h.jb=function(a){k.window&&lc(k.window,\"storage\",a)};h.$a=function(a){k.window&&tc(k.window,\"storage\",a)};var pi=function(){this.F={}};h=pi.prototype;h.get=function(){return D(null)};h.set=function(){return D()};h.remove=function(){return D()};h.jb=function(){};h.$a=function(){};var ri=function(){if(!qi()){if(\"Node\"==Hf())throw new O(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new O(\"web-storage-unsupported\");}this.F=k.sessionStorage||firebase.INTERNAL.node.sessionStorage},qi=function(){var a=\"Node\"==Hf();a=k.sessionStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}};h=ri.prototype;\nh.get=function(a){var b=this;return D().then(function(){var c=b.F.getItem(a);return Sf(c)})};h.set=function(a,b){var c=this;return D().then(function(){var d=Qf(b);null===d?c.remove(a):c.F.setItem(a,d)})};h.remove=function(a){var b=this;return D().then(function(){b.F.removeItem(a)})};h.jb=function(){};h.$a=function(){};var si=function(a,b,c,d,e,f){if(!window.indexedDB)throw new O(\"web-storage-unsupported\");this.wf=a;this.Hd=b;this.md=c;this.cf=d;this.gb=e;this.Y={};this.gc=[];this.Wb=0;this.Of=f||k.indexedDB},ti,ui=function(a){return new C(function(b,c){var d=a.Of.open(a.wf,a.gb);d.onerror=function(a){c(Error(a.target.errorCode))};d.onupgradeneeded=function(b){b=b.target.result;try{b.createObjectStore(a.Hd,{keyPath:a.md})}catch(f){c(f)}};d.onsuccess=function(a){b(a.target.result)}})},wi=function(a){a.Fe||(a.Fe=\nui(a));return a.Fe},xi=function(a,b){return b.objectStore(a.Hd)},yi=function(a,b,c){return b.transaction([a.Hd],c?\"readwrite\":\"readonly\")},zi=function(a){return new C(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})};h=si.prototype;\nh.set=function(a,b){var c=!1,d,e=this;return Fd(wi(this).then(function(b){d=b;b=xi(e,yi(e,d,!0));return zi(b.get(a))}).then(function(f){var g=xi(e,yi(e,d,!0));if(f)return f.value=b,zi(g.put(f));e.Wb++;c=!0;f={};f[e.md]=a;f[e.cf]=b;return zi(g.add(f))}).then(function(){e.Y[a]=b}),function(){c&&e.Wb--})};h.get=function(a){var b=this;return wi(this).then(function(c){return zi(xi(b,yi(b,c,!1)).get(a))}).then(function(a){return a&&a.value})};\nh.remove=function(a){var b=!1,c=this;return Fd(wi(this).then(function(d){b=!0;c.Wb++;return zi(xi(c,yi(c,d,!0))[\"delete\"](a))}).then(function(){delete c.Y[a]}),function(){b&&c.Wb--})};\nh.wg=function(){var a=this;return wi(this).then(function(b){var c=xi(a,yi(a,b,!1));return c.getAll?zi(c.getAll()):new C(function(a,b){var d=[],e=c.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b[\"continue\"]()):a(d)};e.onerror=function(a){b(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.Wb){for(d=0;d<b.length;d++)c[b[d][a.md]]=b[d][a.cf];d=uf(a.Y,c);a.Y=c}return d})};h.jb=function(a){0==this.gc.length&&this.be();this.gc.push(a)};\nh.$a=function(a){Ya(this.gc,function(b){return b==a});0==this.gc.length&&this.Tc()};h.be=function(){var a=this;this.Tc();var b=function(){a.Nd=Ce(800).then(r(a.wg,a)).then(function(b){0<b.length&&x(a.gc,function(a){a(b)})}).then(b).g(function(a){\"STOP_EVENT\"!=a.message&&b()});return a.Nd};b()};h.Tc=function(){this.Nd&&this.Nd.cancel(\"STOP_EVENT\")};var Di=function(){this.re={Browser:Ai,Node:Bi,ReactNative:Ci}[Hf()]},Ei,Ai={C:oi,de:ri},Bi={C:oi,de:ri},Ci={C:li,de:pi};var Fi=function(a){this.Bd(a)};\nFi.prototype.Bd=function(a){var b=a.url;if(\"undefined\"===typeof b)throw new O(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new O(\"invalid-continue-uri\");this.rf=b;this.fe=this.oc=null;this.Ge=!1;var c=a.android;if(c&&\"object\"===typeof c){b=c.packageName;var d=c.installApp;c=c.minimumVersion;if(\"string\"===typeof b&&b.length){this.oc=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new O(\"argument-error\",\"installApp property must be a boolean when specified.\");this.Ge=\n!!d;if(\"undefined\"!==typeof c&&(\"string\"!==typeof c||\"string\"===typeof c&&!c.length))throw new O(\"argument-error\",\"minimumVersion property must be a non empty string when specified.\");this.fe=c||null}else{if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"packageName property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new O(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new O(\"argument-error\",\"android property must be a non null object when specified.\");\nthis.xd=null;if((b=a.iOS)&&\"object\"===typeof b)if(b=b.bundleId,\"string\"===typeof b&&b.length)this.xd=b;else{if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"bundleId property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new O(\"argument-error\",\"iOS property must be a non null object when specified.\");a=a.handleCodeInApp;if(\"undefined\"!==typeof a&&\"boolean\"!==typeof a)throw new O(\"argument-error\",\"handleCodeInApp property must be a boolean when specified.\");\nif((this.le=!!a)&&!this.xd&&!this.oc)throw new O(\"argument-error\",\"handleCodeInApp property can't be true when no mobile application is provided.\");};var Gi=function(a){var b={};b.continueUrl=a.rf;b.canHandleCodeInApp=a.le;if(b.androidPackageName=a.oc)b.androidMinimumVersion=a.fe,b.androidInstallApp=a.Ge;b.iOSBundleId=a.xd;for(var c in b)null===b[c]&&delete b[c];return b};var Hi=function(a,b){this.uf=b;N(this,\"verificationId\",a)};Hi.prototype.confirm=function(a){a=Pg(this.verificationId,a);return this.uf(a)};var Ii=function(a,b,c,d){return(new Ng(a)).verifyPhoneNumber(b,c).then(function(a){return new Hi(a,d)})};var Ji=function(a){var b={},c=a.email,d=a.newEmail;a=a.requestType;if(!c||!a)throw Error(\"Invalid provider user info!\");b.fromEmail=d||null;b.email=c;N(this,\"operation\",a);N(this,\"data\",fg(b))};var Ki=function(a,b,c,d,e,f){this.dg=a;this.lg=b;this.Hf=c;this.Hc=d;this.ee=e;this.mg=!!f;this.ub=null;this.Sa=this.Hc;if(this.ee<this.Hc)throw Error(\"Proactive refresh lower bound greater than upper bound!\");};Ki.prototype.start=function(){this.Sa=this.Hc;Li(this,!0)};\nvar Mi=function(a,b){if(b)return a.Sa=a.Hc,a.Hf();b=a.Sa;a.Sa*=2;a.Sa>a.ee&&(a.Sa=a.ee);return b},Li=function(a,b){a.stop();a.ub=Ce(Mi(a,b)).then(function(){return a.mg?D():Yf()}).then(function(){return a.dg()}).then(function(){Li(a,!0)}).g(function(b){a.lg(b)&&Li(a,!1)})};Ki.prototype.stop=function(){this.ub&&(this.ub.cancel(),this.ub=null)};var Si=function(a){var b={};b[\"facebook.com\"]=Ni;b[\"google.com\"]=Oi;b[\"github.com\"]=Pi;b[\"twitter.com\"]=Qi;var c=a&&a.providerId;return c?b[c]?new b[c](a):new Ri(a):null},Ri=function(a){var b=Sf(a.rawUserInfo||\"{}\");a=a.providerId;if(!a)throw Error(\"Invalid additional user info!\");N(this,\"profile\",fg(b||{}));N(this,\"providerId\",a)},Ni=function(a){Ri.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider id!\");};t(Ni,Ri);\nvar Pi=function(a){Ri.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider id!\");N(this,\"username\",this.profile&&this.profile.login||null)};t(Pi,Ri);var Oi=function(a){Ri.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider id!\");};t(Oi,Ri);var Qi=function(a){Ri.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider id!\");N(this,\"username\",a.screenName||null)};t(Qi,Ri);var Ti={LOCAL:\"local\",NONE:\"none\",SESSION:\"session\"},Ui=function(a){var b=new O(\"invalid-persistence-type\"),c=new O(\"unsupported-persistence-type\");a:{for(d in Ti)if(Ti[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(Hf()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;default:if(!Mf()&&\"none\"!==a)throw c;}},Vi=function(a,b,c,d){this.Ke=a;this.Wd=b;this.ng=c;this.ec=d;this.X={};Ei||(Ei=new Di);a=Ei;try{if(rf()){ti||(ti=new si(\"firebaseLocalStorageDb\",\n\"firebaseLocalStorage\",\"fbase_key\",\"value\",1));var e=ti}else e=new a.re.C;this.Qe=e}catch(f){this.Qe=new mi,this.ec=!0}try{this.Ye=new a.re.de}catch(f){this.Ye=new mi}this.Nf=new mi;this.ce=r(this.We,this);this.Y={}},Wi,Xi=function(){Wi||(Wi=new Vi(\"firebase\",\":\",!Tf(L())&&Gf()?!0:!1,Pf()));return Wi},Yi=function(a,b){switch(b){case \"session\":return a.Ye;case \"none\":return a.Nf;default:return a.Qe}};h=Vi.prototype;h.ca=function(a,b){return this.Ke+this.Wd+a.name+(b?this.Wd+b:\"\")};\nh.get=function(a,b){return Yi(this,a.C).get(this.ca(a,b))};h.remove=function(a,b){b=this.ca(a,b);\"local\"!=a.C||this.ec||(this.Y[b]=null);return Yi(this,a.C).remove(b)};h.set=function(a,b,c){var d=this.ca(a,c),e=this,f=Yi(this,a.C);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){\"local\"!=a.C||e.ec||(e.Y[d]=b)})};h.addListener=function(a,b,c){a=this.ca(a,b);this.ec||(this.Y[a]=k.localStorage.getItem(a));ib(this.X)&&this.be();this.X[a]||(this.X[a]=[]);this.X[a].push(c)};\nh.removeListener=function(a,b,c){a=this.ca(a,b);this.X[a]&&(Ya(this.X[a],function(a){return a==c}),0==this.X[a].length&&delete this.X[a]);ib(this.X)&&this.Tc()};h.be=function(){Yi(this,\"local\").jb(this.ce);this.ec||rf()||Zi(this)};var Zi=function(a){$i(a);a.Fd=setInterval(function(){for(var b in a.X){var c=k.localStorage.getItem(b),d=a.Y[b];c!=d&&(a.Y[b]=c,c=new Yb({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,Md:!0}),a.We(c))}},1E3)},$i=function(a){a.Fd&&(clearInterval(a.Fd),a.Fd=null)};\nVi.prototype.Tc=function(){Yi(this,\"local\").$a(this.ce);$i(this)};\nVi.prototype.We=function(a){if(a&&a.Ef){var b=a.P.key;if(0==b.indexOf(this.Ke+this.Wd)&&this.X[b]){\"undefined\"!==typeof a.P.Md?Yi(this,\"local\").$a(this.ce):$i(this);if(this.ng){var c=k.localStorage.getItem(b),d=a.P.newValue;if(d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.Y[b]===d&&\"undefined\"===typeof a.P.Md)return}var e=this;c=function(){if(\"undefined\"!==typeof a.P.Md||e.Y[b]!==k.localStorage.getItem(b))e.Y[b]=k.localStorage.getItem(b),e.je(b)};z&&Cb&&10==\nCb&&k.localStorage.getItem(b)!==a.P.newValue&&a.P.newValue!==a.P.oldValue?setTimeout(c,10):c()}}else x(a,r(this.je,this))};Vi.prototype.je=function(a){this.X[a]&&x(this.X[a],function(a){a()})};var aj=function(a,b){this.j=a;this.h=b||Xi()},bj={name:\"authEvent\",C:\"local\"},cj=function(a){return a.h.get(bj,a.j).then(function(a){return ng(a)})};aj.prototype.ib=function(a){this.h.addListener(bj,this.j,a)};aj.prototype.dc=function(a){this.h.removeListener(bj,this.j,a)};var dj=function(a){this.h=a||Xi()},ej={name:\"sessionId\",C:\"session\"};dj.prototype.uc=function(a){return this.h.get(ej,a)};var fj=function(a,b,c,d,e,f,g){this.A=a;this.m=b;this.o=c;this.La=d||null;this.O=g||null;this.Xe=b+\":\"+c;this.og=new dj;this.we=new aj(this.Xe);this.Ad=null;this.ta=[];this.Sf=e||500;this.hg=f||2E3;this.Rb=this.Kc=null},gj=function(a){return new O(\"invalid-cordova-configuration\",a)};\nfj.prototype.Ra=function(){return this.Tb?this.Tb:this.Tb=Ef().then(function(){if(\"function\"!==typeof M(\"universalLinks.subscribe\",k))throw gj(\"cordova-universal-links-plugin is not installed\");if(\"undefined\"===typeof M(\"BuildInfo.packageName\",k))throw gj(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof M(\"cordova.plugins.browsertab.openUrl\",k))throw gj(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof M(\"cordova.InAppBrowser.open\",k))throw gj(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new O(\"cordova-not-ready\");})};var hj=function(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")},ij=function(a){var b=new Sb;b.update(a);return ab(b.digest())};h=fj.prototype;h.fc=function(a,b){b(new O(\"operation-not-supported-in-this-environment\"));return D()};h.$b=function(){return E(new O(\"operation-not-supported-in-this-environment\"))};h.Ze=function(){return!1};h.Ve=function(){return!0};\nh.Ae=function(){return!0};\nh.ac=function(a,b,c){if(this.Kc)return E(new O(\"redirect-operation-pending\"));var d=this,e=k.document,f=null,g=null,l=null,n=null;return this.Kc=Fd(D().then(function(){Rg(b);return jj(d)}).then(function(){return kj(d,a,b,c)}).then(function(){return(new C(function(a,b){g=function(){var b=M(\"cordova.plugins.browsertab.close\",k);a();\"function\"===typeof b&&b();d.Rb&&\"function\"===typeof d.Rb.close&&(d.Rb.close(),d.Rb=null);return!1};d.ib(g);l=function(){f||(f=Ce(d.hg).then(function(){b(new O(\"redirect-cancelled-by-user\"))}))};n=\nfunction(){Xf()&&l()};e.addEventListener(\"resume\",l,!1);L().toLowerCase().match(/android/)||e.addEventListener(\"visibilitychange\",n,!1)})).g(function(a){return lj(d).then(function(){throw a;})})}),function(){l&&e.removeEventListener(\"resume\",l,!1);n&&e.removeEventListener(\"visibilitychange\",n,!1);f&&f.cancel();g&&d.dc(g);d.Kc=null})};\nvar kj=function(a,b,c,d){var e=hj(),f=new mg(b,d,null,e,new O(\"no-auth-event\")),g=M(\"BuildInfo.packageName\",k);if(\"string\"!==typeof g)throw new O(\"invalid-cordova-configuration\");var l=M(\"BuildInfo.displayName\",k),n={};if(L().toLowerCase().match(/iphone|ipad|ipod/))n.ibi=g;else if(L().toLowerCase().match(/android/))n.apn=g;else return E(new O(\"operation-not-supported-in-this-environment\"));l&&(n.appDisplayName=l);e=ij(e);n.sessionId=e;var F=bi(a.A,a.m,a.o,b,c,null,d,a.La,n,a.O);return a.Ra().then(function(){var b=\na.Xe;return a.og.h.set(bj,f.G(),b)}).then(function(){var b=M(\"cordova.plugins.browsertab.isAvailable\",k);if(\"function\"!==typeof b)throw new O(\"invalid-cordova-configuration\");var c=null;b(function(b){if(b){c=M(\"cordova.plugins.browsertab.openUrl\",k);if(\"function\"!==typeof c)throw new O(\"invalid-cordova-configuration\");c(F)}else{c=M(\"cordova.InAppBrowser.open\",k);if(\"function\"!==typeof c)throw new O(\"invalid-cordova-configuration\");b=c;var d=L();d=!(!d.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)&&!d.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\na.Rb=b(F,d?\"_blank\":\"_system\",\"location=yes\")}})})};fj.prototype.Lb=function(a){for(var b=0;b<this.ta.length;b++)try{this.ta[b](a)}catch(c){}};\nvar jj=function(a){a.Ad||(a.Ad=a.Ra().then(function(){return new C(function(b){var c=function(d){b(d);a.dc(c);return!1};a.ib(c);mj(a)})}));return a.Ad},lj=function(a){var b=null;return cj(a.we).then(function(c){b=c;c=a.we;return c.h.remove(bj,c.j)}).then(function(){return b})},mj=function(a){var b=M(\"universalLinks.subscribe\",k);if(\"function\"!==typeof b)throw new O(\"invalid-cordova-configuration\");var c=new mg(\"unknown\",null,null,null,new O(\"no-auth-event\")),d=!1,e=Ce(a.Sf).then(function(){return lj(a).then(function(){d||\na.Lb(c)})}),f=function(b){d=!0;e&&e.cancel();lj(a).then(function(d){var e=c;if(d&&b&&b.url){e=null;var f=b.url;var g=hf(f),l=gf(g,\"link\"),n=gf(hf(l),\"link\");g=gf(g,\"deep_link_id\");f=gf(hf(g),\"link\")||g||n||l||f;-1!=f.indexOf(\"/__/auth/callback\")&&(e=hf(f),e=Sf(gf(e,\"firebaseError\")||null),e=(e=\"object\"===typeof e?lg(e):null)?new mg(d.ma,d.W,null,null,e):new mg(d.ma,d.W,f,d.uc()));e=e||c}a.Lb(e)})},g=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(M(\"BuildInfo.packageName\",k).toLowerCase()+\n\"://\")&&f({url:a});if(\"function\"===typeof g)try{g(a)}catch(n){console.error(n)}};b(null,f)};fj.prototype.ib=function(a){this.ta.push(a);jj(this).g(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new mg(\"unknown\",null,null,null,new O(\"no-auth-event\")),a(b))})};fj.prototype.dc=function(a){Ya(this.ta,function(b){return b==a})};var nj=function(a){this.j=a;this.h=Xi()},oj={name:\"pendingRedirect\",C:\"session\"},pj=function(a){return a.h.set(oj,\"pending\",a.j)},qj=function(a){return a.h.remove(oj,a.j)},rj=function(a){return a.h.get(oj,a.j).then(function(a){return\"pending\"==a})};var vj=function(a,b,c){this.A=a;this.m=b;this.o=c;this.hc=[];this.sb=!1;this.fd=r(this.vd,this);this.Xa=new sj(this);this.Od=new tj(this);this.Xb=new nj(this.m+\":\"+this.o);this.Ia={};this.Ia.unknown=this.Xa;this.Ia.signInViaRedirect=this.Xa;this.Ia.linkViaRedirect=this.Xa;this.Ia.reauthViaRedirect=this.Xa;this.Ia.signInViaPopup=this.Od;this.Ia.linkViaPopup=this.Od;this.Ia.reauthViaPopup=this.Od;this.Z=uj(this.A,this.m,this.o,qf)},uj=function(a,b,c,d){var e=firebase.SDK_VERSION||null;return Df()?new fj(a,\nb,c,e,void 0,void 0,d):new Xh(a,b,c,e,d)};vj.prototype.reset=function(){this.sb=!1;this.Z.dc(this.fd);this.Z=uj(this.A,this.m,this.o)};vj.prototype.Sb=function(){var a=this;this.sb||(this.sb=!0,this.Z.ib(this.fd));var b=this.Z;return this.Z.Ra().g(function(c){a.Z==b&&a.reset();throw c;})};var yj=function(a){a.Z.Ve()&&a.Sb().g(function(b){var c=new mg(\"unknown\",null,null,null,new O(\"operation-not-supported-in-this-environment\"));wj(b)&&a.vd(c)});a.Z.Ae()||xj(a.Xa)};\nvj.prototype.subscribe=function(a){Va(this.hc,a)||this.hc.push(a);if(!this.sb){var b=this;rj(this.Xb).then(function(a){a?qj(b.Xb).then(function(){b.Sb().g(function(a){var c=new mg(\"unknown\",null,null,null,new O(\"operation-not-supported-in-this-environment\"));wj(a)&&b.vd(c)})}):yj(b)}).g(function(){yj(b)})}};vj.prototype.unsubscribe=function(a){Ya(this.hc,function(b){return b==a})};\nvj.prototype.vd=function(a){if(!a)throw new O(\"invalid-auth-event\");for(var b=!1,c=0;c<this.hc.length;c++){var d=this.hc[c];if(d.ke(a.ma,a.W)){(b=this.Ia[a.ma])&&b.Re(a,d);b=!0;break}}xj(this.Xa);return b};var zj=new Wf(2E3,1E4),Aj=new Wf(3E4,6E4);vj.prototype.getRedirectResult=function(){return this.Xa.getRedirectResult()};vj.prototype.$b=function(a,b,c,d,e){var f=this;return this.Z.$b(a,b,c,function(){f.sb||(f.sb=!0,f.Z.ib(f.fd))},function(){f.reset()},d,e)};\nvar wj=function(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1};vj.prototype.ac=function(a,b,c){var d=this,e;return pj(this.Xb).then(function(){return d.Z.ac(a,b,c).g(function(a){if(wj(a))throw new O(\"operation-not-supported-in-this-environment\");e=a;return qj(d.Xb).then(function(){throw e;})}).then(function(){return d.Z.Ze()?new C(function(){}):qj(d.Xb).then(function(){return d.getRedirectResult()}).then(function(){}).g(function(){})})})};\nvj.prototype.fc=function(a,b,c,d){return this.Z.fc(c,function(c){a.bb(b,null,c,d)},zj.get())};var Bj={},Cj=function(a,b,c){var d=b+\":\"+c;Bj[d]||(Bj[d]=new vj(a,b,c));return Bj[d]},sj=function(a){this.h=a;this.Ab=null;this.cc=[];this.bc=[];this.yb=null;this.Rd=!1};sj.prototype.reset=function(){this.Ab=null;this.yb&&(this.yb.cancel(),this.yb=null)};\nsj.prototype.Re=function(a,b){if(!a)return E(new O(\"invalid-auth-event\"));this.reset();this.Rd=!0;var c=a.ma,d=a.W,e=a.getError()&&\"auth/web-storage-unsupported\"==a.getError().code,f=a.getError()&&\"auth/operation-not-supported-in-this-environment\"==a.getError().code;\"unknown\"!=c||e||f?a=a.ba?this.Pd(a,b):b.Nb(c,d)?this.Qd(a,b):E(new O(\"invalid-auth-event\")):(Dj(this,!1,null,null),a=D());return a};var xj=function(a){a.Rd||(a.Rd=!0,Dj(a,!1,null,null))};\nsj.prototype.Pd=function(a){Dj(this,!0,null,a.getError());return D()};sj.prototype.Qd=function(a,b){var c=this;b=b.Nb(a.ma,a.W);var d=a.Eb,e=a.uc(),f=!!a.ma.match(/Redirect$/);return b(d,e).then(function(a){Dj(c,f,a,null)}).g(function(a){Dj(c,f,null,a)})};\nvar Ej=function(a,b){a.Ab=function(){return E(b)};if(a.bc.length)for(var c=0;c<a.bc.length;c++)a.bc[c](b)},Fj=function(a,b){a.Ab=function(){return D(b)};if(a.cc.length)for(var c=0;c<a.cc.length;c++)a.cc[c](b)},Dj=function(a,b,c,d){b?d?Ej(a,d):Fj(a,c):Fj(a,{user:null});a.cc=[];a.bc=[]};sj.prototype.getRedirectResult=function(){var a=this;return new C(function(b,c){a.Ab?a.Ab().then(b,c):(a.cc.push(b),a.bc.push(c),Gj(a))})};\nvar Gj=function(a){var b=new O(\"timeout\");a.yb&&a.yb.cancel();a.yb=Ce(Aj.get()).then(function(){a.Ab||Dj(a,!0,null,b)})},tj=function(a){this.h=a};tj.prototype.Re=function(a,b){if(!a)return E(new O(\"invalid-auth-event\"));var c=a.ma,d=a.W;return a.ba?this.Pd(a,b):b.Nb(c,d)?this.Qd(a,b):E(new O(\"invalid-auth-event\"))};tj.prototype.Pd=function(a,b){b.bb(a.ma,null,a.getError(),a.W);return D()};\ntj.prototype.Qd=function(a,b){var c=a.W,d=a.ma,e=b.Nb(d,c),f=a.Eb;a=a.uc();return e(f,a).then(function(a){b.bb(d,a,null,c)}).g(function(a){b.bb(d,null,a,c)})};var Hj=function(a){this.f=a;this.Ja=this.fa=null;this.Na=0};Hj.prototype.G=function(){return{apiKey:this.f.m,refreshToken:this.fa,accessToken:this.Ja,expirationTime:this.Na}};\nvar Jj=function(a,b){var c=b.idToken,d=b.refreshToken;b=Ij(b.expiresIn);a.Ja=c;a.Na=b;a.fa=d},Ij=function(a){return ma()+1E3*parseInt(a,10)},Kj=function(a,b){return gh(a.f,b).then(function(b){a.Ja=b.access_token;a.Na=Ij(b.expires_in);a.fa=b.refresh_token;return{accessToken:a.Ja,expirationTime:a.Na,refreshToken:a.fa}}).g(function(b){\"auth/user-token-expired\"==b.code&&(a.fa=null);throw b;})};\nHj.prototype.getToken=function(a){a=!!a;return this.Ja&&!this.fa?E(new O(\"user-token-expired\")):a||!this.Ja||ma()>this.Na-3E4?this.fa?Kj(this,{grant_type:\"refresh_token\",refresh_token:this.fa}):D(null):D({accessToken:this.Ja,expirationTime:this.Na,refreshToken:this.fa})};var Lj=function(a,b,c,d,e,f){bg(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})},Mj=function(a,b){B.call(this,a);for(var c in b)this[c]=b[c]};t(Mj,B);\nvar S=function(a,b,c){this.J=[];this.m=a.apiKey;this.o=a.appName;this.A=a.authDomain||null;a=firebase.SDK_VERSION?Kf(firebase.SDK_VERSION):null;this.f=new R(this.m,pf(qf),a);this.ra=new Hj(this.f);Nj(this,b.idToken);Jj(this.ra,b);N(this,\"refreshToken\",this.ra.fa);Oj(this,c||{});G.call(this);this.Lc=!1;this.A&&Of()&&(this.v=Cj(this.A,this.m,this.o));this.Sc=[];this.sa=null;this.wb=Pj(this);this.Gb=r(this.wd,this);var d=this;this.ia=null;this.Ne=function(a){d.Cb(a.languageCode)};this.Dd=null;this.M=\n[];this.Me=function(a){Qj(d,a.Cf)};this.sd=null};t(S,G);S.prototype.Cb=function(a){this.ia=a;$g(this.f,a)};var Rj=function(a,b){a.Dd&&tc(a.Dd,\"languageCodeChanged\",a.Ne);(a.Dd=b)&&lc(b,\"languageCodeChanged\",a.Ne)},Qj=function(a,b){a.M=b;ah(a.f,firebase.SDK_VERSION?Kf(firebase.SDK_VERSION,a.M):null)},Sj=function(a,b){a.sd&&tc(a.sd,\"frameworkChanged\",a.Me);(a.sd=b)&&lc(b,\"frameworkChanged\",a.Me)};S.prototype.wd=function(){this.wb.ub&&(this.wb.stop(),this.wb.start())};\nvar Tj=function(a){try{return firebase.app(a.o).auth()}catch(b){throw new O(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.o+\"'!\");}},Pj=function(a){return new Ki(function(){return a.getIdToken(!0)},function(a){return a&&\"auth/network-request-failed\"==a.code?!0:!1},function(){var b=a.ra.Na-ma()-3E5;return 0<b?b:0},3E4,96E4,!1)},Uj=function(a){a.Kb||a.wb.ub||(a.wb.start(),tc(a,\"tokenChanged\",a.Gb),lc(a,\"tokenChanged\",a.Gb))},Vj=function(a){tc(a,\"tokenChanged\",\na.Gb);a.wb.stop()},Nj=function(a,b){a.He=b;N(a,\"_lat\",b)},Wj=function(a,b){Ya(a.Sc,function(a){return a==b})},Xj=function(a){for(var b=[],c=0;c<a.Sc.length;c++)b.push(a.Sc[c](a));return Cd(b).then(function(){return a})},Yj=function(a){a.v&&!a.Lc&&(a.Lc=!0,a.v.subscribe(a))},Oj=function(a,b){bg(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,providerData:[]})};\nN(S.prototype,\"providerId\",\"firebase\");var Zj=function(){},ak=function(a){return D().then(function(){if(a.Kb)throw new O(\"app-deleted\");})},bk=function(a){return Ra(a.providerData,function(a){return a.providerId})},dk=function(a,b){b&&(ck(a,b.providerId),a.providerData.push(b))},ck=function(a,b){Ya(a.providerData,function(a){return a.providerId==b})},ek=function(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&N(a,b,c)};\nS.prototype.copy=function(a){var b=this;b!=a&&(bg(this,{uid:a.uid,displayName:a.displayName,photoURL:a.photoURL,email:a.email,emailVerified:a.emailVerified,phoneNumber:a.phoneNumber,isAnonymous:a.isAnonymous,providerData:[]}),x(a.providerData,function(a){dk(b,a)}),this.ra=a.ra,N(this,\"refreshToken\",this.ra.fa))};S.prototype.reload=function(){var a=this;return this.c(ak(this).then(function(){return fk(a).then(function(){return Xj(a)}).then(Zj)}))};\nvar fk=function(a){return a.getIdToken().then(function(b){var c=a.isAnonymous;return gk(a,b).then(function(){c||ek(a,\"isAnonymous\",!1);return b})})};S.prototype.getIdToken=function(a){var b=this;return this.c(ak(this).then(function(){return b.ra.getToken(a)}).then(function(a){if(!a)throw new O(\"internal-error\");a.accessToken!=b.He&&(Nj(b,a.accessToken),b.Ta());ek(b,\"refreshToken\",a.refreshToken);return a.accessToken}))};\nS.prototype.getToken=function(a){Zf[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]||(Zf[\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(\"firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead.\"));return this.getIdToken(a)};\nvar hk=function(a,b){b.idToken&&a.He!=b.idToken&&(Jj(a.ra,b),a.Ta(),Nj(a,b.idToken),ek(a,\"refreshToken\",a.ra.fa))};S.prototype.Ta=function(){this.dispatchEvent(new Mj(\"tokenChanged\"))};var gk=function(a,b){return Q(a.f,Jh,{idToken:b}).then(r(a.eg,a))};\nS.prototype.eg=function(a){a=a.users;if(!a||!a.length)throw new O(\"internal-error\");a=a[0];Oj(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber});for(var b=ik(a),c=0;c<b.length;c++)dk(this,b[c]);ek(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};\nvar ik=function(a){return(a=a.providerUserInfo)&&a.length?Ra(a,function(a){return new Lj(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]};S.prototype.reauthenticateAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(a.Gd(this.f,this.uid).then(function(a){hk(b,a);c=jk(b,a,\"reauthenticate\");b.sa=null;return b.reload()}).then(function(){return c}),!0)};S.prototype.reauthenticateWithCredential=function(a){return this.reauthenticateAndRetrieveDataWithCredential(a).then(function(){})};\nvar kk=function(a,b){return fk(a).then(function(){if(Va(bk(a),b))return Xj(a).then(function(){throw new O(\"provider-already-linked\");})})};S.prototype.linkAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(kk(this,a.providerId).then(function(){return b.getIdToken()}).then(function(c){return a.Gc(b.f,c)}).then(function(a){c=jk(b,a,\"link\");return lk(b,a)}).then(function(){return c}))};S.prototype.linkWithCredential=function(a){return this.linkAndRetrieveDataWithCredential(a).then(function(a){return a.user})};\nS.prototype.linkWithPhoneNumber=function(a,b){var c=this;return this.c(kk(this,\"phone\").then(function(){return Ii(Tj(c),a,b,r(c.linkAndRetrieveDataWithCredential,c))}))};S.prototype.reauthenticateWithPhoneNumber=function(a,b){var c=this;return this.c(D().then(function(){return Ii(Tj(c),a,b,r(c.reauthenticateAndRetrieveDataWithCredential,c))}),!0)};var jk=function(a,b,c){var d=Qg(b);b=Si(b);return cg({user:a,credential:d,additionalUserInfo:b,operationType:c})},lk=function(a,b){hk(a,b);return a.reload().then(function(){return a})};\nh=S.prototype;h.updateEmail=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updateEmail(c,a)}).then(function(a){hk(b,a);return b.reload()}))};h.updatePhoneNumber=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return a.Gc(b.f,c)}).then(function(a){hk(b,a);return b.reload()}))};h.updatePassword=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updatePassword(c,a)}).then(function(a){hk(b,a);return b.reload()}))};\nh.updateProfile=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return ak(this);var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updateProfile(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){hk(b,a);ek(b,\"displayName\",a.displayName||null);ek(b,\"photoURL\",a.photoUrl||null);x(b.providerData,function(a){\"password\"===a.providerId&&(N(a,\"displayName\",b.displayName),N(a,\"photoURL\",b.photoURL))});return Xj(b)}).then(Zj))};\nh.unlink=function(a){var b=this;return this.c(fk(this).then(function(c){return Va(bk(b),a)?xh(b.f,c,[a]).then(function(a){var c={};x(a.providerUserInfo||[],function(a){c[a.providerId]=!0});x(bk(b),function(a){c[a]||ck(b,a)});c[Ng.PROVIDER_ID]||N(b,\"phoneNumber\",null);return Xj(b)}):Xj(b).then(function(){throw new O(\"no-such-provider\");})}))};\nh[\"delete\"]=function(){var a=this;return this.c(this.getIdToken().then(function(b){return Q(a.f,Ih,{idToken:b})}).then(function(){a.dispatchEvent(new Mj(\"userDeleted\"))})).then(function(){for(var b=0;b<a.J.length;b++)a.J[b].cancel(\"app-deleted\");Rj(a,null);Sj(a,null);a.J=[];a.Kb=!0;Vj(a);N(a,\"refreshToken\",null);a.v&&a.v.unsubscribe(a)})};\nh.ke=function(a,b){return\"linkViaPopup\"==a&&(this.la||null)==b&&this.ka||\"reauthViaPopup\"==a&&(this.la||null)==b&&this.ka||\"linkViaRedirect\"==a&&(this.Ha||null)==b||\"reauthViaRedirect\"==a&&(this.Ha||null)==b?!0:!1};h.bb=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.la||null)||(c&&this.Va?this.Va(c):b&&!c&&this.ka&&this.ka(b),this.K&&(this.K.cancel(),this.K=null),delete this.ka,delete this.Va)};\nh.Nb=function(a,b){return\"linkViaPopup\"==a&&b==(this.la||null)?r(this.te,this):\"reauthViaPopup\"==a&&b==(this.la||null)?r(this.ue,this):\"linkViaRedirect\"==a&&(this.Ha||null)==b?r(this.te,this):\"reauthViaRedirect\"==a&&(this.Ha||null)==b?r(this.ue,this):null};h.tc=function(){return Lf(this.uid+\":::\")};h.linkWithPopup=function(a){var b=this;return mk(this,\"linkViaPopup\",a,function(){return kk(b,a.providerId).then(function(){return Xj(b)})},!1)};\nh.reauthenticateWithPopup=function(a){return mk(this,\"reauthViaPopup\",a,function(){return D()},!0)};\nvar mk=function(a,b,c,d,e){if(!Of())return E(new O(\"operation-not-supported-in-this-environment\"));if(a.sa&&!e)return E(a.sa);var f=jg(c.providerId),g=a.tc(),l=null;(!Pf()||Gf())&&a.A&&c.isOAuthProvider&&(l=bi(a.A,a.m,a.o,b,c,null,g,firebase.SDK_VERSION||null));var n=zf(l,f&&f.Zb,f&&f.Yb);d=d().then(function(){nk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){return a.v.$b(n,b,c,g,!!l)}).then(function(){return new C(function(c,d){a.bb(b,null,new O(\"cancelled-popup-request\"),a.la||\nnull);a.ka=c;a.Va=d;a.la=g;a.K=a.v.fc(a,b,n,g)})}).then(function(a){n&&yf(n);return a?cg(a):null}).g(function(a){n&&yf(n);throw a;});return a.c(d,e)};S.prototype.linkWithRedirect=function(a){var b=this;return ok(this,\"linkViaRedirect\",a,function(){return kk(b,a.providerId)},!1)};S.prototype.reauthenticateWithRedirect=function(a){return ok(this,\"reauthViaRedirect\",a,function(){return D()},!0)};\nvar ok=function(a,b,c,d,e){if(!Of())return E(new O(\"operation-not-supported-in-this-environment\"));if(a.sa&&!e)return E(a.sa);var f=null,g=a.tc();d=d().then(function(){nk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){a.Ha=g;return Xj(a)}).then(function(b){a.Ya&&(b=a.Ya,b=b.h.set(pk,a.G(),b.j));return b}).then(function(){return a.v.ac(b,c,g)}).g(function(b){f=b;if(a.Ya)return qk(a.Ya);throw f;}).then(function(){if(f)throw f;});return a.c(d,e)},nk=function(a){if(!a.v||!a.Lc){if(a.v&&\n!a.Lc)throw new O(\"internal-error\");throw new O(\"auth-domain-config-required\");}};S.prototype.te=function(a,b){var c=this;this.K&&(this.K.cancel(),this.K=null);var d=null,e=this.getIdToken().then(function(d){return ug(c.f,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=jk(c,a,\"link\");return lk(c,a)}).then(function(){return d});return this.c(e)};\nS.prototype.ue=function(a,b){var c=this;this.K&&(this.K.cancel(),this.K=null);var d=null,e=D().then(function(){return qg(vg(c.f,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=jk(c,a,\"reauthenticate\");hk(c,a);c.sa=null;return c.reload()}).then(function(){return d});return this.c(e,!0)};\nS.prototype.sendEmailVerification=function(a){var b=this,c=null;return this.c(this.getIdToken().then(function(b){c=b;return\"undefined\"===typeof a||ib(a)?{}:Gi(new Fi(a))}).then(function(a){return b.f.sendEmailVerification(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};S.prototype.c=function(a,b){var c=this,d=rk(this,a,b);this.J.push(d);Fd(d,function(){Xa(c.J,d)});return d};\nvar rk=function(a,b,c){return a.sa&&!c?(b.cancel(),E(a.sa)):b.g(function(b){!b||\"auth/user-disabled\"!=b.code&&\"auth/user-token-expired\"!=b.code||(a.sa||a.dispatchEvent(new Mj(\"userInvalidated\")),a.sa=b);throw b;})};S.prototype.toJSON=function(){return this.G()};\nS.prototype.G=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.m,appName:this.o,authDomain:this.A,stsTokenManager:this.ra.G(),redirectEventId:this.Ha||null};x(this.providerData,function(b){a.providerData.push(dg(b))});return a};\nvar sk=function(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c.idToken=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-ma())/1E3;else return null;var d=new S(b,c,a);a.providerData&&x(a.providerData,function(a){a&&dk(d,cg(a))});a.redirectEventId&&(d.Ha=a.redirectEventId);return d},\ntk=function(a,b,c,d){var e=new S(a,b);c&&(e.Ya=c);d&&Qj(e,d);return e.reload().then(function(){return e})};var uk=function(a){this.j=a;this.h=Xi()},pk={name:\"redirectUser\",C:\"session\"},qk=function(a){return a.h.remove(pk,a.j)},vk=function(a,b){return a.h.get(pk,a.j).then(function(a){a&&b&&(a.authDomain=b);return sk(a||{})})};var xk=function(a,b){this.j=a;this.h=b||Xi();this.N=null;this.Jd=this.Bd();this.h.addListener(wk(\"local\"),this.j,r(this.ug,this))};xk.prototype.ug=function(){var a=this,b=wk(\"local\");yk(this,function(){return D().then(function(){return a.N&&\"local\"!=a.N.C?a.h.get(b,a.j):null}).then(function(c){if(c)return zk(a,\"local\").then(function(){a.N=b})})})};var zk=function(a,b){var c=[],d;for(d in Ti)Ti[d]!==b&&c.push(a.h.remove(wk(Ti[d]),a.j));c.push(a.h.remove(Ak,a.j));return Bd(c)};\nxk.prototype.Bd=function(){var a=this,b=wk(\"local\"),c=wk(\"session\"),d=wk(\"none\");return this.h.get(c,this.j).then(function(e){return e?c:a.h.get(d,a.j).then(function(c){return c?d:a.h.get(b,a.j).then(function(c){return c?b:a.h.get(Ak,a.j).then(function(a){return a?wk(a):b})})})}).then(function(b){a.N=b;return zk(a,b.C)}).g(function(){a.N||(a.N=b)})};var Ak={name:\"persistence\",C:\"session\"},wk=function(a){return{name:\"authUser\",C:a}};\nxk.prototype.setPersistence=function(a){var b=null,c=this;Ui(a);return yk(this,function(){return a!=c.N.C?c.h.get(c.N,c.j).then(function(d){b=d;return zk(c,a)}).then(function(){c.N=wk(a);if(b)return c.h.set(c.N,b,c.j)}):D()})};\nvar Bk=function(a){return yk(a,function(){return a.h.set(Ak,a.N.C,a.j)})},Ck=function(a,b){return yk(a,function(){return a.h.set(a.N,b.G(),a.j)})},Dk=function(a){return yk(a,function(){return a.h.remove(a.N,a.j)})},Ek=function(a,b){return yk(a,function(){return a.h.get(a.N,a.j).then(function(a){a&&b&&(a.authDomain=b);return sk(a||{})})})},yk=function(a,b){a.Jd=a.Jd.then(b,b);return a.Jd};var T=function(a){this.Ea=!1;N(this,\"app\",a);if(this.i().options&&this.i().options.apiKey)a=firebase.SDK_VERSION?Kf(firebase.SDK_VERSION):null,this.f=new R(this.i().options&&this.i().options.apiKey,pf(qf),a);else throw new O(\"invalid-api-key\");this.J=[];this.Ka=[];this.Fb=[];this.ag=firebase.INTERNAL.createSubscribe(r(this.Pf,this));this.mc=void 0;this.cg=firebase.INTERNAL.createSubscribe(r(this.Rf,this));Fk(this,null);a=this.i().options.apiKey;var b=this.i().name;this.na=new xk(a+\":\"+b);a=this.i().options.apiKey;\nb=this.i().name;this.zb=new uk(a+\":\"+b);this.pc=this.c(Gk(this));this.ya=this.c(Hk(this));this.Dc=!1;this.ud=r(this.vg,this);this.bf=r(this.pb,this);this.Gb=r(this.wd,this);this.$e=r(this.Lf,this);this.af=r(this.Mf,this);Ik(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this[\"delete\"],this);this.INTERNAL.logFramework=r(this.Xf,this);this.Oa=0;G.call(this);Jk(this);this.M=[]};t(T,G);var Kk=function(a){B.call(this,\"languageCodeChanged\");this.languageCode=a};t(Kk,B);\nvar Lk=function(a){B.call(this,\"frameworkChanged\");this.Cf=a};t(Lk,B);T.prototype.setPersistence=function(a){a=this.na.setPersistence(a);return this.c(a)};T.prototype.Cb=function(a){this.ia===a||this.Ea||(this.ia=a,$g(this.f,this.ia),this.dispatchEvent(new Kk(this.ia)))};T.prototype.useDeviceLanguage=function(){var a=k.navigator;this.Cb(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};\nT.prototype.Xf=function(a){this.M.push(a);ah(this.f,firebase.SDK_VERSION?Kf(firebase.SDK_VERSION,this.M):null);this.dispatchEvent(new Lk(this.M))};var Jk=function(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ia},set:function(a){this.Cb(a)},enumerable:!1});a.ia=null};T.prototype.toJSON=function(){return{apiKey:this.i().options.apiKey,authDomain:this.i().options.authDomain,appName:this.i().name,currentUser:U(this)&&U(this).G()}};\nvar Mk=function(a){return a.xf||E(new O(\"auth-domain-config-required\"))},Ik=function(a){var b=a.i().options.authDomain,c=a.i().options.apiKey;b&&Of()&&(a.xf=a.pc.then(function(){if(!a.Ea){a.v=Cj(b,c,a.i().name);a.v.subscribe(a);U(a)&&Yj(U(a));if(a.Za){Yj(a.Za);var d=a.Za;d.Cb(a.ia);Rj(d,a);d=a.Za;Qj(d,a.M);Sj(d,a);a.Za=null}return a.v}}))};h=T.prototype;h.ke=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.la==b&&!!this.ka;default:return!1}};\nh.bb=function(a,b,c,d){\"signInViaPopup\"==a&&this.la==d&&(c&&this.Va?this.Va(c):b&&!c&&this.ka&&this.ka(b),this.K&&(this.K.cancel(),this.K=null),delete this.ka,delete this.Va)};h.Nb=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.la==b&&this.ka?r(this.zf,this):null};\nh.zf=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.K&&(this.K.cancel(),this.K=null);var d=null,e=null,f=sg(c.f,a).then(function(a){d=Qg(a);e=Si(a);return a});a=c.pc.then(function(){return f}).then(function(a){return Nk(c,a)}).then(function(){return cg({user:U(c),credential:d,additionalUserInfo:e,operationType:\"signIn\"})});return this.c(a)};h.tc=function(){return Lf()};\nh.signInWithPopup=function(a){if(!Of())return E(new O(\"operation-not-supported-in-this-environment\"));var b=this,c=jg(a.providerId),d=this.tc(),e=null;(!Pf()||Gf())&&this.i().options.authDomain&&a.isOAuthProvider&&(e=bi(this.i().options.authDomain,this.i().options.apiKey,this.i().name,\"signInViaPopup\",a,null,d,firebase.SDK_VERSION||null));var f=zf(e,c&&c.Zb,c&&c.Yb);c=Mk(this).then(function(b){return b.$b(f,\"signInViaPopup\",a,d,!!e)}).then(function(){return new C(function(a,c){b.bb(\"signInViaPopup\",\nnull,new O(\"cancelled-popup-request\"),b.la);b.ka=a;b.Va=c;b.la=d;b.K=b.v.fc(b,\"signInViaPopup\",f,d)})}).then(function(a){f&&yf(f);return a?cg(a):null}).g(function(a){f&&yf(f);throw a;});return this.c(c)};h.signInWithRedirect=function(a){if(!Of())return E(new O(\"operation-not-supported-in-this-environment\"));var b=this,c=Mk(this).then(function(){return Bk(b.na)}).then(function(){return b.v.ac(\"signInViaRedirect\",a)});return this.c(c)};\nh.getRedirectResult=function(){if(!Of())return E(new O(\"operation-not-supported-in-this-environment\"));var a=this,b=Mk(this).then(function(){return a.v.getRedirectResult()}).then(function(a){return a?cg(a):null});return this.c(b)};\nvar Nk=function(a,b){var c={};c.apiKey=a.i().options.apiKey;c.authDomain=a.i().options.authDomain;c.appName=a.i().name;return a.pc.then(function(){return tk(c,b,a.zb,$a(a.M))}).then(function(b){if(U(a)&&b.uid==U(a).uid)return U(a).copy(b),a.pb(b);Fk(a,b);Yj(b);return a.pb(b)}).then(function(){a.Ta()})},Fk=function(a,b){U(a)&&(Wj(U(a),a.bf),tc(U(a),\"tokenChanged\",a.Gb),tc(U(a),\"userDeleted\",a.$e),tc(U(a),\"userInvalidated\",a.af),Vj(U(a)));b&&(b.Sc.push(a.bf),lc(b,\"tokenChanged\",a.Gb),lc(b,\"userDeleted\",\na.$e),lc(b,\"userInvalidated\",a.af),0<a.Oa&&Uj(b));N(a,\"currentUser\",b);b&&(b.Cb(a.ia),Rj(b,a),Qj(b,a.M),Sj(b,a))};T.prototype.signOut=function(){var a=this,b=this.ya.then(function(){if(!U(a))return D();Fk(a,null);return Dk(a.na).then(function(){a.Ta()})});return this.c(b)};\nvar Ok=function(a){var b=a.i().options.authDomain;b=vk(a.zb,b).then(function(b){if(a.Za=b)b.Ya=a.zb;return qk(a.zb)});return a.c(b)},Gk=function(a){var b=a.i().options.authDomain,c=Ok(a).then(function(){return Ek(a.na,b)}).then(function(b){return b?(b.Ya=a.zb,a.Za&&(a.Za.Ha||null)==(b.Ha||null)?b:b.reload().then(function(){return Ck(a.na,b).then(function(){return b})}).g(function(c){return\"auth/network-request-failed\"==c.code?b:Dk(a.na)})):null}).then(function(b){Fk(a,b||null)});return a.c(c)},Hk=\nfunction(a){return a.pc.then(function(){return a.getRedirectResult()}).g(function(){}).then(function(){if(!a.Ea)return a.ud()}).g(function(){}).then(function(){if(!a.Ea){a.Dc=!0;var b=a.na;b.h.addListener(wk(\"local\"),b.j,a.ud)}})};h=T.prototype;\nh.vg=function(){var a=this,b=this.i().options.authDomain;return Ek(this.na,b).then(function(b){if(!a.Ea){var c;if(c=U(a)&&b){c=U(a).uid;var e=b.uid;c=void 0===c||null===c||\"\"===c||void 0===e||null===e||\"\"===e?!1:c==e}if(c)return U(a).copy(b),U(a).getIdToken();if(U(a)||b)Fk(a,b),b&&(Yj(b),b.Ya=a.zb),a.v&&a.v.subscribe(a),a.Ta()}})};h.pb=function(a){return Ck(this.na,a)};h.wd=function(){this.Ta();this.pb(U(this))};h.Lf=function(){this.signOut()};h.Mf=function(){this.signOut()};\nvar Pk=function(a,b){var c=null,d=null;return a.c(b.then(function(b){c=Qg(b);d=Si(b);return Nk(a,b)}).then(function(){return cg({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))};h=T.prototype;h.Pf=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};h.Rf=function(a){var b=this;Qk(this,function(){a.next(U(b))})};\nh.onIdTokenChanged=function(a,b,c){var d=this;this.Dc&&firebase.Promise.resolve().then(function(){p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.ag(a,b,c)};h.onAuthStateChanged=function(a,b,c){var d=this;this.Dc&&firebase.Promise.resolve().then(function(){d.mc=d.getUid();p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.cg(a,b,c)};h.Ff=function(a){var b=this,c=this.ya.then(function(){return U(b)?U(b).getIdToken(a).then(function(a){return{accessToken:a}}):null});return this.c(c)};\nh.signInWithCustomToken=function(a){var b=this;return this.ya.then(function(){return Pk(b,Q(b.f,Lh,{token:a}))}).then(function(a){a=a.user;ek(a,\"isAnonymous\",!1);return b.pb(a)}).then(function(){return U(b)})};h.signInWithEmailAndPassword=function(a,b){var c=this;return this.ya.then(function(){return Pk(c,Q(c.f,Gg,{email:a,password:b}))}).then(function(a){return a.user})};h.createUserWithEmailAndPassword=function(a,b){var c=this;return this.ya.then(function(){return Pk(c,Q(c.f,Hh,{email:a,password:b}))}).then(function(a){return a.user})};\nh.signInWithCredential=function(a){return this.signInAndRetrieveDataWithCredential(a).then(function(a){return a.user})};h.signInAndRetrieveDataWithCredential=function(a){var b=this;return this.ya.then(function(){return Pk(b,a.Ob(b.f))})};h.signInAnonymously=function(){var a=this;return this.ya.then(function(){var b=U(a);return b&&b.isAnonymous?b:Pk(a,a.f.signInAnonymously()).then(function(b){b=b.user;ek(b,\"isAnonymous\",!0);return a.pb(b)}).then(function(){return U(a)})})};h.i=function(){return this.app};\nvar U=function(a){return a.currentUser};T.prototype.getUid=function(){return U(this)&&U(this).uid||null};var Rk=function(a){return U(a)&&U(a)._lat||null};h=T.prototype;h.Ta=function(){if(this.Dc){for(var a=0;a<this.Ka.length;a++)if(this.Ka[a])this.Ka[a](Rk(this));if(this.mc!==this.getUid()&&this.Fb.length)for(this.mc=this.getUid(),a=0;a<this.Fb.length;a++)if(this.Fb[a])this.Fb[a](Rk(this))}};h.lf=function(a){this.addAuthTokenListener(a);this.Oa++;0<this.Oa&&U(this)&&Uj(U(this))};\nh.ig=function(a){var b=this;x(this.Ka,function(c){c==a&&b.Oa--});0>this.Oa&&(this.Oa=0);0==this.Oa&&U(this)&&Vj(U(this));this.removeAuthTokenListener(a)};h.addAuthTokenListener=function(a){var b=this;this.Ka.push(a);this.c(this.ya.then(function(){b.Ea||Va(b.Ka,a)&&a(Rk(b))}))};h.removeAuthTokenListener=function(a){Ya(this.Ka,function(b){return b==a})};var Qk=function(a,b){a.Fb.push(b);a.c(a.ya.then(function(){!a.Ea&&Va(a.Fb,b)&&a.mc!==a.getUid()&&(a.mc=a.getUid(),b(Rk(a)))}))};h=T.prototype;\nh[\"delete\"]=function(){this.Ea=!0;for(var a=0;a<this.J.length;a++)this.J[a].cancel(\"app-deleted\");this.J=[];this.na&&(a=this.na,a.h.removeListener(wk(\"local\"),a.j,this.ud));this.v&&this.v.unsubscribe(this);return firebase.Promise.resolve()};h.c=function(a){var b=this;this.J.push(a);Fd(a,function(){Xa(b.J,a)});return a};h.fetchProvidersForEmail=function(a){return this.c(lh(this.f,a))};h.verifyPasswordResetCode=function(a){return this.checkActionCode(a).then(function(a){return a.data.email})};\nh.confirmPasswordReset=function(a,b){return this.c(this.f.confirmPasswordReset(a,b).then(function(){}))};h.checkActionCode=function(a){return this.c(this.f.checkActionCode(a).then(function(a){return new Ji(a)}))};h.applyActionCode=function(a){return this.c(this.f.applyActionCode(a).then(function(){}))};h.sendPasswordResetEmail=function(a,b){var c=this;return this.c(D().then(function(){return\"undefined\"===typeof b||ib(b)?{}:Gi(new Fi(b))}).then(function(b){return c.f.sendPasswordResetEmail(a,b)}).then(function(){}))};\nh.signInWithPhoneNumber=function(a,b){return this.c(Ii(this,a,b,r(this.signInAndRetrieveDataWithCredential,this)))};var Tk=function(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,g=0;g<b.length;g++)if(b[g].optional)f=!0;else{if(f)throw new O(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");e++}f=b.length;if(c.length<e||f<c.length)d=\"Expected \"+(e==f?1==e?\"1 argument\":e+\" arguments\":e+\"-\"+f+\" arguments\")+\" but got \"+c.length+\".\";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].U(c[e])&&!f){b=b[e];if(0>e||e>=Sk.length)throw new O(\"internal-error\",\n\"Argument validator received an unsupported number of arguments.\");c=Sk[e];d=(d?\"\":c+\" argument \")+(b.name?'\"'+b.name+'\" ':\"\")+\"must be \"+b.T+\".\";break a}d=null}}if(d)throw new O(\"argument-error\",a+\" failed: \"+d);},Sk=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \"),V=function(a,b){return{name:a||\"\",T:\"a valid string\",optional:!!b,U:m}},Uk=function(){return{name:\"opt_forceRefresh\",T:\"a boolean\",optional:!0,U:ca}},W=function(a,b){return{name:a||\"\",T:\"a valid object\",optional:!!b,\nU:q}},Vk=function(a,b){return{name:a||\"\",T:\"a function\",optional:!!b,U:p}},Wk=function(a,b){return{name:a||\"\",T:\"null\",optional:!!b,U:fa}},Xk=function(){return{name:\"\",T:\"an HTML element\",optional:!1,U:function(a){return!!(a&&a instanceof Element)}}},Yk=function(){return{name:\"auth\",T:\"an instance of Firebase Auth\",optional:!0,U:function(a){return!!(a&&a instanceof T)}}},Zk=function(){return{name:\"app\",T:\"an instance of Firebase App\",optional:!0,U:function(a){return!!(a&&a instanceof firebase.app.App)}}},\n$k=function(a){return{name:a?a+\"Credential\":\"credential\",T:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,U:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.Ob||!c)}}},al=function(){return{name:\"authProvider\",T:\"a valid Auth provider\",optional:!1,U:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}},bl=function(){return{name:\"applicationVerifier\",T:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,U:function(a){return!!(a&&\nm(a.type)&&p(a.verify))}}},X=function(a,b,c,d){return{name:c||\"\",T:a.T+\" or \"+b.T,optional:!!d,U:function(c){return a.U(c)||b.U(c)}}};var Y=function(a,b){for(var c in b){var d=b[c].name;a[d]=cl(d,a[c],b[c].a)}},Z=function(a,b,c,d){a[b]=cl(b,c,d)},cl=function(a,b,c){if(!c)return b;var d=dl(a);a=function(){var a=Array.prototype.slice.call(arguments);Tk(d,c,a);return b.apply(this,a)};for(var e in b)a[e]=b[e];for(e in b.prototype)a.prototype[e]=b.prototype[e];return a},dl=function(a){a=a.split(\".\");return a[a.length-1]};Y(T.prototype,{applyActionCode:{name:\"applyActionCode\",a:[V(\"code\")]},checkActionCode:{name:\"checkActionCode\",a:[V(\"code\")]},confirmPasswordReset:{name:\"confirmPasswordReset\",a:[V(\"code\"),V(\"newPassword\")]},createUserWithEmailAndPassword:{name:\"createUserWithEmailAndPassword\",a:[V(\"email\"),V(\"password\")]},fetchProvidersForEmail:{name:\"fetchProvidersForEmail\",a:[V(\"email\")]},getRedirectResult:{name:\"getRedirectResult\",a:[]},onAuthStateChanged:{name:\"onAuthStateChanged\",a:[X(W(),Vk(),\"nextOrObserver\"),\nVk(\"opt_error\",!0),Vk(\"opt_completed\",!0)]},onIdTokenChanged:{name:\"onIdTokenChanged\",a:[X(W(),Vk(),\"nextOrObserver\"),Vk(\"opt_error\",!0),Vk(\"opt_completed\",!0)]},sendPasswordResetEmail:{name:\"sendPasswordResetEmail\",a:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),Wk(null,!0),\"opt_actionCodeSettings\",!0)]},setPersistence:{name:\"setPersistence\",a:[V(\"persistence\")]},signInAndRetrieveDataWithCredential:{name:\"signInAndRetrieveDataWithCredential\",a:[$k()]},signInAnonymously:{name:\"signInAnonymously\",a:[]},\nsignInWithCredential:{name:\"signInWithCredential\",a:[$k()]},signInWithCustomToken:{name:\"signInWithCustomToken\",a:[V(\"token\")]},signInWithEmailAndPassword:{name:\"signInWithEmailAndPassword\",a:[V(\"email\"),V(\"password\")]},signInWithPhoneNumber:{name:\"signInWithPhoneNumber\",a:[V(\"phoneNumber\"),bl()]},signInWithPopup:{name:\"signInWithPopup\",a:[al()]},signInWithRedirect:{name:\"signInWithRedirect\",a:[al()]},signOut:{name:\"signOut\",a:[]},toJSON:{name:\"toJSON\",a:[V(null,!0)]},useDeviceLanguage:{name:\"useDeviceLanguage\",\na:[]},verifyPasswordResetCode:{name:\"verifyPasswordResetCode\",a:[V(\"code\")]}});(function(a,b){for(var c in b){var d=b[c].name;if(d!==c){var e=b[c].nf;Object.defineProperty(a,d,{get:function(){return this[c]},set:function(a){Tk(d,[e],[a],!0);this[c]=a},enumerable:!0})}}})(T.prototype,{lc:{name:\"languageCode\",nf:X(V(),Wk(),\"languageCode\")}});T.Persistence=Ti;T.Persistence.LOCAL=\"local\";T.Persistence.SESSION=\"session\";T.Persistence.NONE=\"none\";\nY(S.prototype,{\"delete\":{name:\"delete\",a:[]},getIdToken:{name:\"getIdToken\",a:[Uk()]},getToken:{name:\"getToken\",a:[Uk()]},linkAndRetrieveDataWithCredential:{name:\"linkAndRetrieveDataWithCredential\",a:[$k()]},linkWithCredential:{name:\"linkWithCredential\",a:[$k()]},linkWithPhoneNumber:{name:\"linkWithPhoneNumber\",a:[V(\"phoneNumber\"),bl()]},linkWithPopup:{name:\"linkWithPopup\",a:[al()]},linkWithRedirect:{name:\"linkWithRedirect\",a:[al()]},reauthenticateAndRetrieveDataWithCredential:{name:\"reauthenticateAndRetrieveDataWithCredential\",\na:[$k()]},reauthenticateWithCredential:{name:\"reauthenticateWithCredential\",a:[$k()]},reauthenticateWithPhoneNumber:{name:\"reauthenticateWithPhoneNumber\",a:[V(\"phoneNumber\"),bl()]},reauthenticateWithPopup:{name:\"reauthenticateWithPopup\",a:[al()]},reauthenticateWithRedirect:{name:\"reauthenticateWithRedirect\",a:[al()]},reload:{name:\"reload\",a:[]},sendEmailVerification:{name:\"sendEmailVerification\",a:[X(W(\"opt_actionCodeSettings\",!0),Wk(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",a:[V(null,\n!0)]},unlink:{name:\"unlink\",a:[V(\"provider\")]},updateEmail:{name:\"updateEmail\",a:[V(\"email\")]},updatePassword:{name:\"updatePassword\",a:[V(\"password\")]},updatePhoneNumber:{name:\"updatePhoneNumber\",a:[$k(\"phone\")]},updateProfile:{name:\"updateProfile\",a:[W(\"profile\")]}});Y(C.prototype,{g:{name:\"catch\"},then:{name:\"then\"}});Y(Hi.prototype,{confirm:{name:\"confirm\",a:[V(\"verificationCode\")]}});Z(Ig,\"credential\",function(a,b){return new Fg(a,b)},[V(\"email\"),V(\"password\")]);\nY(xg.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(xg,\"credential\",yg,[X(V(),W(),\"token\")]);Y(zg.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(zg,\"credential\",Ag,[X(V(),W(),\"token\")]);Y(Bg.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});\nZ(Bg,\"credential\",Cg,[X(V(),X(W(),Wk()),\"idToken\"),X(V(),Wk(),\"accessToken\",!0)]);Y(Dg.prototype,{setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});Z(Dg,\"credential\",Eg,[X(V(),W(),\"token\"),V(\"secret\",!0)]);Y(P.prototype,{addScope:{name:\"addScope\",a:[V(\"scope\")]},credential:{name:\"credential\",a:[X(V(),Wk(),\"idToken\",!0),X(V(),Wk(),\"accessToken\",!0)]},setCustomParameters:{name:\"setCustomParameters\",a:[W(\"customOAuthParameters\")]}});\nZ(Ng,\"credential\",Pg,[V(\"verificationId\"),V(\"verificationCode\")]);Y(Ng.prototype,{verifyPhoneNumber:{name:\"verifyPhoneNumber\",a:[V(\"phoneNumber\"),bl()]}});Y(O.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(Sg.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(og.prototype,{toJSON:{name:\"toJSON\",a:[V(null,!0)]}});Y(ki.prototype,{clear:{name:\"clear\",a:[]},render:{name:\"render\",a:[]},verify:{name:\"verify\",a:[]}});\n(function(){if(\"undefined\"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:T,Error:O};Z(a,\"EmailAuthProvider\",Ig,[]);Z(a,\"FacebookAuthProvider\",xg,[]);Z(a,\"GithubAuthProvider\",zg,[]);Z(a,\"GoogleAuthProvider\",Bg,[]);Z(a,\"TwitterAuthProvider\",Dg,[]);Z(a,\"OAuthProvider\",P,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",Ng,[Yk()]);Z(a,\"RecaptchaVerifier\",ki,[X(V(),Xk(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),Zk()]);firebase.INTERNAL.registerService(\"auth\",function(a,\nc){a=new T(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.Ff,a),addAuthTokenListener:r(a.lf,a),removeAuthTokenListener:r(a.ig,a)}});return a},a,function(a,c){if(\"create\"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:S})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();}).call(this);\n","try {\n          webpackJsonpFirebase([0],[\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return assert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return assertionError; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(17);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\nvar assert = function assert(assertion, message) {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\nvar assertionError = function assertionError(message) {\n  return new Error('Firebase Database (' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* CONSTANTS */].SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar utils_obj = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/utils/globalScope.ts\nvar globalScope = __webpack_require__(32);\n\n// CONCATENATED MODULE: ./src/utils/crypt.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar stringToByteArray = function stringToByteArray(str) {\n    var output = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        while (c > 255) {\n            output[p++] = c & 255;\n            c >>= 8;\n        }\n        output[p++] = c;\n    }\n    return output;\n};\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\nvar byteArrayToString = function byteArrayToString(bytes) {\n    var CHUNK_SIZE = 8192;\n    // Special-case the simple case for speed's sake.\n    if (bytes.length < CHUNK_SIZE) {\n        return String.fromCharCode.apply(null, bytes);\n    }\n    // The remaining logic splits conversion by chunks since\n    // Function#apply() has a maximum parameter count.\n    // See discussion: http://goo.gl/LrWmZ9\n    var str = '';\n    for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n        var chunk = bytes.slice(i, i + CHUNK_SIZE);\n        str += String.fromCharCode.apply(null, chunk);\n    }\n    return str;\n};\n// Static lookup maps, lazily populated by init_()\nvar base64 = {\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    byteToCharMap_: null,\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    charToByteMap_: null,\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    byteToCharMapWebSafe_: null,\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\n    charToByteMapWebSafe_: null,\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\n    HAS_NATIVE_SUPPORT: typeof globalScope[\"a\" /* globalScope */].atob === 'function',\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\n    encodeByteArray: function encodeByteArray(input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;\n            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\n    encodeString: function encodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\n    decodeString: function decodeString(input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\n    decodeStringToByteArray: function decodeStringToByteArray(input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = byte1 << 2 | byte2 >> 4;\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = byte3 << 6 & 0xc0 | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\n    init_: function init_() {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n// CONCATENATED MODULE: ./src/utils/hash.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\nvar Hash = /** @class */function () {\n  function Hash() {\n    /**\r\n     * The block size for the hasher.\r\n     * @type {number}\r\n     */\n    this.blockSize = -1;\n  }\n  return Hash;\n}();\n\n// CONCATENATED MODULE: ./src/utils/Sha1.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\nvar Sha1 = /** @class */function (_super) {\n    __extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.chain_ = [];\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.buf_ = [];\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.W_ = [];\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\n        _this.pad_ = [];\n        /**\r\n         * @private {number}\r\n         */\n        _this.inbuf_ = 0;\n        /**\r\n         * @private {number}\r\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] = buf.charCodeAt(opt_offset) << 24 | buf.charCodeAt(opt_offset + 1) << 16 | buf.charCodeAt(opt_offset + 2) << 8 | buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        } else {\n            for (var i = 0; i < 16; i++) {\n                W[i] = buf[opt_offset] << 24 | buf[opt_offset + 1] << 16 | buf[opt_offset + 2] << 8 | buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = (t << 1 | t >>> 31) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ b & (c ^ d);\n                    k = 0x5a827999;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            } else {\n                if (i < 60) {\n                    f = b & c | d & (b | c);\n                    k = 0x8f1bbcdc;\n                } else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;\n            e = d;\n            d = c;\n            c = (b << 30 | b >>> 2) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = this.chain_[0] + a & 0xffffffff;\n        this.chain_[1] = this.chain_[1] + b & 0xffffffff;\n        this.chain_[2] = this.chain_[2] + c & 0xffffffff;\n        this.chain_[3] = this.chain_[3] + d & 0xffffffff;\n        this.chain_[4] = this.chain_[4] + e & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            } else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        } else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = this.chain_[i] >> j & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(Hash);\n\n// EXTERNAL MODULE: ./src/utils/utf8.ts\nvar utf8 = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/database/core/storage/storage.ts + 2 modules\nvar storage = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./src/utils/environment.ts\nvar environment = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/database/core/util/util.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LUIDGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return util_base64Encode; });\n/* unused harmony export setBufferImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return util_base64Decode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return util_sha1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return util_enableLogging; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return util_log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return logWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return fatal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return warn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return warnIfPageIsSecure; });\n/* unused harmony export warnAboutUnsupportedMethod */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return isInvalidJSONNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return util_executeWhenDOMReady; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MIN_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MAX_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return nameCompare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return stringCompare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return util_requireKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return util_ObjectToUniqueKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return splitStringBySize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return util_each; });\n/* unused harmony export bindCallback */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return util_doubleToIEEE754String; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return isChromeExtensionContentScript; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return isWindowsStoreApp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return errorForServerCode; });\n/* unused harmony export INTEGER_REGEXP_ */\n/* unused harmony export tryParseInt */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return exceptionGuard; });\n/* unused harmony export callUserCallback */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return beingCrawled; });\n/* unused harmony export exportPropGetter */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return setTimeoutNonBlocking; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\nvar LUIDGenerator = function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n}();\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\nvar util_base64Encode = function base64Encode(str) {\n    var utf8Bytes = Object(utf8[\"b\" /* stringToByteArray */])(str);\n    return base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/true);\n};\nvar BufferImpl;\nfunction setBufferImpl(impl) {\n    BufferImpl = impl;\n}\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\nvar util_base64Decode = function base64Decode(str) {\n    try {\n        if (BufferImpl) {\n            return new BufferImpl(str, 'base64').toString('utf8');\n        } else {\n            return base64.decodeString(str, /*useWebSafe=*/true);\n        }\n    } catch (e) {\n        util_log('base64Decode failed: ', e);\n    }\n    return null;\n};\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\nvar util_sha1 = function sha1(str) {\n    var utf8Bytes = Object(utf8[\"b\" /* stringToByteArray */])(str);\n    var sha1 = new Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\nvar util_buildLogMessage_ = function buildLogMessage_() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) || var_args[i] && _typeof(var_args[i]) === 'object' && typeof var_args[i].length === 'number') {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        } else if (_typeof(var_args[i]) === 'object') {\n            message += Object(json[\"b\" /* stringify */])(var_args[i]);\n        } else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\nvar util_enableLogging = function enableLogging(logger_, persistent) {\n    Object(assert[\"a\" /* assert */])(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        if (typeof console !== 'undefined') {\n            if (typeof console.log === 'function') {\n                logger = console.log.bind(console);\n            } else if (_typeof(console.log) === 'object') {\n                // IE does this.\n                logger = function logger(message) {\n                    console.log(message);\n                };\n            }\n        }\n        if (persistent) storage[\"b\" /* SessionStorage */].set('logging_enabled', true);\n    } else if (typeof logger_ === 'function') {\n        logger = logger_;\n    } else {\n        logger = null;\n        storage[\"b\" /* SessionStorage */].remove('logging_enabled');\n    }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\nvar util_log = function log() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (logger === null && storage[\"b\" /* SessionStorage */].get('logging_enabled') === true) util_enableLogging(true);\n    }\n    if (logger) {\n        var message = util_buildLogMessage_.apply(null, var_args);\n        logger(message);\n    }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\nvar logWrapper = function logWrapper(prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        util_log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\r\n * @param {...string} var_args\r\n */\nvar error = function error() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE INTERNAL ERROR: ' + util_buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.error !== 'undefined') {\n            console.error(message);\n        } else {\n            console.log(message);\n        }\n    }\n};\n/**\r\n * @param {...string} var_args\r\n */\nvar fatal = function fatal() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = util_buildLogMessage_.apply(void 0, var_args);\n    throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n/**\r\n * @param {...*} var_args\r\n */\nvar warn = function warn() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (typeof console !== 'undefined') {\n        var message = 'FIREBASE WARNING: ' + util_buildLogMessage_.apply(void 0, var_args);\n        if (typeof console.warn !== 'undefined') {\n            console.warn(message);\n        } else {\n            console.log(message);\n        }\n    }\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n        warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n    }\n};\n/**\r\n * @param {!String} methodName\r\n */\nvar warnAboutUnsupportedMethod = function warnAboutUnsupportedMethod(methodName) {\n    warn(methodName + ' is unsupported and will likely change soon.  ' + 'Please do not use.');\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n    return typeof data === 'number' && (data != data || // NaN\n    data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\nvar util_executeWhenDOMReady = function executeWhenDOMReady(fn) {\n    if (Object(environment[\"b\" /* isNodeSdk */])() || document.readyState === 'complete') {\n        fn();\n    } else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function wrappedFn_1() {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        } else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete') wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\nvar nameCompare = function nameCompare(a, b) {\n    if (a === b) {\n        return 0;\n    } else if (a === MIN_NAME || b === MAX_NAME) {\n        return -1;\n    } else if (b === MIN_NAME || a === MAX_NAME) {\n        return 1;\n    } else {\n        var aAsInt = tryParseInt(a),\n            bAsInt = tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            } else {\n                return -1;\n            }\n        } else if (bAsInt !== null) {\n            return 1;\n        } else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\nvar stringCompare = function stringCompare(a, b) {\n    if (a === b) {\n        return 0;\n    } else if (a < b) {\n        return -1;\n    } else {\n        return 1;\n    }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\nvar util_requireKey = function requireKey(key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    } else {\n        throw new Error('Missing required key (' + key + ') in object: ' + Object(json[\"b\" /* stringify */])(obj));\n    }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\nvar util_ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return Object(json[\"b\" /* stringify */])(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0) key += ',';\n        key += Object(json[\"b\" /* stringify */])(keys[i]);\n        key += ':';\n        key += ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        } else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\nvar util_each = function each(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    } else {\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\n        Object(utils_obj[\"f\" /* forEach */])(obj, function (key, val) {\n            return fn(val, key);\n        });\n    }\n};\n/**\r\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\r\n * @param {function(*)} callback Callback function.\r\n * @param {?Object=} context Optional context to bind to.\r\n * @return {function(*)}\r\n */\nvar bindCallback = function bindCallback(callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\nvar util_doubleToIEEE754String = function doubleToIEEE754String(v) {\n    Object(assert[\"a\" /* assert */])(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11,\n        fbits = 52;\n    var bias = (1 << ebits - 1) - 1,\n        s,\n        e,\n        f,\n        ln,\n        i,\n        bits,\n        str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    } else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        } else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1) hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n    return !!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n    // Check for the presence of a couple WinRT globals\n    return (typeof Windows === 'undefined' ? 'undefined' : _typeof(Windows)) === 'object' && _typeof(Windows.UI) === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\nvar errorForServerCode = function errorForServerCode(code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n    } else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    } else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\nvar tryParseInt = function tryParseInt(str) {\n    if (INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\nvar exceptionGuard = function exceptionGuard(fn) {\n    try {\n        fn();\n    } catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\r\n * Helper function to safely call opt_callback with the specified arguments.  It:\r\n * 1. Turns into a no-op if opt_callback is null or undefined.\r\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\r\n *\r\n * @param {?Function=} callback Optional onComplete callback.\r\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\r\n */\nvar callUserCallback = function callUserCallback(callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\nvar beingCrawled = function beingCrawled() {\n    var userAgent = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['navigator'] && window['navigator']['userAgent'] || '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Export a property of an object using a getter function.\r\n *\r\n * @param {!Object} object\r\n * @param {string} name\r\n * @param {!function(): *} fnGet\r\n */\nvar exportPropGetter = function exportPropGetter(object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n    var timeout = setTimeout(fn, time);\n    if ((typeof timeout === 'undefined' ? 'undefined' : _typeof(timeout)) === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return contains; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return safeGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return forEach; });\n/* unused harmony export extend */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return clone; });\n/* unused harmony export isNonNullObject */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return getCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return findKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return findValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getAnyKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return every; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nvar contains = function contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar safeGet = function safeGet(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n    // else return undefined.\n};\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\nvar forEach = function forEach(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\nvar extend = function extend(objTo, objFrom) {\n    forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\nvar clone = function clone(obj) {\n    return extend({}, obj);\n};\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\nvar isNonNullObject = function isNonNullObject(obj) {\n    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n};\nvar isEmpty = function isEmpty(obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nvar getCount = function getCount(obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nvar map = function map(obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nvar findKey = function findKey(obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nvar findValue = function findValue(obj, fn, opt_this) {\n    var key = findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nvar getAnyKey = function getAnyKey(obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nvar getValues = function getValues(obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\nvar every = function every(obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n/***/ }),\n/* 3 */,\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Path; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ValidationPath; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_utf8__ = __webpack_require__(25);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\nvar Path = /** @class */function () {\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        } else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\n        get: function get() {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length) return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\r\n     * @return {!Path}\r\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\r\n     * @return {?string}\r\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length) return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '') pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) {\n            begin = 0;\n        }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\r\n     * @return {?Path}\r\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length) return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n            pieces.push(this.pieces_[i]);\n        }return new Path(pieces, 0);\n    };\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            pieces.push(this.pieces_[i]);\n        }if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        } else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0) pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(),\n            inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        } else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        } else {\n            throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n        }\n    };\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = Object(__WEBPACK_IMPORTED_MODULE_0__util__[\"v\" /* nameCompare */])(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0) return cmp;\n        }\n        if (leftKeys.length === rightKeys.length) return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\nvar ValidationPath = /** @class */function () {\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += Object(__WEBPACK_IMPORTED_MODULE_1__utils_utf8__[\"a\" /* stringLength */])(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function get() {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function get() {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += Object(__WEBPACK_IMPORTED_MODULE_1__utils_utf8__[\"a\" /* stringLength */])(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= Object(__WEBPACK_IMPORTED_MODULE_1__utils_utf8__[\"a\" /* stringLength */])(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n        }\n    };\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = setNodeFromJSON;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = setMaxNode;\n/* unused harmony export PriorityIndex */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PRIORITY_INDEX; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Index__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__LeafNode__ = __webpack_require__(21);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\nvar nodeFromJSON;\nvar MAX_NODE;\nfunction setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\nvar PriorityIndex = /** @class */function (_super) {\n    __extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"v\" /* nameCompare */])(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return __WEBPACK_IMPORTED_MODULE_2__Node__[\"a\" /* NamedNode */].MIN;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new __WEBPACK_IMPORTED_MODULE_2__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"b\" /* MAX_NAME */], new __WEBPACK_IMPORTED_MODULE_3__LeafNode__[\"a\" /* LeafNode */]('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new __WEBPACK_IMPORTED_MODULE_2__Node__[\"a\" /* NamedNode */](name, new __WEBPACK_IMPORTED_MODULE_3__LeafNode__[\"a\" /* LeafNode */]('[PRIORITY-POST]', priorityNode));\n    };\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(__WEBPACK_IMPORTED_MODULE_0__Index__[\"a\" /* Index */]);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ChildrenNode; });\n/* unused harmony export MaxNode */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MAX_NODE; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_SortedMap__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__snap__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__IndexMap__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__LeafNode__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__comparators__ = __webpack_require__(44);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\n\n\n\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\nvar ChildrenNode = /** @class */function () {\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\n        this.children_ = children_;\n        this.priorityNode_ = priorityNode_;\n        this.indexMap_ = indexMap_;\n        this.lazyHash_ = null;\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\n        if (this.priorityNode_) {\n            Object(__WEBPACK_IMPORTED_MODULE_4__snap__[\"c\" /* validatePriorityNode */])(this.priorityNode_);\n        }\n        if (this.children_.isEmpty()) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n        }\n    }\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n        get: function get() {\n            return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new __WEBPACK_IMPORTED_MODULE_2__util_SortedMap__[\"b\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_9__comparators__[\"a\" /* NAME_COMPARATOR */]), null, __WEBPACK_IMPORTED_MODULE_7__IndexMap__[\"a\" /* IndexMap */].Default));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    ChildrenNode.prototype.isLeafNode = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPriority = function () {\n        return this.priorityNode_ || EMPTY_NODE;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n        if (this.children_.isEmpty()) {\n            // Don't allow priorities on empty nodes\n            return this;\n        } else {\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.getPriority();\n        } else {\n            var child = this.children_.get(childName);\n            return child === null ? EMPTY_NODE : child;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getChild = function (path) {\n        var front = path.getFront();\n        if (front === null) return this;\n        return this.getImmediateChild(front).getChild(path.popFront());\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hasChild = function (childName) {\n        return this.children_.get(childName) !== null;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(newChildNode, 'We should always be passing snapshot nodes');\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        } else {\n            var namedNode = new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](childName, newChildNode);\n            var newChildren = void 0,\n                newIndexMap = void 0,\n                newPriority = void 0;\n            if (newChildNode.isEmpty()) {\n                newChildren = this.children_.remove(childName);\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n            } else {\n                newChildren = this.children_.insert(childName, newChildNode);\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n            }\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        } else {\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n            return this.updateImmediateChild(front, newImmediateChild);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.isEmpty = function () {\n        return this.children_.isEmpty();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.numChildren = function () {\n        return this.children_.count();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.val = function (exportFormat) {\n        if (this.isEmpty()) return null;\n        var obj = {};\n        var numKeys = 0,\n            maxKey = 0,\n            allIntegerKeys = true;\n        this.forEachChild(__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n            obj[key] = childNode.val(exportFormat);\n            numKeys++;\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            } else {\n                allIntegerKeys = false;\n            }\n        });\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            var array = [];\n            for (var key in obj) {\n                array[key] = obj[key];\n            }return array;\n        } else {\n            if (exportFormat && !this.getPriority().isEmpty()) {\n                obj['.priority'] = this.getPriority().val();\n            }\n            return obj;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash_1 = '';\n            if (!this.getPriority().isEmpty()) toHash_1 += 'priority:' + Object(__WEBPACK_IMPORTED_MODULE_4__snap__[\"a\" /* priorityHashText */])(this.getPriority().val()) + ':';\n            this.forEachChild(__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n                var childHash = childNode.hash();\n                if (childHash !== '') toHash_1 += ':' + key + ':' + childHash;\n            });\n            this.lazyHash_ = toHash_1 === '' ? '' : Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"y\" /* sha1 */])(toHash_1);\n        }\n        return this.lazyHash_;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            var predecessor = idx.getPredecessorKey(new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](childName, childNode));\n            return predecessor ? predecessor.name : null;\n        } else {\n            return this.children_.getPredecessorKey(childName);\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var minKey = idx.minKey();\n            return minKey && minKey.name;\n        } else {\n            return this.children_.minKey();\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n        var minKey = this.getFirstChildName(indexDefinition);\n        if (minKey) {\n            return new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](minKey, this.children_.get(minKey));\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var maxKey = idx.maxKey();\n            return maxKey && maxKey.name;\n        } else {\n            return this.children_.maxKey();\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n        var maxKey = this.getLastChildName(indexDefinition);\n        if (maxKey) {\n            return new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](maxKey, this.children_.get(maxKey));\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildrenNode.prototype.forEachChild = function (index, action) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            return idx.inorderTraversal(function (wrappedNode) {\n                return action(wrappedNode.name, wrappedNode.node);\n            });\n        } else {\n            return this.children_.inorderTraversal(action);\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n    };\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getIteratorFrom(startPost, function (key) {\n                return key;\n            });\n        } else {\n            var iterator = this.children_.getIteratorFrom(startPost.name, __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */].Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n    };\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getReverseIteratorFrom(endPost, function (key) {\n                return key;\n            });\n        } else {\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */].Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildrenNode.prototype.compareTo = function (other) {\n        if (this.isEmpty()) {\n            if (other.isEmpty()) {\n                return 0;\n            } else {\n                return -1;\n            }\n        } else if (other.isLeafNode() || other.isEmpty()) {\n            return 1;\n        } else if (other === MAX_NODE) {\n            return -1;\n        } else {\n            // Must be another node with children.\n            return 0;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\n        if (indexDefinition === __WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__[\"a\" /* KEY_INDEX */] || this.indexMap_.hasIndex(indexDefinition)) {\n            return this;\n        } else {\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildrenNode.prototype.isIndexed = function (index) {\n        return index === __WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__[\"a\" /* KEY_INDEX */] || this.indexMap_.hasIndex(index);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildrenNode.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        } else if (other.isLeafNode()) {\n            return false;\n        } else {\n            var otherChildrenNode = other;\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n                return false;\n            } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n                var thisIter = this.getIterator(__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */]);\n                var otherIter = otherChildrenNode.getIterator(__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */]);\n                var thisCurrent = thisIter.getNext();\n                var otherCurrent = otherIter.getNext();\n                while (thisCurrent && otherCurrent) {\n                    if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n                        return false;\n                    }\n                    thisCurrent = thisIter.getNext();\n                    otherCurrent = otherIter.getNext();\n                }\n                return thisCurrent === null && otherCurrent === null;\n            } else {\n                return false;\n            }\n        }\n    };\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n        if (indexDefinition === __WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__[\"a\" /* KEY_INDEX */]) {\n            return null;\n        } else {\n            return this.indexMap_.get(indexDefinition.toString());\n        }\n    };\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n    return ChildrenNode;\n}();\n\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\nvar MaxNode = /** @class */function (_super) {\n    __extends(MaxNode, _super);\n    function MaxNode() {\n        return _super.call(this, new __WEBPACK_IMPORTED_MODULE_2__util_SortedMap__[\"b\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_9__comparators__[\"a\" /* NAME_COMPARATOR */]), ChildrenNode.EMPTY_NODE, __WEBPACK_IMPORTED_MODULE_7__IndexMap__[\"a\" /* IndexMap */].Default) || this;\n    }\n    MaxNode.prototype.compareTo = function (other) {\n        if (other === this) {\n            return 0;\n        } else {\n            return 1;\n        }\n    };\n    MaxNode.prototype.equals = function (other) {\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\n        return other === this;\n    };\n    MaxNode.prototype.getPriority = function () {\n        return this;\n    };\n    MaxNode.prototype.getImmediateChild = function (childName) {\n        return ChildrenNode.EMPTY_NODE;\n    };\n    MaxNode.prototype.isEmpty = function () {\n        return false;\n    };\n    return MaxNode;\n}(ChildrenNode);\n\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\nvar MAX_NODE = new MaxNode();\nObject.defineProperties(__WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */], {\n    MIN: {\n        value: new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"c\" /* MIN_NAME */], ChildrenNode.EMPTY_NODE)\n    },\n    MAX: {\n        value: new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"b\" /* MAX_NAME */], MAX_NODE)\n    }\n});\n/**\r\n * Reference Extensions\r\n */\n__WEBPACK_IMPORTED_MODULE_6__indexes_KeyIndex__[\"b\" /* KeyIndex */].__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\n__WEBPACK_IMPORTED_MODULE_8__LeafNode__[\"a\" /* LeafNode */].__childrenNodeConstructor = ChildrenNode;\nObject(__WEBPACK_IMPORTED_MODULE_4__snap__[\"b\" /* setMaxNode */])(MAX_NODE);\nObject(__WEBPACK_IMPORTED_MODULE_5__indexes_PriorityIndex__[\"b\" /* setMaxNode */])(MAX_NODE);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NamedNode; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\nvar NamedNode = /** @class */function () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n  return NamedNode;\n}();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return jsonEval; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return stringify; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\nvar jsonEval = function jsonEval(str) {\n  return JSON.parse(str);\n};\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\nvar stringify = function stringify(data) {\n  return JSON.stringify(data);\n};\n\n/***/ }),\n/* 9 */,\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return validateArgCount; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = errorPrefix;\n/* unused harmony export validateNamespace */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return validateCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return validateContextObject; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\nvar validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    } else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';\n        throw new Error(error);\n    }\n};\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\nvar validateNamespace = function validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace) return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');\n    }\n};\nvar validateCallback = function validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback) return;\n    if (typeof callback !== 'function') throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');\n};\nvar validateContextObject = function validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context) return;\n    if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) !== 'object' || context === null) throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export INVALID_KEY_REGEX_ */\n/* unused harmony export INVALID_PATH_REGEX_ */\n/* unused harmony export MAX_LEAF_SIZE_ */\n/* unused harmony export isValidKey */\n/* unused harmony export isValidPathString */\n/* unused harmony export isValidRootPathString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isValidPriority; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return validateFirebaseDataArg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return validateFirebaseData; });\n/* unused harmony export validateFirebaseMergePaths */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return validateFirebaseMergeDataArg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return validatePriority; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return validateEventType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return validateKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return validatePathString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return validateRootPathString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return validateWritablePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return validateUrl; });\n/* unused harmony export validateCredential */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return validateBoolean; });\n/* unused harmony export validateString */\n/* unused harmony export validateObject */\n/* unused harmony export validateObjectContainsKey */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_obj__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_validation__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_utf8__ = __webpack_require__(25);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\nvar isValidKey = function isValidKey(key) {\n    return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\nvar isValidPathString = function isValidPathString(pathString) {\n    return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\nvar isValidPriority = function isValidPriority(priority) {\n    return priority === null || typeof priority === 'string' || typeof priority === 'number' && !Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"q\" /* isInvalidJSONNumber */])(priority) || priority && (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"b\" /* contains */])(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined) return;\n    validateFirebaseData(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n    var path = path_ instanceof __WEBPACK_IMPORTED_MODULE_0__Path__[\"a\" /* Path */] ? new __WEBPACK_IMPORTED_MODULE_0__Path__[\"b\" /* ValidationPath */](path_, errorPrefix) : path_;\n    if (data === undefined) {\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n    }\n    if (typeof data === 'function') {\n        throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"q\" /* isInvalidJSONNumber */])(data)) {\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n    }\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\n    if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && Object(__WEBPACK_IMPORTED_MODULE_4__utils_utf8__[\"a\" /* stringLength */])(data) > MAX_LEAF_SIZE_) {\n        throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n    }\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n    // to save extra walking of large objects.\n    if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n        var hasDotValue_1 = false,\n            hasActualChild_1 = false;\n        Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"f\" /* forEach */])(data, function (key, value) {\n            if (key === '.value') {\n                hasDotValue_1 = true;\n            } else if (key !== '.priority' && key !== '.sv') {\n                hasActualChild_1 = true;\n                if (!isValidKey(key)) {\n                    throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n                }\n            }\n            path.push(key);\n            validateFirebaseData(errorPrefix, value, path);\n            path.pop();\n        });\n        if (hasDotValue_1 && hasActualChild_1) {\n            throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n        }\n    }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n    var i, curPath;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        var keys = curPath.slice();\n        for (var j = 0; j < keys.length; j++) {\n            if (keys[j] === '.priority' && j === keys.length - 1) {\n                // .priority is OK\n            } else if (!isValidKey(keys[j])) {\n                throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n            }\n        }\n    }\n    // Check that update keys are not descendants of each other.\n    // We rely on the property that sorting guarantees that ancestors come\n    // right before descendants.\n    mergePaths.sort(__WEBPACK_IMPORTED_MODULE_0__Path__[\"a\" /* Path */].comparePaths);\n    var prevPath = null;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        if (prevPath !== null && prevPath.contains(curPath)) {\n            throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n        }\n        prevPath = curPath;\n    }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined) return;\n    var errorPrefix = Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional);\n    if (!(data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') || Array.isArray(data)) {\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n    }\n    var mergePaths = [];\n    Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"f\" /* forEach */])(data, function (key, value) {\n        var curPath = new __WEBPACK_IMPORTED_MODULE_0__Path__[\"a\" /* Path */](key);\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\n        if (curPath.getBack() === '.priority') {\n            if (!isValidPriority(value)) {\n                throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n            }\n        }\n        mergePaths.push(curPath);\n    });\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n    if (optional && priority === undefined) return;\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"q\" /* isInvalidJSONNumber */])(priority)) throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n    // Special case to allow importing data with a .sv.\n    if (!isValidPriority(priority)) throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n};\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n    if (optional && eventType === undefined) return;\n    switch (eventType) {\n        case 'value':\n        case 'child_added':\n        case 'child_removed':\n        case 'child_changed':\n        case 'child_moved':\n            break;\n        default:\n            throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n};\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n    if (optional && key === undefined) return;\n    if (!isValidKey(key)) throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n    if (optional && pathString === undefined) return;\n    if (!isValidPathString(pathString)) throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    validatePathString(fnName, argumentNumber, pathString, optional);\n};\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n    if (path.getFront() === '.info') {\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n    }\n};\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n    // TODO = Validate server better.\n    var pathString = parsedUrl.path.toString();\n    if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n        throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n    }\n};\nvar validateCredential = function validateCredential(fnName, argumentNumber, cred, optional) {\n    if (optional && cred === undefined) return;\n    if (!(typeof cred === 'string')) throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a valid credential (a string).');\n};\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n    if (optional && bool === undefined) return;\n    if (typeof bool !== 'boolean') throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\nvar validateString = function validateString(fnName, argumentNumber, string, optional) {\n    if (optional && string === undefined) return;\n    if (!(typeof string === 'string')) {\n        throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a valid string.');\n    }\n};\nvar validateObject = function validateObject(fnName, argumentNumber, obj, optional) {\n    if (optional && obj === undefined) return;\n    if (!(obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') || obj === null) {\n        throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must be a valid object.');\n    }\n};\nvar validateObjectContainsKey = function validateObjectContainsKey(fnName, argumentNumber, obj, key, optional, opt_type) {\n    var objectContainsKey = obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"b\" /* contains */])(obj, key);\n    if (!objectContainsKey) {\n        if (optional) {\n            return;\n        } else {\n            throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must contain the key \"' + key + '\"');\n        }\n    }\n    if (opt_type) {\n        var val = Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"l\" /* safeGet */])(obj, key);\n        if (opt_type === 'number' && !(typeof val === 'number') || opt_type === 'string' && !(typeof val === 'string') || opt_type === 'boolean' && !(typeof val === 'boolean') || opt_type === 'function' && !(typeof val === 'function') || opt_type === 'object' && !((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') && val) {\n            if (optional) {\n                throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'contains invalid value for key \"' + key + '\" (must be of type \"' + opt_type + '\")');\n            } else {\n                throw new Error(Object(__WEBPACK_IMPORTED_MODULE_3__utils_validation__[\"a\" /* errorPrefix */])(fnName, argumentNumber, optional) + 'must contain the key \"' + key + '\" with type \"' + opt_type + '\"');\n            }\n        }\n    }\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return OperationType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OperationSource; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\nvar OperationType;\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\nvar OperationSource = /** @class */function () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/true, false, null,\n  /*tagged=*/false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/true, null,\n  /*tagged=*/false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/true, queryId,\n    /*tagged=*/true);\n  };\n  return OperationSource;\n}();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export getUA */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isMobileCordova; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return isReactNative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isNodeSdk; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(17);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\nvar getUA = function getUA() {\n    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    } else {\n        return '';\n    }\n};\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\nvar isMobileCordova = function isMobileCordova() {\n    return typeof window !== 'undefined' && !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());\n};\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\nvar isReactNative = function isReactNative() {\n    return (typeof navigator === 'undefined' ? 'undefined' : _typeof(navigator)) === 'object' && navigator['product'] === 'ReactNative';\n};\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\nvar isNodeSdk = function isNodeSdk() {\n    return __WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* CONSTANTS */].NODE_CLIENT === true || __WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* CONSTANTS */].NODE_ADMIN === true;\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Change; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\nvar Change = /** @class */function () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  };\n  //event types\n  /** Event type for a child added */\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n  Change.VALUE = 'value';\n  return Change;\n}();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return KeyIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return KEY_INDEX; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Index__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_assert__ = __webpack_require__(0);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\nvar __EMPTY_NODE;\nvar KeyIndex = /** @class */function (_super) {\n    __extends(KeyIndex, _super);\n    function KeyIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n        get: function get() {\n            return __EMPTY_NODE;\n        },\n        set: function set(val) {\n            __EMPTY_NODE = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * @inheritDoc\r\n     */\n    KeyIndex.prototype.compare = function (a, b) {\n        return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"v\" /* nameCompare */])(a.name, b.name);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    KeyIndex.prototype.isDefinedOn = function (node) {\n        // We could probably return true here (since every node has a key), but it's never called\n        // so just leaving unimplemented for now.\n        throw Object(__WEBPACK_IMPORTED_MODULE_3__utils_assert__[\"b\" /* assertionError */])('KeyIndex.isDefinedOn not expected to be called.');\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return false; // The key for a node never changes.\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    KeyIndex.prototype.minPost = function () {\n        return __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */].MIN;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    KeyIndex.prototype.maxPost = function () {\n        // TODO: This should really be created once and cached in a static property, but\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n        return new __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_2__util_util__[\"b\" /* MAX_NAME */], __EMPTY_NODE);\n    };\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\n    KeyIndex.prototype.makePost = function (indexValue, name) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__utils_assert__[\"a\" /* assert */])(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n        return new __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */](indexValue, __EMPTY_NODE);\n    };\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\n    KeyIndex.prototype.toString = function () {\n        return '.key';\n    };\n    return KeyIndex;\n}(__WEBPACK_IMPORTED_MODULE_0__Index__[\"a\" /* Index */]);\n\nvar KEY_INDEX = new KeyIndex();\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = nodeFromJSON;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__LeafNode__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_obj__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__childSet__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__comparators__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__IndexMap__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__indexes_PriorityIndex__ = __webpack_require__(5);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\nfunction nodeFromJSON(json, priority) {\n    if (priority === void 0) {\n        priority = null;\n    }\n    if (json === null) {\n        return __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE;\n    }\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.priority' in json) {\n        priority = json['.priority'];\n    }\n    Object(__WEBPACK_IMPORTED_MODULE_4__utils_assert__[\"a\" /* assert */])(priority === null || typeof priority === 'string' || typeof priority === 'number' || (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && '.sv' in priority, 'Invalid priority type found: ' + (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)));\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.value' in json && json['.value'] !== null) {\n        json = json['.value'];\n    }\n    // Valid leaf nodes include non-objects or server-value wrapper objects\n    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) !== 'object' || '.sv' in json) {\n        var jsonLeaf = json;\n        return new __WEBPACK_IMPORTED_MODULE_1__LeafNode__[\"a\" /* LeafNode */](jsonLeaf, nodeFromJSON(priority));\n    }\n    if (!(json instanceof Array) && USE_HINZE) {\n        var children_1 = [];\n        var childrenHavePriority_1 = false;\n        var hinzeJsonObj_1 = json;\n        Object(__WEBPACK_IMPORTED_MODULE_3__utils_obj__[\"f\" /* forEach */])(hinzeJsonObj_1, function (key, child) {\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n                // Ignore metadata nodes\n                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);\n                if (!childNode.isEmpty()) {\n                    childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n                    children_1.push(new __WEBPACK_IMPORTED_MODULE_2__Node__[\"a\" /* NamedNode */](key, childNode));\n                }\n            }\n        });\n        if (children_1.length == 0) {\n            return __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        }\n        var childSet = Object(__WEBPACK_IMPORTED_MODULE_5__childSet__[\"a\" /* buildChildSet */])(children_1, __WEBPACK_IMPORTED_MODULE_6__comparators__[\"b\" /* NAME_ONLY_COMPARATOR */], function (namedNode) {\n            return namedNode.name;\n        }, __WEBPACK_IMPORTED_MODULE_6__comparators__[\"a\" /* NAME_COMPARATOR */]);\n        if (childrenHavePriority_1) {\n            var sortedChildSet = Object(__WEBPACK_IMPORTED_MODULE_5__childSet__[\"a\" /* buildChildSet */])(children_1, __WEBPACK_IMPORTED_MODULE_8__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */].getCompare());\n            return new __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__[\"a\" /* ChildrenNode */](childSet, nodeFromJSON(priority), new __WEBPACK_IMPORTED_MODULE_7__IndexMap__[\"a\" /* IndexMap */]({ '.priority': sortedChildSet }, { '.priority': __WEBPACK_IMPORTED_MODULE_8__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */] }));\n        } else {\n            return new __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__[\"a\" /* ChildrenNode */](childSet, nodeFromJSON(priority), __WEBPACK_IMPORTED_MODULE_7__IndexMap__[\"a\" /* IndexMap */].Default);\n        }\n    } else {\n        var node_1 = __WEBPACK_IMPORTED_MODULE_0__ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        var jsonObj_1 = json;\n        Object(__WEBPACK_IMPORTED_MODULE_3__utils_obj__[\"f\" /* forEach */])(jsonObj_1, function (key, childData) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_3__utils_obj__[\"b\" /* contains */])(jsonObj_1, key)) {\n                if (key.substring(0, 1) !== '.') {\n                    // ignore metadata nodes.\n                    var childNode = nodeFromJSON(childData);\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) node_1 = node_1.updateImmediateChild(key, childNode);\n                }\n            }\n        });\n        return node_1.updatePriority(nodeFromJSON(priority));\n    }\n}\nObject(__WEBPACK_IMPORTED_MODULE_8__indexes_PriorityIndex__[\"c\" /* setNodeFromJSON */])(nodeFromJSON);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CONSTANTS; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\nvar CONSTANTS = {\n  /**\r\n   * @define {boolean} Whether this is the client Node.js SDK.\r\n   */\n  NODE_CLIENT: false,\n  /**\r\n   * @define {boolean} Whether this is the Admin Node.js SDK.\r\n   */\n  NODE_ADMIN: false,\n  /**\r\n   * Firebase SDK Version\r\n   */\n  SDK_VERSION: '4.5.0'\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// CONCATENATED MODULE: ./src/database/core/storage/DOMStorageWrapper.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\nvar DOMStorageWrapper_DOMStorageWrapper = /** @class */function () {\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        } else {\n            this.domStorage_.setItem(this.prefixedName_(key), Object(json[\"b\" /* stringify */])(value));\n        }\n    };\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        } else {\n            return Object(json[\"a\" /* jsonEval */])(storedVal);\n        }\n    };\n    /**\r\n     * @param {string} key\r\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}();\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/database/core/storage/MemoryStorage.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\nvar MemoryStorage_MemoryStorage = /** @class */function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        } else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if (Object(obj[\"b\" /* contains */])(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/storage/storage.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PersistentStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SessionStorage; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\nvar storage_createStoragefor = function createStoragefor(domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new DOMStorageWrapper_DOMStorageWrapper(domStorage);\n        }\n    } catch (e) {}\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new MemoryStorage_MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nvar PersistentStorage = storage_createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nvar SessionStorage = storage_createStoragefor('sessionStorage');\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return PROTOCOL_VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return VERSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return TRANSPORT_SESSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return REFERER_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FORGE_REF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FORGE_DOMAIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return LAST_SESSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return WEBSOCKET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return LONG_POLLING; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Index; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n *\r\n * @constructor\r\n */\nvar Index = /** @class */function () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"c\" /* MIN_NAME */], oldNode);\n    var newWrapped = new __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"c\" /* MIN_NAME */], newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n  Index.prototype.minPost = function () {\n    return __WEBPACK_IMPORTED_MODULE_0__Node__[\"a\" /* NamedNode */].MIN;\n  };\n  return Index;\n}();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LeafNode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__snap__ = __webpack_require__(40);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\nvar LeafNode = /** @class */function () {\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\n    function LeafNode(value_, priorityNode_) {\n        if (priorityNode_ === void 0) {\n            priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n        this.value_ = value_;\n        this.priorityNode_ = priorityNode_;\n        this.lazyHash_ = null;\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n        Object(__WEBPACK_IMPORTED_MODULE_2__snap__[\"c\" /* validatePriorityNode */])(this.priorityNode_);\n    }\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n        get: function get() {\n            return __childrenNodeConstructor;\n        },\n        set: function set(val) {\n            __childrenNodeConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    LeafNode.prototype.isLeafNode = function () {\n        return true;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPriority = function () {\n        return this.priorityNode_;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\n        return new LeafNode(this.value_, newPriorityNode);\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.priorityNode_;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getChild = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        } else if (path.getFront() === '.priority') {\n            return this.priorityNode_;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.hasChild = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n        return null;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        } else if (newChildNode.isEmpty() && childName !== '.priority') {\n            return this;\n        } else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        } else if (newChildNode.isEmpty() && front !== '.priority') {\n            return this;\n        } else {\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.numChildren = function () {\n        return 0;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.forEachChild = function (index, action) {\n        return false;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.val = function (exportFormat) {\n        if (exportFormat && !this.getPriority().isEmpty()) return {\n            '.value': this.getValue(),\n            '.priority': this.getPriority().val()\n        };else return this.getValue();\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash = '';\n            if (!this.priorityNode_.isEmpty()) toHash += 'priority:' + Object(__WEBPACK_IMPORTED_MODULE_2__snap__[\"a\" /* priorityHashText */])(this.priorityNode_.val()) + ':';\n            var type = _typeof(this.value_);\n            toHash += type + ':';\n            if (type === 'number') {\n                toHash += Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"h\" /* doubleToIEEE754String */])(this.value_);\n            } else {\n                toHash += this.value_;\n            }\n            this.lazyHash_ = Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"y\" /* sha1 */])(toHash);\n        }\n        return this.lazyHash_;\n    };\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\n    LeafNode.prototype.getValue = function () {\n        return this.value_;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.compareTo = function (other) {\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n            return 1;\n        } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n            return -1;\n        } else {\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(other.isLeafNode(), 'Unknown node type');\n            return this.compareToLeafNode_(other);\n        }\n    };\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n        var otherLeafType = _typeof(otherLeaf.value_);\n        var thisLeafType = _typeof(this.value_);\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n        if (otherIndex === thisIndex) {\n            // Same type, compare values\n            if (thisLeafType === 'object') {\n                // Deferred value nodes are all equal, but we should also never get to this point...\n                return 0;\n            } else {\n                // Note that this works because true > false, all others are number or string comparisons\n                if (this.value_ < otherLeaf.value_) {\n                    return -1;\n                } else if (this.value_ === otherLeaf.value_) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            }\n        } else {\n            return thisIndex - otherIndex;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.withIndex = function () {\n        return this;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.isIndexed = function () {\n        return true;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LeafNode.prototype.equals = function (other) {\n        /**\r\n         * @inheritDoc\r\n         */\n        if (other === this) {\n            return true;\n        } else if (other.isLeafNode()) {\n            var otherLeaf = other;\n            return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n        } else {\n            return false;\n        }\n    };\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n    return LeafNode;\n}();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export SortedMapIterator */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LLRBNode; });\n/* unused harmony export LLRBEmptyNode */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SortedMap; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An iterator over an LLRBNode.\r\n */\nvar SortedMapIterator = /** @class */function () {\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n        if (resultGenerator_ === void 0) {\n            resultGenerator_ = null;\n        }\n        this.isReverse_ = isReverse_;\n        this.resultGenerator_ = resultGenerator_;\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\n        this.nodeStack_ = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            node = node;\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse_) cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse_) {\n                    node = node.left;\n                } else {\n                    node = node.right;\n                }\n            } else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n                this.nodeStack_.push(node);\n                break;\n            } else {\n                // This node is greater than our start key, add it to the stack and move to the next one\n                this.nodeStack_.push(node);\n                if (this.isReverse_) {\n                    node = node.right;\n                } else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        if (this.nodeStack_.length === 0) return null;\n        var node = this.nodeStack_.pop();\n        var result;\n        if (this.resultGenerator_) result = this.resultGenerator_(node.key, node.value);else result = { key: node.key, value: node.value };\n        if (this.isReverse_) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.right;\n            }\n        } else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack_.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack_.length === 0) return null;\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\n        if (this.resultGenerator_) {\n            return this.resultGenerator_(node.key, node.value);\n        } else {\n            return { key: node.key, value: node.value };\n        }\n    };\n    return SortedMapIterator;\n}();\n\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\nvar LLRBNode = /** @class */function () {\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left = left != null ? left : SortedMap.EMPTY_NODE;\n        this.right = right != null ? right : SortedMap.EMPTY_NODE;\n    }\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\n    LLRBNode.prototype.count = function () {\n        return this.left.count() + 1 + this.right.count();\n    };\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);\n    };\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n    };\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\n    LLRBNode.prototype.min_ = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        } else {\n            return this.left.min_();\n        }\n    };\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\n    LLRBNode.prototype.minKey = function () {\n        return this.min_().key;\n    };\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        } else {\n            return this.right.maxKey();\n        }\n    };\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var cmp, n;\n        n = this;\n        cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        } else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        } else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\n    LLRBNode.prototype.removeMin_ = function () {\n        if (this.left.isEmpty()) {\n            return SortedMap.EMPTY_NODE;\n        }\n        var n = this;\n        if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\n        return n.fixUp_();\n    };\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var n, smallest;\n        n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n                n = n.moveRedLeft_();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        } else {\n            if (n.left.isRed_()) n = n.rotateRight_();\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n                n = n.moveRedRight_();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return SortedMap.EMPTY_NODE;\n                } else {\n                    smallest = n.right.min_();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\n    LLRBNode.prototype.isRed_ = function () {\n        return this.color;\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\n    LLRBNode.prototype.fixUp_ = function () {\n        var n = this;\n        if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();\n        if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();\n        if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();\n        return n;\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\n    LLRBNode.prototype.moveRedLeft_ = function () {\n        var n = this.colorFlip_();\n        if (n.right.left.isRed_()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\n            n = n.rotateLeft_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\n    LLRBNode.prototype.moveRedRight_ = function () {\n        var n = this.colorFlip_();\n        if (n.left.left.isRed_()) {\n            n = n.rotateRight_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\n    LLRBNode.prototype.rotateLeft_ = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\n    LLRBNode.prototype.rotateRight_ = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\n    LLRBNode.prototype.colorFlip_ = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\n    LLRBNode.prototype.checkMaxDepth_ = function () {\n        var blackDepth = this.check_();\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\n    };\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\n    LLRBNode.prototype.check_ = function () {\n        var blackDepth;\n        if (this.isRed_() && this.left.isRed_()) {\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed_()) {\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        blackDepth = this.left.check_();\n        if (blackDepth !== this.right.check_()) {\n            throw new Error('Black depths differ');\n        } else {\n            return blackDepth + (this.isRed_() ? 0 : 1);\n        }\n    };\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}();\n\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\nvar LLRBEmptyNode = /** @class */function () {\n    function LLRBEmptyNode() {}\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value, null);\n    };\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\n    LLRBEmptyNode.prototype.count = function () {\n        return 0;\n    };\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    /**\r\n     * @return {null}\r\n     */\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    /**\r\n     * @return {null}\r\n     */\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\n    LLRBEmptyNode.prototype.check_ = function () {\n        return 0;\n    };\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\n    LLRBEmptyNode.prototype.isRed_ = function () {\n        return false;\n    };\n    return LLRBEmptyNode;\n}();\n\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\nvar SortedMap = /** @class */function () {\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\n    function SortedMap(comparator_, root_) {\n        if (root_ === void 0) {\n            root_ = SortedMap.EMPTY_NODE;\n        }\n        this.comparator_ = comparator_;\n        this.root_ = root_;\n    }\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\n    SortedMap.prototype.get = function (key) {\n        var cmp;\n        var node = this.root_;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            } else if (cmp < 0) {\n                node = node.left;\n            } else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var cmp,\n            node = this.root_,\n            rightParent = null;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty()) {\n                        node = node.right;\n                    }return node.key;\n                } else if (rightParent) {\n                    return rightParent.key;\n                } else {\n                    return null; // first item.\n                }\n            } else if (cmp < 0) {\n                node = node.left;\n            } else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n    };\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\n    SortedMap.prototype.isEmpty = function () {\n        return this.root_.isEmpty();\n    };\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\n    SortedMap.prototype.count = function () {\n        return this.root_.count();\n    };\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\n    SortedMap.prototype.minKey = function () {\n        return this.root_.minKey();\n    };\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\n    SortedMap.prototype.maxKey = function () {\n        return this.root_.maxKey();\n    };\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root_.inorderTraversal(action);\n    };\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root_.reverseTraversal(action);\n    };\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\n    SortedMap.prototype.getIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n    };\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n    return SortedMap;\n}();\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/database/core/util/ServerValues.ts\nvar ServerValues = __webpack_require__(47);\n\n// EXTERNAL MODULE: ./src/database/core/snap/nodeFromJSON.ts\nvar nodeFromJSON = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./src/database/core/SparseSnapshotTree.ts\nvar SparseSnapshotTree = __webpack_require__(48);\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/operation/Operation.ts\nvar Operation = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/database/core/operation/AckUserWrite.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\nvar AckUserWrite_AckUserWrite = /** @class */function () {\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\n    function AckUserWrite(\n    /**@inheritDoc */path,\n    /**@inheritDoc */affectedTree,\n    /**@inheritDoc */revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = Operation[\"b\" /* OperationType */].ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = Operation[\"a\" /* OperationSource */].User;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            Object(assert[\"a\" /* assert */])(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        } else if (this.affectedTree.value != null) {\n            Object(assert[\"a\" /* assert */])(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        } else {\n            var childTree = this.affectedTree.subtree(new Path[\"a\" /* Path */](childName));\n            return new AckUserWrite(Path[\"a\" /* Path */].Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/ChildrenNode.ts\nvar ChildrenNode = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/database/core/util/ImmutableTree.ts\nvar ImmutableTree = __webpack_require__(27);\n\n// CONCATENATED MODULE: ./src/database/core/operation/ListenComplete.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\nvar ListenComplete_ListenComplete = /** @class */function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = Operation[\"b\" /* OperationType */].LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, Path[\"a\" /* Path */].Empty);\n        } else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/operation/Overwrite.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\nvar Overwrite_Overwrite = /** @class */function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = Operation[\"b\" /* OperationType */].OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, Path[\"a\" /* Path */].Empty, this.snap.getImmediateChild(childName));\n        } else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/operation/Merge.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\nvar Merge_Merge = /** @class */function () {\n    function Merge(\n    /**@inheritDoc */source,\n    /**@inheritDoc */path,\n    /**@inheritDoc */children) {\n        this.source = source;\n        this.path = path;\n        this.children = children;\n        /** @inheritDoc */\n        this.type = Operation[\"b\" /* OperationType */].MERGE;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    Merge.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            var childTree = this.children.subtree(new Path[\"a\" /* Path */](childName));\n            if (childTree.isEmpty()) {\n                // This child is unaffected\n                return null;\n            } else if (childTree.value) {\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n                return new Overwrite_Overwrite(this.source, Path[\"a\" /* Path */].Empty, childTree.value);\n            } else {\n                // This is a merge at a deeper level\n                return new Merge(this.source, Path[\"a\" /* Path */].Empty, childTree);\n            }\n        } else {\n            Object(assert[\"a\" /* assert */])(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n            return new Merge(this.source, this.path.popFront(), this.children);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    Merge.prototype.toString = function () {\n        return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n    };\n    return Merge;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/SyncPoint.ts + 7 modules\nvar SyncPoint = __webpack_require__(50);\n\n// EXTERNAL MODULE: ./src/database/core/snap/Node.ts\nvar Node = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PriorityIndex.ts\nvar PriorityIndex = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/database/core/CompoundWrite.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\nvar CompoundWrite_CompoundWrite = /** @class */function () {\n    function CompoundWrite(writeTree_) {\n        this.writeTree_ = writeTree_;\n    }\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\n    CompoundWrite.prototype.addWrite = function (path, node) {\n        if (path.isEmpty()) {\n            return new CompoundWrite(new ImmutableTree[\"a\" /* ImmutableTree */](node));\n        } else {\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n            if (rootmost != null) {\n                var rootMostPath = rootmost.path;\n                var value = rootmost.value;\n                var relativePath = Path[\"a\" /* Path */].relativePath(rootMostPath, path);\n                value = value.updateChild(relativePath, node);\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n            } else {\n                var subtree = new ImmutableTree[\"a\" /* ImmutableTree */](node);\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\n                return new CompoundWrite(newWriteTree);\n            }\n        }\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\n    CompoundWrite.prototype.addWrites = function (path, updates) {\n        var newWrite = this;\n        Object(obj[\"f\" /* forEach */])(updates, function (childKey, node) {\n            newWrite = newWrite.addWrite(path.child(childKey), node);\n        });\n        return newWrite;\n    };\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\n    CompoundWrite.prototype.removeWrite = function (path) {\n        if (path.isEmpty()) {\n            return CompoundWrite.Empty;\n        } else {\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree[\"a\" /* ImmutableTree */].Empty);\n            return new CompoundWrite(newWriteTree);\n        }\n    };\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\n        return this.getCompleteNode(path) != null;\n    };\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\n    CompoundWrite.prototype.getCompleteNode = function (path) {\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n        if (rootmost != null) {\n            return this.writeTree_.get(rootmost.path).getChild(Path[\"a\" /* Path */].relativePath(rootmost.path, path));\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\n    CompoundWrite.prototype.getCompleteChildren = function () {\n        var children = [];\n        var node = this.writeTree_.value;\n        if (node != null) {\n            // If it's a leaf node, it has no children; so nothing to do.\n            if (!node.isLeafNode()) {\n                node.forEachChild(PriorityIndex[\"a\" /* PRIORITY_INDEX */], function (childName, childNode) {\n                    children.push(new Node[\"a\" /* NamedNode */](childName, childNode));\n                });\n            }\n        } else {\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n                if (childTree.value != null) {\n                    children.push(new Node[\"a\" /* NamedNode */](childName, childTree.value));\n                }\n            });\n        }\n        return children;\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        } else {\n            var shadowingNode = this.getCompleteNode(path);\n            if (shadowingNode != null) {\n                return new CompoundWrite(new ImmutableTree[\"a\" /* ImmutableTree */](shadowingNode));\n            } else {\n                return new CompoundWrite(this.writeTree_.subtree(path));\n            }\n        }\n    };\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\n    CompoundWrite.prototype.isEmpty = function () {\n        return this.writeTree_.isEmpty();\n    };\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\n    CompoundWrite.prototype.apply = function (node) {\n        return CompoundWrite.applySubtreeWrite_(Path[\"a\" /* Path */].Empty, this.writeTree_, node);\n    };\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree[\"a\" /* ImmutableTree */](null));\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n        if (writeTree.value != null) {\n            // Since there a write is always a leaf, we're done here\n            return node.updateChild(relativePath, writeTree.value);\n        } else {\n            var priorityWrite_1 = null;\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\n                if (childKey === '.priority') {\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n                    // to apply priorities to empty nodes that are later filled\n                    Object(assert[\"a\" /* assert */])(childTree.value !== null, 'Priority writes must always be leaf nodes');\n                    priorityWrite_1 = childTree.value;\n                } else {\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n                }\n            });\n            // If there was a priority write, we only apply it if the node is not empty\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n            }\n            return node;\n        }\n    };\n    return CompoundWrite;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/WriteTree.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\nvar WriteTree_WriteTree = /** @class */function () {\n    function WriteTree() {\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\n        this.visibleWrites_ = CompoundWrite_CompoundWrite.Empty;\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\n        this.allWrites_ = [];\n        this.lastWriteId_ = -1;\n    }\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\n    WriteTree.prototype.childWrites = function (path) {\n        return new WriteTreeRef(path, this);\n    };\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n        Object(assert[\"a\" /* assert */])(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n        if (visible === undefined) {\n            visible = true;\n        }\n        this.allWrites_.push({\n            path: path,\n            snap: snap,\n            writeId: writeId,\n            visible: visible\n        });\n        if (visible) {\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n        }\n        this.lastWriteId_ = writeId;\n    };\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n        Object(assert[\"a\" /* assert */])(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n        this.allWrites_.push({\n            path: path,\n            children: changedChildren,\n            writeId: writeId,\n            visible: true\n        });\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n        this.lastWriteId_ = writeId;\n    };\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\n    WriteTree.prototype.getWrite = function (writeId) {\n        for (var i = 0; i < this.allWrites_.length; i++) {\n            var record = this.allWrites_[i];\n            if (record.writeId === writeId) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\n    WriteTree.prototype.removeWrite = function (writeId) {\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n        // out of order.\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n        var _this = this;\n        var idx = this.allWrites_.findIndex(function (s) {\n            return s.writeId === writeId;\n        });\n        Object(assert[\"a\" /* assert */])(idx >= 0, 'removeWrite called with nonexistent writeId.');\n        var writeToRemove = this.allWrites_[idx];\n        this.allWrites_.splice(idx, 1);\n        var removedWriteWasVisible = writeToRemove.visible;\n        var removedWriteOverlapsWithOtherWrites = false;\n        var i = this.allWrites_.length - 1;\n        while (removedWriteWasVisible && i >= 0) {\n            var currentWrite = this.allWrites_[i];\n            if (currentWrite.visible) {\n                if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n                    // The removed write was completely shadowed by a subsequent write.\n                    removedWriteWasVisible = false;\n                } else if (writeToRemove.path.contains(currentWrite.path)) {\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\n                    removedWriteOverlapsWithOtherWrites = true;\n                }\n            }\n            i--;\n        }\n        if (!removedWriteWasVisible) {\n            return false;\n        } else if (removedWriteOverlapsWithOtherWrites) {\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\n            this.resetTree_();\n            return true;\n        } else {\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n            if (writeToRemove.snap) {\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n            } else {\n                var children = writeToRemove.children;\n                Object(obj[\"f\" /* forEach */])(children, function (childName) {\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n                });\n            }\n            return true;\n        }\n    };\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\n    WriteTree.prototype.getCompleteWriteData = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        if (!writeIdsToExclude && !includeHiddenWrites) {\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n            if (shadowingNode != null) {\n                return shadowingNode;\n            } else {\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n                if (subMerge.isEmpty()) {\n                    return completeServerCache;\n                } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path[\"a\" /* Path */].Empty)) {\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n                    return null;\n                } else {\n                    var layeredCache = completeServerCache || ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                    return subMerge.apply(layeredCache);\n                }\n            }\n        } else {\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            if (!includeHiddenWrites && merge.isEmpty()) {\n                return completeServerCache;\n            } else {\n                // If the server cache is null, and we don't have a complete cache, we need to return null\n                if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path[\"a\" /* Path */].Empty)) {\n                    return null;\n                } else {\n                    var filter = function filter(write) {\n                        return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n                    };\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n                    var layeredCache = completeServerCache || ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                    return mergeAtPath.apply(layeredCache);\n                }\n            }\n        }\n    };\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n        var completeChildren = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n        if (topLevelSet) {\n            if (!topLevelSet.isLeafNode()) {\n                // we're shadowing everything. Return the children.\n                topLevelSet.forEachChild(PriorityIndex[\"a\" /* PRIORITY_INDEX */], function (childName, childSnap) {\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n                });\n            }\n            return completeChildren;\n        } else if (completeServerChildren) {\n            // Layer any children we have on top of this\n            // We know we don't have a top-level set, so just enumerate existing children\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n            completeServerChildren.forEachChild(PriorityIndex[\"a\" /* PRIORITY_INDEX */], function (childName, childNode) {\n                var node = merge_1.childCompoundWrite(new Path[\"a\" /* Path */](childName)).apply(childNode);\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\n            });\n            // Add any complete children we have from the set\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        } else {\n            // We don't have anything to layer on top of. Layer on any children we have\n            // Note that we can return an empty snap if we have a defined delete\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            merge.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n    };\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n        Object(assert[\"a\" /* assert */])(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n        var path = treePath.child(childPath);\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\n            // At this point we can probably guarantee that we're in case 2, meaning no events\n            // May need to check visibility while doing the findRootMostValueAndPath call\n            return null;\n        } else {\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\n            if (childMerge.isEmpty()) {\n                // We're not shadowing at all. Case 1\n                return existingServerSnap.getChild(childPath);\n            } else {\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n                // However this is tricky to find out, since user updates don't necessary change the server\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n                // only check if the updates change the serverNode.\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n                return childMerge.apply(existingServerSnap.getChild(childPath));\n            }\n        }\n    };\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n        var path = treePath.child(childKey);\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n        if (shadowingNode != null) {\n            return shadowingNode;\n        } else {\n            if (existingServerSnap.isCompleteForChild(childKey)) {\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n            } else {\n                return null;\n            }\n        }\n    };\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\n    WriteTree.prototype.shadowingWrite = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n        var toIterate;\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\n        var shadowingNode = merge.getCompleteNode(Path[\"a\" /* Path */].Empty);\n        if (shadowingNode != null) {\n            toIterate = shadowingNode;\n        } else if (completeServerData != null) {\n            toIterate = merge.apply(completeServerData);\n        } else {\n            // no children to iterate on\n            return [];\n        }\n        toIterate = toIterate.withIndex(index);\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n            var nodes = [];\n            var cmp = index.getCompare();\n            var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n            var next = iter.getNext();\n            while (next && nodes.length < count) {\n                if (cmp(next, startPost) !== 0) {\n                    nodes.push(next);\n                }\n                next = iter.getNext();\n            }\n            return nodes;\n        } else {\n            return [];\n        }\n    };\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n        if (writeRecord.snap) {\n            return writeRecord.path.contains(path);\n        } else {\n            // findKey can return undefined, so use !! to coerce to boolean\n            return !!Object(obj[\"d\" /* findKey */])(writeRecord.children, function (childSnap, childName) {\n                return writeRecord.path.child(childName).contains(path);\n            });\n        }\n    };\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\n    WriteTree.prototype.resetTree_ = function () {\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path[\"a\" /* Path */].Empty);\n        if (this.allWrites_.length > 0) {\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n        } else {\n            this.lastWriteId_ = -1;\n        }\n    };\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\n    WriteTree.DefaultFilter_ = function (write) {\n        return write.visible;\n    };\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n        var compoundWrite = CompoundWrite_CompoundWrite.Empty;\n        for (var i = 0; i < writes.length; ++i) {\n            var write = writes[i];\n            // Theory, a later set will either:\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n            if (filter(write)) {\n                var writePath = write.path;\n                var relativePath = void 0;\n                if (write.snap) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path[\"a\" /* Path */].relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n                    } else if (writePath.contains(treeRoot)) {\n                        relativePath = Path[\"a\" /* Path */].relativePath(writePath, treeRoot);\n                        compoundWrite = compoundWrite.addWrite(Path[\"a\" /* Path */].Empty, write.snap.getChild(relativePath));\n                    } else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                } else if (write.children) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path[\"a\" /* Path */].relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n                    } else if (writePath.contains(treeRoot)) {\n                        relativePath = Path[\"a\" /* Path */].relativePath(writePath, treeRoot);\n                        if (relativePath.isEmpty()) {\n                            compoundWrite = compoundWrite.addWrites(Path[\"a\" /* Path */].Empty, write.children);\n                        } else {\n                            var child = Object(obj[\"l\" /* safeGet */])(write.children, relativePath.getFront());\n                            if (child) {\n                                // There exists a child in this node that matches the root path\n                                var deepNode = child.getChild(relativePath.popFront());\n                                compoundWrite = compoundWrite.addWrite(Path[\"a\" /* Path */].Empty, deepNode);\n                            }\n                        }\n                    } else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                } else {\n                    throw Object(assert[\"b\" /* assertionError */])('WriteRecord should have .snap or .children');\n                }\n            }\n        }\n        return compoundWrite;\n    };\n    return WriteTree;\n}();\n\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\nvar WriteTreeRef = /** @class */function () {\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\n    function WriteTreeRef(path, writeTree) {\n        this.treePath_ = path;\n        this.writeTree_ = writeTree;\n    }\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n    };\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n    };\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n    };\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n    };\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n    };\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n    };\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\n    WriteTreeRef.prototype.child = function (childName) {\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n    };\n    return WriteTreeRef;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/SyncTree.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\nvar SyncTree_SyncTree = /** @class */function () {\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\n    function SyncTree(listenProvider_) {\n        this.listenProvider_ = listenProvider_;\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\n        this.syncPointTree_ = ImmutableTree[\"a\" /* ImmutableTree */].Empty;\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\n        this.pendingWriteTree_ = new WriteTree_WriteTree();\n        this.tagToQueryMap_ = {};\n        this.queryToTagMap_ = {};\n    }\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n        // Record pending write.\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n        if (!visible) {\n            return [];\n        } else {\n            return this.applyOperationToSyncPoints_(new Overwrite_Overwrite(Operation[\"a\" /* OperationSource */].User, path, newData));\n        }\n    };\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n        // Record pending merge.\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n        var changeTree = ImmutableTree[\"a\" /* ImmutableTree */].fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_Merge(Operation[\"a\" /* OperationSource */].User, path, changeTree));\n    };\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n        if (revert === void 0) {\n            revert = false;\n        }\n        var write = this.pendingWriteTree_.getWrite(writeId);\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n        if (!needToReevaluate) {\n            return [];\n        } else {\n            var affectedTree_1 = ImmutableTree[\"a\" /* ImmutableTree */].Empty;\n            if (write.snap != null) {\n                // overwrite\n                affectedTree_1 = affectedTree_1.set(Path[\"a\" /* Path */].Empty, true);\n            } else {\n                Object(obj[\"f\" /* forEach */])(write.children, function (pathString, node) {\n                    affectedTree_1 = affectedTree_1.set(new Path[\"a\" /* Path */](pathString), node);\n                });\n            }\n            return this.applyOperationToSyncPoints_(new AckUserWrite_AckUserWrite(write.path, affectedTree_1, revert));\n        }\n    };\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n        return this.applyOperationToSyncPoints_(new Overwrite_Overwrite(Operation[\"a\" /* OperationSource */].Server, path, newData));\n    };\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n        var changeTree = ImmutableTree[\"a\" /* ImmutableTree */].fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_Merge(Operation[\"a\" /* OperationSource */].Server, path, changeTree));\n    };\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyListenComplete = function (path) {\n        return this.applyOperationToSyncPoints_(new ListenComplete_ListenComplete(Operation[\"a\" /* OperationSource */].Server, path));\n    };\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey != null) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = Path[\"a\" /* Path */].relativePath(queryPath, path);\n            var op = new Overwrite_Overwrite(Operation[\"a\" /* OperationSource */].forServerTaggedQuery(queryId), relativePath, snap);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // Query must have been removed already\n            return [];\n        }\n    };\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = Path[\"a\" /* Path */].relativePath(queryPath, path);\n            var changeTree = ImmutableTree[\"a\" /* ImmutableTree */].fromObject(changedChildren);\n            var op = new Merge_Merge(Operation[\"a\" /* OperationSource */].forServerTaggedQuery(queryId), relativePath, changeTree);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path,\n                queryId = r.queryId;\n            var relativePath = Path[\"a\" /* Path */].relativePath(queryPath, path);\n            var op = new ListenComplete_ListenComplete(Operation[\"a\" /* OperationSource */].forServerTaggedQuery(queryId), relativePath);\n            return this.applyTaggedOperation_(queryPath, op);\n        } else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n        var path = query.path;\n        var serverCache = null;\n        var foundAncestorDefaultView = false;\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n            var relativePath = Path[\"a\" /* Path */].relativePath(pathToSyncPoint, path);\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n            foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n        });\n        var syncPoint = this.syncPointTree_.get(path);\n        if (!syncPoint) {\n            syncPoint = new SyncPoint[\"a\" /* SyncPoint */]();\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n        } else {\n            foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path[\"a\" /* Path */].Empty);\n        }\n        var serverCacheComplete;\n        if (serverCache != null) {\n            serverCacheComplete = true;\n        } else {\n            serverCacheComplete = false;\n            serverCache = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n            var subtree = this.syncPointTree_.subtree(path);\n            subtree.foreachChild(function (childName, childSyncPoint) {\n                var completeCache = childSyncPoint.getCompleteServerCache(Path[\"a\" /* Path */].Empty);\n                if (completeCache) {\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\n                }\n            });\n        }\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n            // We need to track a tag for this query\n            var queryKey = SyncTree.makeQueryKey_(query);\n            Object(assert[\"a\" /* assert */])(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n            var tag = SyncTree.getNextQueryTag_();\n            this.queryToTagMap_[queryKey] = tag;\n            // Coerce to string to avoid sparse arrays.\n            this.tagToQueryMap_['_' + tag] = queryKey;\n        }\n        var writesCache = this.pendingWriteTree_.childWrites(path);\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\n            events = events.concat(this.setupListener_(query, view));\n        }\n        return events;\n    };\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var _this = this;\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\n        var path = query.path;\n        var maybeSyncPoint = this.syncPointTree_.get(path);\n        var cancelEvents = [];\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n        // not loadsAllData().\n        if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n            if (maybeSyncPoint.isEmpty()) {\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\n            }\n            var removed = removedAndEvents.removed;\n            cancelEvents = removedAndEvents.events;\n            // We may have just removed one of many listeners and can short-circuit this whole process\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n            // properly set up.\n            //\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n            // queryId === 'default'\n            var removingDefault = -1 !== removed.findIndex(function (query) {\n                return query.getQueryParams().loadsAllData();\n            });\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n                return parentSyncPoint.hasCompleteView();\n            });\n            if (removingDefault && !covered) {\n                var subtree = this.syncPointTree_.subtree(path);\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\n                // removal\n                if (!subtree.isEmpty()) {\n                    // We need to fold over our subtree and collect the listeners to send\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\n                    // Ok, we've collected all the listens we need. Set them up.\n                    for (var i = 0; i < newViews.length; ++i) {\n                        var view = newViews[i],\n                            newQuery = view.getQuery();\n                        var listener = this.createListenerForView_(view);\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n                    }\n                } else {\n                    // There's nothing below us, so nothing we need to start listening on\n                }\n            }\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\n            if (!covered && removed.length > 0 && !cancelError) {\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n                // default. Otherwise, we need to iterate through and cancel each individual query\n                if (removingDefault) {\n                    // We don't tag default listeners\n                    var defaultTag = null;\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n                } else {\n                    removed.forEach(function (queryToRemove) {\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n                    });\n                }\n            }\n            // Now, clear all of the tags we're tracking for the removed listens\n            this.removeTags_(removed);\n        } else {\n            // No-op, this listener must've been already removed\n        }\n        return cancelEvents;\n    };\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n        var includeHiddenSets = true;\n        var writeTree = this.pendingWriteTree_;\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n            var relativePath = Path[\"a\" /* Path */].relativePath(pathSoFar, path);\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\n            if (serverCache) {\n                return serverCache;\n            }\n        });\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n    };\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                var completeView = maybeChildSyncPoint.getCompleteView();\n                return [completeView];\n            } else {\n                // No complete view here, flatten any deeper listens into an array\n                var views_1 = [];\n                if (maybeChildSyncPoint) {\n                    views_1 = maybeChildSyncPoint.getQueryViews();\n                }\n                Object(obj[\"f\" /* forEach */])(childMap, function (key, childViews) {\n                    views_1 = views_1.concat(childViews);\n                });\n                return views_1;\n            }\n        });\n    };\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\n    SyncTree.prototype.removeTags_ = function (queries) {\n        for (var j = 0; j < queries.length; ++j) {\n            var removedQuery = queries[j];\n            if (!removedQuery.getQueryParams().loadsAllData()) {\n                // We should have a tag for this\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n                delete this.queryToTagMap_[removedQueryKey];\n                delete this.tagToQueryMap_['_' + removedQueryTag];\n            }\n        }\n    };\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\n    SyncTree.queryForListening_ = function (query) {\n        if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n            // We treat queries that load all data as default queries\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n            // from Query\n            return (/** @type {!Query} */query.getRef()\n            );\n        } else {\n            return query;\n        }\n    };\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\n    SyncTree.prototype.setupListener_ = function (query, view) {\n        var path = query.path;\n        var tag = this.tagForQuery_(query);\n        var listener = this.createListenerForView_(view);\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n        var subtree = this.syncPointTree_.subtree(path);\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n        // may need to shadow other listens as well.\n        if (tag) {\n            Object(assert[\"a\" /* assert */])(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n        } else {\n            // Shadow everything at or below this location, this is a default listener.\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n                if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\n                } else {\n                    // No default listener here, flatten any deeper queries into an array\n                    var queries_1 = [];\n                    if (maybeChildSyncPoint) {\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n                            return view.getQuery();\n                        }));\n                    }\n                    Object(obj[\"f\" /* forEach */])(childMap, function (key, childQueries) {\n                        queries_1 = queries_1.concat(childQueries);\n                    });\n                    return queries_1;\n                }\n            });\n            for (var i = 0; i < queriesToStop.length; ++i) {\n                var queryToStop = queriesToStop[i];\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n            }\n        }\n        return events;\n    };\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\n    SyncTree.prototype.createListenerForView_ = function (view) {\n        var _this = this;\n        var query = view.getQuery();\n        var tag = this.tagForQuery_(query);\n        return {\n            hashFn: function hashFn() {\n                var cache = view.getServerCache() || ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                return cache.hash();\n            },\n            onComplete: function onComplete(status) {\n                if (status === 'ok') {\n                    if (tag) {\n                        return _this.applyTaggedListenComplete(query.path, tag);\n                    } else {\n                        return _this.applyListenComplete(query.path);\n                    }\n                } else {\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n                    var error = Object(util[\"l\" /* errorForServerCode */])(status, query);\n                    return _this.removeEventRegistration(query,\n                    /*eventRegistration*/null, error);\n                }\n            }\n        };\n    };\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\n    SyncTree.makeQueryKey_ = function (query) {\n        return query.path.toString() + '$' + query.queryIdentifier();\n    };\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\n    SyncTree.parseQueryKey_ = function (queryKey) {\n        var splitIndex = queryKey.indexOf('$');\n        Object(assert[\"a\" /* assert */])(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n        return {\n            queryId: queryKey.substr(splitIndex + 1),\n            path: new Path[\"a\" /* Path */](queryKey.substr(0, splitIndex))\n        };\n    };\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\n        return this.tagToQueryMap_['_' + tag];\n    };\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\n    SyncTree.prototype.tagForQuery_ = function (query) {\n        var queryKey = SyncTree.makeQueryKey_(query);\n        return Object(obj[\"l\" /* safeGet */])(this.queryToTagMap_, queryKey);\n    };\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\n    SyncTree.getNextQueryTag_ = function () {\n        return SyncTree.nextQueryTag_++;\n    };\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n        var syncPoint = this.syncPointTree_.get(queryPath);\n        Object(assert[\"a\" /* assert */])(syncPoint, \"Missing sync point for query tag that we're tracking\");\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n        return syncPoint.applyOperation(operation, writesCache,\n        /*serverCache=*/null);\n    };\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n        * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n        * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n        return this.applyOperationHelper_(operation, this.syncPointTree_,\n        /*serverCache=*/null, this.pendingWriteTree_.childWrites(Path[\"a\" /* Path */].Empty));\n    };\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        if (operation.path.isEmpty()) {\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n        } else {\n            var syncPoint = syncPointTree.get(Path[\"a\" /* Path */].Empty);\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\n            if (serverCache == null && syncPoint != null) {\n                serverCache = syncPoint.getCompleteServerCache(Path[\"a\" /* Path */].Empty);\n            }\n            var events = [];\n            var childName = operation.path.getFront();\n            var childOperation = operation.operationForChild(childName);\n            var childTree = syncPointTree.children.get(childName);\n            if (childTree && childOperation) {\n                var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n                var childWritesCache = writesCache.child(childName);\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n            if (syncPoint) {\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n            }\n            return events;\n        }\n    };\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        var _this = this;\n        var syncPoint = syncPointTree.get(Path[\"a\" /* Path */].Empty);\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\n        if (serverCache == null && syncPoint != null) {\n            serverCache = syncPoint.getCompleteServerCache(Path[\"a\" /* Path */].Empty);\n        }\n        var events = [];\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\n            var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n            var childWritesCache = writesCache.child(childName);\n            var childOperation = operation.operationForChild(childName);\n            if (childOperation) {\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n        });\n        if (syncPoint) {\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n        }\n        return events;\n    };\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\n    SyncTree.nextQueryTag_ = 1;\n    return SyncTree;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/SnapshotHolder.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\nvar SnapshotHolder_SnapshotHolder = /** @class */function () {\n    function SnapshotHolder() {\n        this.rootNode_ = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}();\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// CONCATENATED MODULE: ./src/database/core/AuthTokenProvider.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\nvar AuthTokenProvider_AuthTokenProvider = /** @class */function () {\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null,\n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                Object(util[\"s\" /* log */])('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            } else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n        } else if ('serviceAccount' in this.app_.options) {\n            errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n        } else {\n            errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n        }\n        Object(util[\"B\" /* warn */])(errorMessage);\n    };\n    return AuthTokenProvider;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/stats/StatsManager.ts + 1 modules\nvar StatsManager = __webpack_require__(29);\n\n// CONCATENATED MODULE: ./src/database/core/stats/StatsListener.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\nvar StatsListener_StatsListener = /** @class */function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = Object(obj[\"a\" /* clone */])(newStats);\n        if (this.last_) {\n            Object(obj[\"f\" /* forEach */])(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/stats/StatsReporter.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\nvar StatsReporter_StatsReporter = /** @class */function () {\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\n    function StatsReporter(collection, server_) {\n        this.server_ = server_;\n        this.statsToReport_ = {};\n        this.statsListener_ = new StatsListener_StatsListener(collection);\n        var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n        Object(util[\"x\" /* setTimeoutNonBlocking */])(this.reportStats_.bind(this), Math.floor(timeout));\n    }\n    StatsReporter.prototype.includeStat = function (stat) {\n        this.statsToReport_[stat] = true;\n    };\n    StatsReporter.prototype.reportStats_ = function () {\n        var _this = this;\n        var stats = this.statsListener_.get();\n        var reportedStats = {};\n        var haveStatsToReport = false;\n        Object(obj[\"f\" /* forEach */])(stats, function (stat, value) {\n            if (value > 0 && Object(obj[\"b\" /* contains */])(_this.statsToReport_, stat)) {\n                reportedStats[stat] = value;\n                haveStatsToReport = true;\n            }\n        });\n        if (haveStatsToReport) {\n            this.server_.reportStats(reportedStats);\n        }\n        // queue our next run.\n        Object(util[\"x\" /* setTimeoutNonBlocking */])(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n    };\n    return StatsReporter;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/view/EventQueue.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\nvar EventQueue = /** @class */function () {\n    function EventQueue() {\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\n        this.eventLists_ = [];\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventQueue_EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                } else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}();\n\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\nvar EventQueue_EventList = /** @class */function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\n        this.events_ = [];\n    }\n    /**\r\n     * @param {!Event} eventData\r\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (util[\"u\" /* logger */]) {\n                    Object(util[\"s\" /* log */])('event: ' + eventData.toString());\n                }\n                Object(util[\"m\" /* exceptionGuard */])(eventFn);\n            }\n        }\n    };\n    /**\r\n     * @return {!Path}\r\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/PersistentConnection.ts + 4 modules\nvar PersistentConnection = __webpack_require__(51);\n\n// CONCATENATED MODULE: ./src/utils/util.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\nvar util_querystring = function querystring(querystringParams) {\n    var params = [];\n    Object(obj[\"f\" /* forEach */])(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        } else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\nvar querystringDecode = function querystringDecode(querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n// EXTERNAL MODULE: ./src/database/core/ServerActions.ts\nvar ServerActions = __webpack_require__(55);\n\n// CONCATENATED MODULE: ./src/database/core/ReadonlyRestClient.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\nvar ReadonlyRestClient_ReadonlyRestClient = /** @class */function (_super) {\n    __extends(ReadonlyRestClient, _super);\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = Object(util[\"t\" /* logWrapper */])('p:rest:');\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        } else {\n            Object(assert[\"a\" /* assert */])(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query.getQueryParams().toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/false, tag);\n            }\n            if (Object(obj[\"l\" /* safeGet */])(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                } else if (error == 401) {\n                    status_1 = 'permission_denied';\n                } else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) {\n            queryStringParameters = {};\n        }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_.getToken( /*forceRefresh=*/false).then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + util_querystring(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = Object(json[\"a\" /* jsonEval */])(xhr.responseText);\n                        } catch (e) {\n                            Object(util[\"B\" /* warn */])('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n                        }\n                        callback(null, res);\n                    } else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            Object(util[\"B\" /* warn */])('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(ServerActions[\"a\" /* ServerActions */]);\n\n// EXTERNAL MODULE: ./src/database/api/Database.ts\nvar Database = __webpack_require__(36);\n\n// CONCATENATED MODULE: ./src/database/core/Repo.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Repo_Repo; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\nvar Repo_Repo = /** @class */function () {\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree[\"a\" /* SparseSnapshotTree */]();\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_AuthTokenProvider(app);\n        this.stats_ = StatsManager[\"a\" /* StatsManager */].getCollection(repoInfo_);\n        if (forceRestClient || Object(util[\"g\" /* beingCrawled */])()) {\n            this.server_ = new ReadonlyRestClient_ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        } else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if ((typeof authOverride === 'undefined' ? 'undefined' : _typeof(authOverride)) !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    Object(json[\"b\" /* stringify */])(authOverride);\n                } catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection[\"a\" /* PersistentConnection */](this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager[\"a\" /* StatsManager */].getOrCreateReporter(repoInfo_, function () {\n            return new StatsReporter_StatsReporter(_this.stats_, _this.server_);\n        });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_SyncTree({\n            startListening: function startListening(query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function stopListening() {}\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_SyncTree({\n            startListening: function startListening(query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function stopListening(query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\n    Repo.prototype.toString = function () {\n        return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n    };\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path[\"a\" /* Path */]('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\n    Repo.prototype.generateServerValues = function () {\n        return Object(ServerValues[\"a\" /* generateWithValues */])({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path[\"a\" /* Path */](pathString);\n        data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = Object(obj[\"k\" /* map */])(data, function (raw) {\n                    return Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            } else {\n                var taggedSnap = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        } else if (isMerge) {\n            var changedChildren = Object(obj[\"k\" /* map */])(data, function (raw) {\n                return Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        } else {\n            var snap = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        Object(util[\"i\" /* each */])(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path[\"a\" /* Path */]('/.info/' + pathString);\n        var newNode = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(newVal, newPriority);\n        var newNode = Object(ServerValues[\"b\" /* resolveDeferredValueSnapshot */])(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val( /*export=*/true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                Object(util[\"B\" /* warn */])('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        Object(obj[\"f\" /* forEach */])(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(changedValue);\n            changedChildren[changedKey] = Object(ServerValues[\"b\" /* resolveDeferredValueSnapshot */])(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    Object(util[\"B\" /* warn */])('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            Object(obj[\"f\" /* forEach */])(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        } else {\n            Object(util[\"s\" /* log */])(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = Object(ServerValues[\"c\" /* resolveDeferredValueTree */])(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path[\"a\" /* Path */].Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree[\"a\" /* SparseSnapshotTree */]();\n        this.eventQueue_.raiseEventsForChangedPath(Path[\"a\" /* Path */].Empty, events);\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (Object(obj[\"j\" /* isEmpty */])(childrenToMerge)) {\n            Object(util[\"s\" /* log */])(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                Object(obj[\"f\" /* forEach */])(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        } else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        } else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) {\n            showDelta = false;\n        }\n        if (typeof console === 'undefined') return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_) this.statsListener_ = new StatsListener_StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        } else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        Object(obj[\"f\" /* forEach */])(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++) {\n                stat += ' ';\n            }console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util[\"s\" /* log */].apply(void 0, [prefix].concat(var_args));\n    };\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            Object(util[\"m\" /* exceptionGuard */])(function () {\n                if (status == 'ok') {\n                    callback(null);\n                } else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason) message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function get() {\n            return this.__database || (this.__database = new Database[\"a\" /* Database */](this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}();\n\n\n/***/ }),\n/* 24 */,\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return stringToByteArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return stringLength; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assert__ = __webpack_require__(0);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\nvar stringToByteArray = function stringToByteArray(str) {\n    var out = [],\n        p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            Object(__WEBPACK_IMPORTED_MODULE_0__assert__[\"a\" /* assert */])(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        } else if (c < 2048) {\n            out[p++] = c >> 6 | 192;\n            out[p++] = c & 63 | 128;\n        } else if (c < 65536) {\n            out[p++] = c >> 12 | 224;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        } else {\n            out[p++] = c >> 18 | 240;\n            out[p++] = c >> 12 & 63 | 128;\n            out[p++] = c >> 6 & 63 | 128;\n            out[p++] = c & 63 | 128;\n        }\n    }\n    return out;\n};\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\nvar stringLength = function stringLength(str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        } else if (c < 2048) {\n            p += 2;\n        } else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        } else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/validation.ts\nvar validation = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/database/core/util/validation.ts\nvar util_validation = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/utils/promise.ts\nvar utils_promise = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/database/api/onDisconnect.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * @constructor\r\n */\nvar onDisconnect_OnDisconnect = /** @class */function () {\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\n    function OnDisconnect(repo_, path_) {\n        this.repo_ = repo_;\n        this.path_ = path_;\n    }\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\n    OnDisconnect.prototype.cancel = function (onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('OnDisconnect.cancel', 0, 1, arguments.length);\n        Object(validation[\"c\" /* validateCallback */])('OnDisconnect.cancel', 1, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\n    OnDisconnect.prototype.remove = function (onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('OnDisconnect.remove', 0, 1, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('OnDisconnect.remove', this.path_);\n        Object(validation[\"c\" /* validateCallback */])('OnDisconnect.remove', 1, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\n    OnDisconnect.prototype.set = function (value, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('OnDisconnect.set', 1, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('OnDisconnect.set', this.path_);\n        Object(util_validation[\"e\" /* validateFirebaseDataArg */])('OnDisconnect.set', 1, value, this.path_, false);\n        Object(validation[\"c\" /* validateCallback */])('OnDisconnect.set', 2, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('OnDisconnect.setWithPriority', this.path_);\n        Object(util_validation[\"e\" /* validateFirebaseDataArg */])('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n        Object(util_validation[\"i\" /* validatePriority */])('OnDisconnect.setWithPriority', 2, priority, false);\n        Object(validation[\"c\" /* validateCallback */])('OnDisconnect.setWithPriority', 3, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('OnDisconnect.update', 1, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('OnDisconnect.update', this.path_);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            Object(util[\"B\" /* warn */])('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n        }\n        Object(util_validation[\"f\" /* validateFirebaseMergeDataArg */])('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n        Object(validation[\"c\" /* validateCallback */])('OnDisconnect.update', 2, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    return OnDisconnect;\n}();\n\n// CONCATENATED MODULE: ./src/database/api/TransactionResult.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar TransactionResult_TransactionResult = /** @class */function () {\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    TransactionResult.prototype.toJSON = function () {\n        Object(validation[\"b\" /* validateArgCount */])('TransactionResult.toJSON', 0, 1, arguments.length);\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n    };\n    return TransactionResult;\n}();\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/database/core/util/NextPushId.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\nvar nextPushId = function () {\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n    // Timestamp of last push, used to prevent local collisions if you push twice\n    // in one ms.\n    var lastPushTime = 0;\n    // We generate 72-bits of randomness which get turned into 12 characters and\n    // appended to the timestamp to prevent collisions with other clients. We\n    // store the last characters we generated because in the event of a collision,\n    // we'll use those same characters except \"incremented\" by one.\n    var lastRandChars = [];\n    return function (now) {\n        var duplicateTime = now === lastPushTime;\n        lastPushTime = now;\n        var i;\n        var timeStampChars = new Array(8);\n        for (i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            // NOTE: Can't use << here because javascript will convert to int and lose\n            // the upper bits.\n            now = Math.floor(now / 64);\n        }\n        Object(assert[\"a\" /* assert */])(now === 0, 'Cannot push at time == 0');\n        var id = timeStampChars.join('');\n        if (!duplicateTime) {\n            for (i = 0; i < 12; i++) {\n                lastRandChars[i] = Math.floor(Math.random() * 64);\n            }\n        } else {\n            // If the timestamp hasn't changed since last push, use the same random\n            // number, except incremented by 1.\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n                lastRandChars[i] = 0;\n            }\n            lastRandChars[i]++;\n        }\n        for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n        }\n        Object(assert[\"a\" /* assert */])(id.length === 20, 'nextPushId: Length should be 20.');\n        return id;\n    };\n}();\n// EXTERNAL MODULE: ./src/database/api/Query.ts + 2 modules\nvar Query = __webpack_require__(39);\n\n// EXTERNAL MODULE: ./src/database/core/Repo.ts + 14 modules\nvar Repo = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/KeyIndex.ts\nvar KeyIndex = __webpack_require__(15);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PriorityIndex.ts\nvar PriorityIndex = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/ValueIndex.ts\nvar ValueIndex = __webpack_require__(41);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PathIndex.ts\nvar PathIndex = __webpack_require__(45);\n\n// EXTERNAL MODULE: ./src/database/core/view/filter/IndexedFilter.ts\nvar IndexedFilter = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./src/database/core/snap/Node.ts\nvar Node = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./src/database/core/snap/ChildrenNode.ts\nvar ChildrenNode = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/database/core/view/filter/RangedFilter.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\nvar RangedFilter_RangedFilter = /** @class */function () {\n    /**\r\n     * @param {!QueryParams} params\r\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new IndexedFilter[\"a\" /* IndexedFilter */](params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\r\n     * @return {!NamedNode}\r\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\r\n     * @return {!NamedNode}\r\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new Node[\"a\" /* NamedNode */](key, newChild))) {\n            newChild = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(PriorityIndex[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n            if (!self.matches(new Node[\"a\" /* NamedNode */](key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        } else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        } else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/view/Change.ts\nvar Change = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/database/core/view/filter/LimitedFilter.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\nvar LimitedFilter_LimitedFilter = /** @class */function () {\n    /**\r\n     * @param {!QueryParams} params\r\n     */\n    function LimitedFilter(params) {\n        this.rangedFilter_ = new RangedFilter_RangedFilter(params);\n        this.index_ = params.getIndex();\n        this.limit_ = params.getLimit();\n        this.reverse_ = !params.isViewFromLeft();\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.rangedFilter_.matches(new Node[\"a\" /* NamedNode */](key, newChild))) {\n            newChild = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        }\n        if (snap.getImmediateChild(key).equals(newChild)) {\n            // No change\n            return snap;\n        } else if (snap.numChildren() < this.limit_) {\n            return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n        } else {\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        var filtered;\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            filtered = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE.withIndex(this.index_);\n        } else {\n            if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n                filtered = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE.withIndex(this.index_);\n                // anchor to the startPost, endPost, or last element as appropriate\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n                } else {\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n                }\n                var count = 0;\n                while (iterator.hasNext() && count < this.limit_) {\n                    var next = iterator.getNext();\n                    var inRange = void 0;\n                    if (this.reverse_) {\n                        inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n                    } else {\n                        inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n                    }\n                    if (inRange) {\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\n                        count++;\n                    } else {\n                        // if we have reached the end post, we cannot keep adding elemments\n                        break;\n                    }\n                }\n            } else {\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n                filtered = newSnap.withIndex(this.index_);\n                // Don't support priorities on queries\n                filtered = filtered.updatePriority(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n                var startPost = void 0;\n                var endPost = void 0;\n                var cmp = void 0;\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = filtered.getReverseIterator(this.index_);\n                    startPost = this.rangedFilter_.getEndPost();\n                    endPost = this.rangedFilter_.getStartPost();\n                    var indexCompare_1 = this.index_.getCompare();\n                    cmp = function cmp(a, b) {\n                        return indexCompare_1(b, a);\n                    };\n                } else {\n                    iterator = filtered.getIterator(this.index_);\n                    startPost = this.rangedFilter_.getStartPost();\n                    endPost = this.rangedFilter_.getEndPost();\n                    cmp = this.index_.getCompare();\n                }\n                var count = 0;\n                var foundStartPost = false;\n                while (iterator.hasNext()) {\n                    var next = iterator.getNext();\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\n                        // start adding\n                        foundStartPost = true;\n                    }\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n                    if (inRange) {\n                        count++;\n                    } else {\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n                    }\n                }\n            }\n        }\n        return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.getIndexedFilter = function () {\n        return this.rangedFilter_.getIndexedFilter();\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    LimitedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n        // TODO: rename all cache stuff etc to general snap terminology\n        var cmp;\n        if (this.reverse_) {\n            var indexCmp_1 = this.index_.getCompare();\n            cmp = function cmp(a, b) {\n                return indexCmp_1(b, a);\n            };\n        } else {\n            cmp = this.index_.getCompare();\n        }\n        var oldEventCache = snap;\n        Object(assert[\"a\" /* assert */])(oldEventCache.numChildren() == this.limit_, '');\n        var newChildNamedNode = new Node[\"a\" /* NamedNode */](childKey, childSnap);\n        var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\n        if (oldEventCache.hasChild(childKey)) {\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n            while (nextChild != null && (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\n                // the limited filter...\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n            }\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n            if (remainsInWindow) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change[\"a\" /* Change */].childChangedChange(childKey, childSnap, oldChildSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\n            } else {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change[\"a\" /* Change */].childRemovedChange(childKey, oldChildSnap));\n                }\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n                if (nextChildInRange) {\n                    if (changeAccumulator != null) {\n                        changeAccumulator.trackChildChange(Change[\"a\" /* Change */].childAddedChange(nextChild.name, nextChild.node));\n                    }\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n                } else {\n                    return newEventCache;\n                }\n            }\n        } else if (childSnap.isEmpty()) {\n            // we're deleting a node, but it was not in the window, so ignore it\n            return snap;\n        } else if (inRange) {\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change[\"a\" /* Change */].childRemovedChange(windowBoundary.name, windowBoundary.node));\n                    changeAccumulator.trackChildChange(Change[\"a\" /* Change */].childAddedChange(childKey, childSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE);\n            } else {\n                return snap;\n            }\n        } else {\n            return snap;\n        }\n    };\n    return LimitedFilter;\n}();\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// CONCATENATED MODULE: ./src/database/core/view/QueryParams.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\nvar QueryParams_QueryParams = /** @class */function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = PriorityIndex[\"a\" /* PRIORITY_INDEX */];\n    }\n    /**\r\n     * @return {boolean}\r\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        } else {\n            return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        }\n    };\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        Object(assert[\"a\" /* assert */])(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        Object(assert[\"a\" /* assert */])(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        } else {\n            return util[\"c\" /* MIN_NAME */];\n        }\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        Object(assert[\"a\" /* assert */])(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        Object(assert[\"a\" /* assert */])(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        } else {\n            return util[\"b\" /* MAX_NAME */];\n        }\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\n    QueryParams.prototype.getLimit = function () {\n        Object(assert[\"a\" /* assert */])(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\r\n     * @return {!Index}\r\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        } else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        } else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\r\n     * @return {!Object}\r\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                } else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== PriorityIndex[\"a\" /* PRIORITY_INDEX */]) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == PriorityIndex[\"a\" /* PRIORITY_INDEX */];\n    };\n    /**\r\n     * @return {!NodeFilter}\r\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new IndexedFilter[\"a\" /* IndexedFilter */](this.getIndex());\n        } else if (this.hasLimit()) {\n            return new LimitedFilter_LimitedFilter(this);\n        } else {\n            return new RangedFilter_RangedFilter(this);\n        }\n    };\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === PriorityIndex[\"a\" /* PRIORITY_INDEX */]) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        } else if (this.index_ === ValueIndex[\"a\" /* VALUE_INDEX */]) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        } else if (this.index_ === KeyIndex[\"a\" /* KEY_INDEX */]) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        } else {\n            Object(assert[\"a\" /* assert */])(this.index_ instanceof PathIndex[\"a\" /* PathIndex */], 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = Object(json[\"b\" /* stringify */])(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = Object(json[\"b\" /* stringify */])(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + Object(json[\"b\" /* stringify */])(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = Object(json[\"b\" /* stringify */])(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + Object(json[\"b\" /* stringify */])(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            } else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/SyncPoint.ts + 7 modules\nvar SyncPoint = __webpack_require__(50);\n\n// CONCATENATED MODULE: ./src/database/api/Reference.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Reference_Reference; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\nvar Reference_Reference = /** @class */function (_super) {\n    __extends(Reference, _super);\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\n    function Reference(repo, path) {\n        var _this = this;\n        if (!(repo instanceof Repo[\"a\" /* Repo */])) {\n            throw new Error('new Reference() no longer supported - use app.database().');\n        }\n        // call Query's constructor, passing in the repo and path.\n        _this = _super.call(this, repo, path, QueryParams_QueryParams.DEFAULT, false) || this;\n        return _this;\n    }\n    /** @return {?string} */\n    Reference.prototype.getKey = function () {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.key', 0, 0, arguments.length);\n        if (this.path.isEmpty()) return null;else return this.path.getBack();\n    };\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\n    Reference.prototype.child = function (pathString) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.child', 1, 1, arguments.length);\n        if (typeof pathString === 'number') {\n            pathString = String(pathString);\n        } else if (!(pathString instanceof Path[\"a\" /* Path */])) {\n            if (this.path.getFront() === null) Object(util_validation[\"j\" /* validateRootPathString */])('Reference.child', 1, pathString, false);else Object(util_validation[\"h\" /* validatePathString */])('Reference.child', 1, pathString, false);\n        }\n        return new Reference(this.repo, this.path.child(pathString));\n    };\n    /** @return {?Reference} */\n    Reference.prototype.getParent = function () {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.parent', 0, 0, arguments.length);\n        var parentPath = this.path.parent();\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\n    };\n    /** @return {!Reference} */\n    Reference.prototype.getRoot = function () {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.root', 0, 0, arguments.length);\n        var ref = this;\n        while (ref.getParent() !== null) {\n            ref = ref.getParent();\n        }\n        return ref;\n    };\n    /** @return {!Database} */\n    Reference.prototype.databaseProp = function () {\n        return this.repo.database;\n    };\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.set = function (newVal, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.set', 1, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.set', this.path);\n        Object(util_validation[\"e\" /* validateFirebaseDataArg */])('Reference.set', 1, newVal, this.path, false);\n        Object(validation[\"c\" /* validateCallback */])('Reference.set', 2, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo.setWithPriority(this.path, newVal,\n        /*priority=*/null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.update = function (objectToMerge, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.update', 1, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.update', this.path);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            Object(util[\"B\" /* warn */])('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n        }\n        Object(util_validation[\"f\" /* validateFirebaseMergeDataArg */])('Reference.update', 1, objectToMerge, this.path, false);\n        Object(validation[\"c\" /* validateCallback */])('Reference.update', 2, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.setWithPriority', 2, 3, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.setWithPriority', this.path);\n        Object(util_validation[\"e\" /* validateFirebaseDataArg */])('Reference.setWithPriority', 1, newVal, this.path, false);\n        Object(util_validation[\"i\" /* validatePriority */])('Reference.setWithPriority', 2, newPriority, false);\n        Object(validation[\"c\" /* validateCallback */])('Reference.setWithPriority', 3, onComplete, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.remove = function (onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.remove', 0, 1, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.remove', this.path);\n        Object(validation[\"c\" /* validateCallback */])('Reference.remove', 1, onComplete, true);\n        return this.set(null, onComplete);\n    };\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.transaction', 1, 3, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.transaction', this.path);\n        Object(validation[\"c\" /* validateCallback */])('Reference.transaction', 1, transactionUpdate, false);\n        Object(validation[\"c\" /* validateCallback */])('Reference.transaction', 2, onComplete, true);\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n        // to expose it.\n        Object(util_validation[\"b\" /* validateBoolean */])('Reference.transaction', 3, applyLocally, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n        if (applyLocally === undefined) applyLocally = true;\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        if (typeof onComplete === 'function') {\n            Object(utils_promise[\"c\" /* attachDummyErrorHandler */])(deferred.promise);\n        }\n        var promiseComplete = function promiseComplete(error, committed, snapshot) {\n            if (error) {\n                deferred.reject(error);\n            } else {\n                deferred.resolve(new TransactionResult_TransactionResult(committed, snapshot));\n            }\n            if (typeof onComplete === 'function') {\n                onComplete(error, committed, snapshot);\n            }\n        };\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n        return deferred.promise;\n    };\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\n    Reference.prototype.setPriority = function (priority, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.setPriority', 1, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.setPriority', this.path);\n        Object(util_validation[\"i\" /* validatePriority */])('Reference.setPriority', 1, priority, false);\n        Object(validation[\"c\" /* validateCallback */])('Reference.setPriority', 2, onComplete, true);\n        var deferred = new utils_promise[\"a\" /* Deferred */]();\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\n    Reference.prototype.push = function (value, onComplete) {\n        Object(validation[\"b\" /* validateArgCount */])('Reference.push', 0, 2, arguments.length);\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.push', this.path);\n        Object(util_validation[\"e\" /* validateFirebaseDataArg */])('Reference.push', 1, value, this.path, true);\n        Object(validation[\"c\" /* validateCallback */])('Reference.push', 2, onComplete, true);\n        var now = this.repo.serverTime();\n        var name = nextPushId(now);\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n        // We use child() to create handles to two different references. The first is turned into a\n        // ThennableReference below by adding then() and catch() methods and is used as the\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\n        // value of the first ThennableReference.\n        var thennablePushRef = this.child(name);\n        var pushRef = this.child(name);\n        var promise;\n        if (value != null) {\n            promise = thennablePushRef.set(value, onComplete).then(function () {\n                return pushRef;\n            });\n        } else {\n            promise = utils_promise[\"b\" /* PromiseImpl */].resolve(pushRef);\n        }\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\n        if (typeof onComplete === 'function') {\n            Object(utils_promise[\"c\" /* attachDummyErrorHandler */])(promise);\n        }\n        return thennablePushRef;\n    };\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\n    Reference.prototype.onDisconnect = function () {\n        Object(util_validation[\"l\" /* validateWritablePath */])('Reference.onDisconnect', this.path);\n        return new onDisconnect_OnDisconnect(this.repo, this.path);\n    };\n    Object.defineProperty(Reference.prototype, \"database\", {\n        get: function get() {\n            return this.databaseProp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"key\", {\n        get: function get() {\n            return this.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        get: function get() {\n            return this.getParent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        get: function get() {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Reference;\n}(Query[\"a\" /* Query */]);\n\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\nQuery[\"a\" /* Query */].__referenceConstructor = Reference_Reference;\nSyncPoint[\"a\" /* SyncPoint */].__referenceConstructor = Reference_Reference;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ImmutableTree; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__SortedMap__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_obj__ = __webpack_require__(2);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\nvar EmptyChildren = function EmptyChildren() {\n    if (!emptyChildrenSingleton) {\n        emptyChildrenSingleton = new __WEBPACK_IMPORTED_MODULE_0__SortedMap__[\"b\" /* SortedMap */](__WEBPACK_IMPORTED_MODULE_2__util__[\"A\" /* stringCompare */]);\n    }\n    return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\nvar ImmutableTree = /** @class */function () {\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\n    function ImmutableTree(value, children) {\n        if (children === void 0) {\n            children = EmptyChildren();\n        }\n        this.value = value;\n        this.children = children;\n    }\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\n    ImmutableTree.fromObject = function (obj) {\n        var tree = ImmutableTree.Empty;\n        Object(__WEBPACK_IMPORTED_MODULE_3__utils_obj__[\"f\" /* forEach */])(obj, function (childPath, childSnap) {\n            tree = tree.set(new __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */](childPath), childSnap);\n        });\n        return tree;\n    };\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\n    ImmutableTree.prototype.isEmpty = function () {\n        return this.value === null && this.children.isEmpty();\n    };\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n        if (this.value != null && predicate(this.value)) {\n            return { path: __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */].Empty, value: this.value };\n        } else {\n            if (relativePath.isEmpty()) {\n                return null;\n            } else {\n                var front = relativePath.getFront();\n                var child = this.children.get(front);\n                if (child !== null) {\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n                    if (childExistingPathAndValue != null) {\n                        var fullPath = new __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */](front).child(childExistingPathAndValue.path);\n                        return { path: fullPath, value: childExistingPathAndValue.value };\n                    } else {\n                        return null;\n                    }\n                } else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n        return this.findRootMostMatchingPathAndValue(relativePath, function () {\n            return true;\n        });\n    };\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\n    ImmutableTree.prototype.subtree = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this;\n        } else {\n            var front = relativePath.getFront();\n            var childTree = this.children.get(front);\n            if (childTree !== null) {\n                return childTree.subtree(relativePath.popFront());\n            } else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\n        if (relativePath.isEmpty()) {\n            return new ImmutableTree(toSet, this.children);\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.set(relativePath.popFront(), toSet);\n            var newChildren = this.children.insert(front, newChild);\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\n    ImmutableTree.prototype.remove = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            if (this.children.isEmpty()) {\n                return ImmutableTree.Empty;\n            } else {\n                return new ImmutableTree(null, this.children);\n            }\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                var newChild = child.remove(relativePath.popFront());\n                var newChildren = void 0;\n                if (newChild.isEmpty()) {\n                    newChildren = this.children.remove(front);\n                } else {\n                    newChildren = this.children.insert(front, newChild);\n                }\n                if (this.value === null && newChildren.isEmpty()) {\n                    return ImmutableTree.Empty;\n                } else {\n                    return new ImmutableTree(this.value, newChildren);\n                }\n            } else {\n                return this;\n            }\n        }\n    };\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\n    ImmutableTree.prototype.get = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this.value;\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                return child.get(relativePath.popFront());\n            } else {\n                return null;\n            }\n        }\n    };\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n        if (relativePath.isEmpty()) {\n            return newTree;\n        } else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.setTree(relativePath.popFront(), newTree);\n            var newChildren = void 0;\n            if (newChild.isEmpty()) {\n                newChildren = this.children.remove(front);\n            } else {\n                newChildren = this.children.insert(front, newChild);\n            }\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\n    ImmutableTree.prototype.fold = function (fn) {\n        return this.fold_(__WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */].Empty, fn);\n    };\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n        var accum = {};\n        this.children.inorderTraversal(function (childKey, childTree) {\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n        });\n        return fn(pathSoFar, this.value, accum);\n    };\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\n    ImmutableTree.prototype.findOnPath = function (path, f) {\n        return this.findOnPath_(path, __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */].Empty, f);\n    };\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n        var result = this.value ? f(pathSoFar, this.value) : false;\n        if (result) {\n            return result;\n        } else {\n            if (pathToFollow.isEmpty()) {\n                return null;\n            } else {\n                var front = pathToFollow.getFront();\n                var nextChild = this.children.get(front);\n                if (nextChild) {\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n                } else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\n        return this.foreachOnPath_(path, __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */].Empty, f);\n    };\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n        if (pathToFollow.isEmpty()) {\n            return this;\n        } else {\n            if (this.value) {\n                f(currentRelativePath, this.value);\n            }\n            var front = pathToFollow.getFront();\n            var nextChild = this.children.get(front);\n            if (nextChild) {\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n            } else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\n    ImmutableTree.prototype.foreach = function (f) {\n        this.foreach_(__WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */].Empty, f);\n    };\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            childTree.foreach_(currentRelativePath.child(childName), f);\n        });\n        if (this.value) {\n            f(currentRelativePath, this.value);\n        }\n    };\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\n    ImmutableTree.prototype.foreachChild = function (f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            if (childTree.value) {\n                f(childName, childTree.value);\n            }\n        });\n    };\n    ImmutableTree.Empty = new ImmutableTree(null);\n    return ImmutableTree;\n}();\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexedFilter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Change__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__snap_ChildrenNode__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__snap_indexes_PriorityIndex__ = __webpack_require__(5);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\nvar IndexedFilter = /** @class */function () {\n    function IndexedFilter(index_) {\n        this.index_ = index_;\n    }\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n        var oldChild = snap.getImmediateChild(key);\n        // Check if anything actually changed.\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n            // to avoid treating these cases as \"nothing changed.\"\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\n                // Nothing changed.\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n                return snap;\n            }\n        }\n        if (optChangeAccumulator != null) {\n            if (newChild.isEmpty()) {\n                if (snap.hasChild(key)) {\n                    optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childRemovedChange(key, oldChild));\n                } else {\n                    Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n                }\n            } else if (oldChild.isEmpty()) {\n                optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childAddedChange(key, newChild));\n            } else {\n                optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childChangedChange(key, newChild, oldChild));\n            }\n        }\n        if (snap.isLeafNode() && newChild.isEmpty()) {\n            return snap;\n        } else {\n            // Make sure the node is indexed\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (optChangeAccumulator != null) {\n            if (!oldSnap.isLeafNode()) {\n                oldSnap.forEachChild(__WEBPACK_IMPORTED_MODULE_3__snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n                    if (!newSnap.hasChild(key)) {\n                        optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childRemovedChange(key, childNode));\n                    }\n                });\n            }\n            if (!newSnap.isLeafNode()) {\n                newSnap.forEachChild(__WEBPACK_IMPORTED_MODULE_3__snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n                    if (oldSnap.hasChild(key)) {\n                        var oldChild = oldSnap.getImmediateChild(key);\n                        if (!oldChild.equals(childNode)) {\n                            optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childChangedChange(key, childNode, oldChild));\n                        }\n                    } else {\n                        optChangeAccumulator.trackChildChange(__WEBPACK_IMPORTED_MODULE_1__Change__[\"a\" /* Change */].childAddedChange(key, childNode));\n                    }\n                });\n            }\n        }\n        return newSnap.withIndex(this.index_);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        if (oldSnap.isEmpty()) {\n            return __WEBPACK_IMPORTED_MODULE_2__snap_ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE;\n        } else {\n            return oldSnap.updatePriority(newPriority);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    IndexedFilter.prototype.filtersNodes = function () {\n        return false;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    IndexedFilter.prototype.getIndexedFilter = function () {\n        return this;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    IndexedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    return IndexedFilter;\n}();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/deep_copy.ts\nvar deep_copy = __webpack_require__(35);\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/database/core/stats/StatsCollection.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\nvar StatsCollection_StatsCollection = /** @class */function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) {\n            amount = 1;\n        }\n        if (!Object(obj[\"b\" /* contains */])(this.counters_, name)) this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return Object(deep_copy[\"a\" /* deepCopy */])(this.counters_);\n    };\n    return StatsCollection;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/stats/StatsManager.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StatsManager_StatsManager; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar StatsManager_StatsManager = /** @class */function () {\n    function StatsManager() {}\n    StatsManager.getCollection = function (repoInfo) {\n        var hashString = repoInfo.toString();\n        if (!this.collections_[hashString]) {\n            this.collections_[hashString] = new StatsCollection_StatsCollection();\n        }\n        return this.collections_[hashString];\n    };\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n        var hashString = repoInfo.toString();\n        if (!this.reporters_[hashString]) {\n            this.reporters_[hashString] = creatorFunction();\n        }\n        return this.reporters_[hashString];\n    };\n    StatsManager.collections_ = {};\n    StatsManager.reporters_ = {};\n    return StatsManager;\n}();\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/database/core/Repo.ts + 14 modules\nvar Repo = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/util/libs/parser.ts\nvar parser = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./src/database/core/util/validation.ts\nvar validation = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/database/api/Reference.ts + 6 modules\nvar Reference = __webpack_require__(26);\n\n// EXTERNAL MODULE: ./src/database/api/DataSnapshot.ts\nvar DataSnapshot = __webpack_require__(46);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/database/core/util/Tree.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * Node in a Tree.\r\n */\nvar TreeNode = /** @class */function () {\n    function TreeNode() {\n        // TODO: Consider making accessors that create children and value lazily or\n        // separate Internal / Leaf 'types'.\n        this.children = {};\n        this.childCount = 0;\n        this.value = null;\n    }\n    return TreeNode;\n}();\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\nvar Tree_Tree = /** @class */function () {\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\n    function Tree(name_, parent_, node_) {\n        if (name_ === void 0) {\n            name_ = '';\n        }\n        if (parent_ === void 0) {\n            parent_ = null;\n        }\n        if (node_ === void 0) {\n            node_ = new TreeNode();\n        }\n        this.name_ = name_;\n        this.parent_ = parent_;\n        this.node_ = node_;\n    }\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\n    Tree.prototype.subTree = function (pathObj) {\n        // TODO: Require pathObj to be Path?\n        var path = pathObj instanceof Path[\"a\" /* Path */] ? pathObj : new Path[\"a\" /* Path */](pathObj);\n        var child = this,\n            next;\n        while ((next = path.getFront()) !== null) {\n            var childNode = Object(obj[\"l\" /* safeGet */])(child.node_.children, next) || new TreeNode();\n            child = new Tree(next, child, childNode);\n            path = path.popFront();\n        }\n        return child;\n    };\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\n    Tree.prototype.getValue = function () {\n        return this.node_.value;\n    };\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\n    Tree.prototype.setValue = function (value) {\n        Object(assert[\"a\" /* assert */])(typeof value !== 'undefined', 'Cannot set value to undefined');\n        this.node_.value = value;\n        this.updateParents_();\n    };\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\n    Tree.prototype.clear = function () {\n        this.node_.value = null;\n        this.node_.children = {};\n        this.node_.childCount = 0;\n        this.updateParents_();\n    };\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\n    Tree.prototype.hasChildren = function () {\n        return this.node_.childCount > 0;\n    };\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\n    Tree.prototype.isEmpty = function () {\n        return this.getValue() === null && !this.hasChildren();\n    };\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\n    Tree.prototype.forEachChild = function (action) {\n        var _this = this;\n        Object(obj[\"f\" /* forEach */])(this.node_.children, function (child, childTree) {\n            action(new Tree(child, _this, childTree));\n        });\n    };\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n        if (includeSelf && !childrenFirst) action(this);\n        this.forEachChild(function (child) {\n            child.forEachDescendant(action, /*includeSelf=*/true, childrenFirst);\n        });\n        if (includeSelf && childrenFirst) action(this);\n    };\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\n        var node = includeSelf ? this : this.parent();\n        while (node !== null) {\n            if (action(node)) {\n                return true;\n            }\n            node = node.parent();\n        }\n        return false;\n    };\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n        this.forEachChild(function (child) {\n            if (child.getValue() !== null) action(child);else child.forEachImmediateDescendantWithValue(action);\n        });\n    };\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\n    Tree.prototype.path = function () {\n        return new Path[\"a\" /* Path */](this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n    };\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\n    Tree.prototype.name = function () {\n        return this.name_;\n    };\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\n    Tree.prototype.parent = function () {\n        return this.parent_;\n    };\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\n    Tree.prototype.updateParents_ = function () {\n        if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);\n    };\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\n    Tree.prototype.updateChild_ = function (childName, child) {\n        var childEmpty = child.isEmpty();\n        var childExists = Object(obj[\"b\" /* contains */])(this.node_.children, childName);\n        if (childEmpty && childExists) {\n            delete this.node_.children[childName];\n            this.node_.childCount--;\n            this.updateParents_();\n        } else if (!childEmpty && !childExists) {\n            this.node_.children[childName] = child.node_;\n            this.node_.childCount++;\n            this.updateParents_();\n        }\n    };\n    return Tree;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PriorityIndex.ts\nvar PriorityIndex = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./src/database/core/util/ServerValues.ts\nvar ServerValues = __webpack_require__(47);\n\n// EXTERNAL MODULE: ./src/database/core/snap/nodeFromJSON.ts\nvar nodeFromJSON = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./src/database/core/snap/ChildrenNode.ts\nvar ChildrenNode = __webpack_require__(6);\n\n// CONCATENATED MODULE: ./src/database/core/Repo_transaction.ts\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\r\n * @enum {number}\r\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n    // mismatched hash.\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n    // or rejected yet).\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n    // removed when we get a chance to prune completed ones.\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n    // If it comes back as unsuccessful, we'll abort it.\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\n    // Temporary state used to mark transactions that need to be aborted.\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.transactions_init_ = function () {\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\n    this.transactionQueueTree_ = new Tree_Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\nRepo[\"a\" /* Repo */].prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path);\n    // Add a watch to make sure we get server updates.\n    var valueCallback = function valueCallback() {};\n    var watchRef = new Reference[\"a\" /* Reference */](this, path);\n    watchRef.on('value', valueCallback);\n    var unwatcher = function unwatcher() {\n        watchRef.off('value', valueCallback);\n    };\n    // Initialize transaction.\n    var transaction = {\n        path: path,\n        update: transactionUpdate,\n        onComplete: onComplete,\n        // One of TransactionStatus enums.\n        status: null,\n        // Used when combining transactions at different locations to figure out which one goes first.\n        order: Object(util[\"a\" /* LUIDGenerator */])(),\n        // Whether to raise local events for this transaction.\n        applyLocally: applyLocally,\n        // Count of how many times we've retried the transaction.\n        retryCount: 0,\n        // Function to call to clean up our .on() listener.\n        unwatcher: unwatcher,\n        // Stores why a transaction was aborted.\n        abortReason: null,\n        currentWriteId: null,\n        currentInputSnapshot: null,\n        currentOutputSnapshotRaw: null,\n        currentOutputSnapshotResolved: null\n    };\n    // Run transaction initially.\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n        // Abort transaction.\n        transaction.unwatcher();\n        transaction.currentOutputSnapshotRaw = null;\n        transaction.currentOutputSnapshotResolved = null;\n        if (transaction.onComplete) {\n            // We just set the input snapshot, so this cast should be safe\n            var snapshot = new DataSnapshot[\"a\" /* DataSnapshot */](transaction.currentInputSnapshot, new Reference[\"a\" /* Reference */](this, transaction.path), PriorityIndex[\"a\" /* PRIORITY_INDEX */]);\n            transaction.onComplete(null, false, snapshot);\n        }\n    } else {\n        Object(validation[\"d\" /* validateFirebaseData */])('transaction failed: Data returned ', newVal, transaction.path);\n        // Mark as run and add to our queue.\n        transaction.status = TransactionStatus.RUN;\n        var queueNode = this.transactionQueueTree_.subTree(path);\n        var nodeQueue = queueNode.getValue() || [];\n        nodeQueue.push(transaction);\n        queueNode.setValue(nodeQueue);\n        // Update visibleData and raise events\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\n        // start new transactions from the event callbacks.\n        var priorityForNode = void 0;\n        if ((typeof newVal === 'undefined' ? 'undefined' : _typeof(newVal)) === 'object' && newVal !== null && Object(obj[\"b\" /* contains */])(newVal, '.priority')) {\n            priorityForNode = Object(obj[\"l\" /* safeGet */])(newVal, '.priority');\n            Object(assert[\"a\" /* assert */])(Object(validation[\"a\" /* isValidPriority */])(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n        } else {\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n            priorityForNode = currentNode.getPriority().val();\n        }\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(newVal, priorityForNode);\n        var newNode = Object(ServerValues[\"b\" /* resolveDeferredValueSnapshot */])(newNodeUnresolved, serverValues);\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n        transaction.currentOutputSnapshotResolved = newNode;\n        transaction.currentWriteId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        this.sendReadyTransactions_();\n    }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.getLatestState_ = function (path, excludeSets) {\n    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n    if (node === void 0) {\n        node = this.transactionQueueTree_;\n    }\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n        this.pruneCompletedTransactionsBelowNode_(node);\n    }\n    if (node.getValue() !== null) {\n        var queue = this.buildTransactionQueue_(node);\n        Object(assert[\"a\" /* assert */])(queue.length > 0, 'Sending zero length transaction queue');\n        var allRun = queue.every(function (transaction) {\n            return transaction.status === TransactionStatus.RUN;\n        });\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\n        if (allRun) {\n            this.sendTransactionQueue_(node.path(), queue);\n        }\n    } else if (node.hasChildren()) {\n        node.forEachChild(function (childNode) {\n            _this.sendReadyTransactions_(childNode);\n        });\n    }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this;\n    // Mark transactions as sent and increment retry count!\n    var setsToIgnore = queue.map(function (txn) {\n        return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n    for (var i = 0; i < queue.length; i++) {\n        var txn = queue[i];\n        Object(assert[\"a\" /* assert */])(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n        txn.status = TransactionStatus.SENT;\n        txn.retryCount++;\n        var relativePath = Path[\"a\" /* Path */].relativePath(path, txn.path);\n        // If we've gotten to this point, the output snapshot must be defined.\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\n    }\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path;\n    // Send the put.\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n        _this.log_('transaction put response', {\n            path: pathToSend.toString(),\n            status: status\n        });\n        var events = [];\n        if (status === 'ok') {\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n            // the callback could trigger more transactions or sets.\n            var callbacks = [];\n            for (var i = 0; i < queue.length; i++) {\n                queue[i].status = TransactionStatus.COMPLETED;\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n                if (queue[i].onComplete) {\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\n                    var node = queue[i].currentOutputSnapshotResolved;\n                    var ref = new Reference[\"a\" /* Reference */](_this, queue[i].path);\n                    var snapshot = new DataSnapshot[\"a\" /* DataSnapshot */](node, ref, PriorityIndex[\"a\" /* PRIORITY_INDEX */]);\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n                }\n                queue[i].unwatcher();\n            }\n            // Now remove the completed transactions.\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\n            // There may be pending transactions that we can now send.\n            _this.sendReadyTransactions_();\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\n            // Finally, trigger onComplete callbacks.\n            for (var i = 0; i < callbacks.length; i++) {\n                Object(util[\"m\" /* exceptionGuard */])(callbacks[i]);\n            }\n        } else {\n            // transactions are no longer sent.  Update their status appropriately.\n            if (status === 'datastale') {\n                for (var i = 0; i < queue.length; i++) {\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) queue[i].status = TransactionStatus.NEEDS_ABORT;else queue[i].status = TransactionStatus.RUN;\n                }\n            } else {\n                Object(util[\"B\" /* warn */])('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n                for (var i = 0; i < queue.length; i++) {\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    queue[i].abortReason = status;\n                }\n            }\n            _this.rerunTransactions_(path);\n        }\n    }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n        return; // Nothing to do!\n    }\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = [];\n    var events = [];\n    // Ignore all of the sets we're going to re-run.\n    var txnsToRerun = queue.filter(function (q) {\n        return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n        return q.currentWriteId;\n    });\n    for (var i = 0; i < queue.length; i++) {\n        var transaction = queue[i];\n        var relativePath = Path[\"a\" /* Path */].relativePath(path, transaction.path);\n        var abortTransaction = false,\n            abortReason = void 0;\n        Object(assert[\"a\" /* assert */])(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n            abortTransaction = true;\n            abortReason = transaction.abortReason;\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        } else if (transaction.status === TransactionStatus.RUN) {\n            if (transaction.retryCount >= Repo[\"a\" /* Repo */].MAX_TRANSACTION_RETRIES_) {\n                abortTransaction = true;\n                abortReason = 'maxretry';\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n            } else {\n                // This code reruns a transaction\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n                transaction.currentInputSnapshot = currentNode;\n                var newData = queue[i].update(currentNode.val());\n                if (newData !== undefined) {\n                    Object(validation[\"d\" /* validateFirebaseData */])('transaction failed: Data returned ', newData, transaction.path);\n                    var newDataNode = Object(nodeFromJSON[\"a\" /* nodeFromJSON */])(newData);\n                    var hasExplicitPriority = (typeof newData === 'undefined' ? 'undefined' : _typeof(newData)) === 'object' && newData != null && Object(obj[\"b\" /* contains */])(newData, '.priority');\n                    if (!hasExplicitPriority) {\n                        // Keep the old priority if there wasn't a priority explicitly specified.\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n                    }\n                    var oldWriteId = transaction.currentWriteId;\n                    var serverValues = this.generateServerValues();\n                    var newNodeResolved = Object(ServerValues[\"b\" /* resolveDeferredValueSnapshot */])(newDataNode, serverValues);\n                    transaction.currentOutputSnapshotRaw = newDataNode;\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\n                    transaction.currentWriteId = this.getNextWriteId_();\n                    // Mutates setsToIgnore in place\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n                } else {\n                    abortTransaction = true;\n                    abortReason = 'nodata';\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n                }\n            }\n        }\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        events = [];\n        if (abortTransaction) {\n            // Abort.\n            queue[i].status = TransactionStatus.COMPLETED;\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n            // So defer the unwatcher until we're done.\n            (function (unwatcher) {\n                setTimeout(unwatcher, Math.floor(0));\n            })(queue[i].unwatcher);\n            if (queue[i].onComplete) {\n                if (abortReason === 'nodata') {\n                    var ref = new Reference[\"a\" /* Reference */](this, queue[i].path);\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n                    var snapshot = new DataSnapshot[\"a\" /* DataSnapshot */](lastInput, ref, PriorityIndex[\"a\" /* PRIORITY_INDEX */]);\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n                } else {\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n                }\n            }\n        }\n    }\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n    // Now fire callbacks, now that we're in a good, known state.\n    for (var i = 0; i < callbacks.length; i++) {\n        Object(util[\"m\" /* exceptionGuard */])(callbacks[i]);\n    }\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.getAncestorTransactionNode_ = function (path) {\n    var front;\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n    var transactionNode = this.transactionQueueTree_;\n    while ((front = path.getFront()) !== null && transactionNode.getValue() === null) {\n        transactionNode = transactionNode.subTree(front);\n        path = path.popFront();\n    }\n    return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort(function (a, b) {\n        return a.order - b.order;\n    });\n    return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n    var nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n        for (var i = 0; i < nodeQueue.length; i++) {\n            queue.push(nodeQueue[i]);\n        }\n    }\n    node.forEachChild(function (child) {\n        _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n    var queue = node.getValue();\n    if (queue) {\n        var to = 0;\n        for (var from = 0; from < queue.length; from++) {\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\n                queue[to] = queue[from];\n                to++;\n            }\n        }\n        queue.length = to;\n        node.setValue(queue.length > 0 ? queue : null);\n    }\n    node.forEachChild(function (childNode) {\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.abortTransactions_ = function (path) {\n    var _this = this;\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\nRepo[\"a\" /* Repo */].prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n    if (queue !== null) {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        var callbacks = [];\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n        // can be immediately aborted and removed.\n        var events = [];\n        var lastSent = -1;\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                // Already marked.  No action needed.\n            } else if (queue[i].status === TransactionStatus.SENT) {\n                Object(assert[\"a\" /* assert */])(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n                lastSent = i;\n                // Mark transaction for abort when it comes back.\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n                queue[i].abortReason = 'set';\n            } else {\n                Object(assert[\"a\" /* assert */])(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\n                // We can abort it immediately.\n                queue[i].unwatcher();\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n                if (queue[i].onComplete) {\n                    var snapshot = null;\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n                }\n            }\n        }\n        if (lastSent === -1) {\n            // We're not waiting for any sent transactions.  We can clear the queue.\n            node.setValue(null);\n        } else {\n            // Remove the transactions we aborted.\n            queue.length = lastSent + 1;\n        }\n        // Now fire the callbacks.\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n        for (var i = 0; i < callbacks.length; i++) {\n            Object(util[\"m\" /* exceptionGuard */])(callbacks[i]);\n        }\n    }\n};\n// CONCATENATED MODULE: ./src/database/core/RepoManager.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RepoManager_RepoManager; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n/** @const {string} */\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\nvar RepoManager_RepoManager = /** @class */function () {\n    function RepoManager() {\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\n        this.repos_ = {};\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].interrupt();\n            }\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].resume();\n            }\n        }\n    };\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\n    RepoManager.prototype.databaseFromApp = function (app, url) {\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            Object(util[\"o\" /* fatal */])(\"Can't determine Firebase Database URL.  Be sure to include \" + DATABASE_URL_OPTION + ' option when calling firebase.intializeApp().');\n        }\n        var parsedUrl = Object(parser[\"a\" /* parseRepoInfo */])(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        Object(validation[\"k\" /* validateUrl */])('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            Object(util[\"o\" /* fatal */])('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        var appRepos = Object(obj[\"l\" /* safeGet */])(this.repos_, repo.app.name);\n        // This should never happen...\n        if (!appRepos || Object(obj[\"l\" /* safeGet */])(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n            Object(util[\"o\" /* fatal */])(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n        }\n        repo.interrupt();\n        delete appRepos[repo.repoInfo_.toURLString()];\n    };\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var appRepos = Object(obj[\"l\" /* safeGet */])(this.repos_, app.name);\n        if (!appRepos) {\n            appRepos = {};\n            this.repos_[app.name] = appRepos;\n        }\n        var repo = Object(obj[\"l\" /* safeGet */])(appRepos, repoInfo.toURLString());\n        if (repo) {\n            Object(util[\"o\" /* fatal */])('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n        }\n        repo = new Repo[\"a\" /* Repo */](repoInfo, this.useRestClient_, app);\n        appRepos[repoInfo.toURLString()] = repo;\n        return repo;\n    };\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}();\n\n\n/***/ }),\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Database; });\n/* unused harmony export DatabaseInternals */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_util_libs_parser__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util_Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_promise__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Reference__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_Repo__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_RepoManager__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_validation__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__core_util_validation__ = __webpack_require__(11);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\nvar Database = /** @class */function () {\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof __WEBPACK_IMPORTED_MODULE_5__core_Repo__[\"a\" /* Repo */])) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__core_util_util__[\"o\" /* fatal */])(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new __WEBPACK_IMPORTED_MODULE_4__Reference__[\"a\" /* Reference */](repo_, __WEBPACK_IMPORTED_MODULE_2__core_util_Path__[\"a\" /* Path */].Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function get() {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Returns a reference to the root or the path specified in opt_pathString.\r\n     * @param {string=} pathString\r\n     * @return {!Reference} Firebase reference.\r\n     */\n    Database.prototype.ref = function (pathString) {\n        this.checkDeleted_('ref');\n        Object(__WEBPACK_IMPORTED_MODULE_7__utils_validation__[\"b\" /* validateArgCount */])('database.ref', 0, 1, arguments.length);\n        return pathString !== undefined ? this.root_.child(pathString) : this.root_;\n    };\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        Object(__WEBPACK_IMPORTED_MODULE_7__utils_validation__[\"b\" /* validateArgCount */])(apiName, 1, 1, arguments.length);\n        var parsedURL = Object(__WEBPACK_IMPORTED_MODULE_1__core_util_libs_parser__[\"a\" /* parseRepoInfo */])(url);\n        Object(__WEBPACK_IMPORTED_MODULE_8__core_util_validation__[\"k\" /* validateUrl */])(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__core_util_util__[\"o\" /* fatal */])(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\r\n     * @param {string} apiName\r\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__core_util_util__[\"o\" /* fatal */])('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_7__utils_validation__[\"b\" /* validateArgCount */])('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_7__utils_validation__[\"b\" /* validateArgCount */])('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}();\n\nvar DatabaseInternals = /** @class */function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        this.database.checkDeleted_('delete');\n        __WEBPACK_IMPORTED_MODULE_6__core_RepoManager__[\"a\" /* RepoManager */].getInstance().deleteRepo(this.database.repo_);\n        this.database.repo_ = null;\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return __WEBPACK_IMPORTED_MODULE_3__utils_promise__[\"b\" /* PromiseImpl */].resolve();\n    };\n    return DatabaseInternals;\n}();\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return parseRepoInfo; });\n/* unused harmony export parseURL */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RepoInfo__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(1);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            } catch (e) {}\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\nvar parseRepoInfo = function parseRepoInfo(dataURL) {\n    var parsedUrl = parseURL(dataURL),\n        namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"o\" /* fatal */])(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if (!namespace || namespace == 'undefined') {\n        Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"o\" /* fatal */])('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        Object(__WEBPACK_IMPORTED_MODULE_2__util__[\"C\" /* warnIfPageIsSecure */])();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new __WEBPACK_IMPORTED_MODULE_1__RepoInfo__[\"a\" /* RepoInfo */](parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new __WEBPACK_IMPORTED_MODULE_0__Path__[\"a\" /* Path */](parsedUrl.pathString)\n    };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\nvar parseURL = function parseURL(dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '',\n        domain = '',\n        subdomain = '',\n        pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true,\n        scheme = 'https',\n        port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host and path.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        host = dataURL.substring(0, slashInd);\n        pathString = decodePath(dataURL.substring(slashInd));\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        } else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RepoInfo; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_obj__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__storage_storage__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__realtime_Constants__ = __webpack_require__(19);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\nvar RepoInfo = /** @class */function () {\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) {\n            persistenceKey = '';\n        }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = __WEBPACK_IMPORTED_MODULE_2__storage_storage__[\"a\" /* PersistentStorage */].get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost;\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                __WEBPACK_IMPORTED_MODULE_2__storage_storage__[\"a\" /* PersistentStorage */].set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(typeof type === 'string', 'typeof type must == string');\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === __WEBPACK_IMPORTED_MODULE_3__realtime_Constants__[\"i\" /* WEBSOCKET */]) {\n            connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        } else if (type === __WEBPACK_IMPORTED_MODULE_3__realtime_Constants__[\"d\" /* LONG_POLLING */]) {\n            connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        } else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        Object(__WEBPACK_IMPORTED_MODULE_1__utils_obj__[\"f\" /* forEach */])(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}();\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/KeyIndex.ts\nvar KeyIndex = __webpack_require__(15);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PriorityIndex.ts\nvar PriorityIndex = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/ValueIndex.ts\nvar ValueIndex = __webpack_require__(41);\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PathIndex.ts\nvar PathIndex = __webpack_require__(45);\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./src/database/core/util/validation.ts\nvar validation = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/utils/validation.ts\nvar utils_validation = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/database/api/DataSnapshot.ts\nvar DataSnapshot = __webpack_require__(46);\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// CONCATENATED MODULE: ./src/database/core/view/Event.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\nvar Event_DataEvent = /** @class */function () {\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        } else {\n            return ref.getParent().path;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    DataEvent.prototype.toString = function () {\n        return this.getPath().toString() + ':' + this.eventType + ':' + Object(json[\"b\" /* stringify */])(this.snapshot.exportVal());\n    };\n    return DataEvent;\n}();\n\nvar CancelEvent = /** @class */function () {\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}();\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar utils_obj = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/database/core/view/EventRegistration.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * Represents registration for 'value' events.\r\n */\nvar EventRegistration_ValueEventRegistration = /** @class */function () {\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\n        this.callback_ = callback_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\n        return eventType === 'value';\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\n        var index = query.getQueryParams().getIndex();\n        return new Event_DataEvent('value', this, new DataSnapshot[\"a\" /* DataSnapshot */](change.snapshotNode, query.getRef(), index));\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            Object(assert[\"a\" /* assert */])(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_1 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_1.call(ctx, eventData.error);\n            };\n        } else {\n            var cb_1 = this.callback_;\n            return function () {\n                cb_1.call(ctx, eventData.snapshot);\n            };\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new CancelEvent(this, error, path);\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.matches = function (other) {\n        if (!(other instanceof ValueEventRegistration)) {\n            return false;\n        } else if (!other.callback_ || !this.callback_) {\n            // If no callback specified, we consider it to match any callback.\n            return true;\n        } else {\n            return other.callback_ === this.callback_ && other.context_ === this.context_;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callback_ !== null;\n    };\n    return ValueEventRegistration;\n}();\n\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\nvar EventRegistration_ChildEventRegistration = /** @class */function () {\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n        this.callbacks_ = callbacks_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n        eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n        return Object(utils_obj[\"b\" /* contains */])(this.callbacks_, eventToCheck);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new CancelEvent(this, error, path);\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\n        Object(assert[\"a\" /* assert */])(change.childName != null, 'Child events should have a childName.');\n        var ref = query.getRef().child /** @type {!string} */(change.childName);\n        var index = query.getQueryParams().getIndex();\n        return new Event_DataEvent(change.type, this, new DataSnapshot[\"a\" /* DataSnapshot */](change.snapshotNode, ref, index), change.prevName);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            Object(assert[\"a\" /* assert */])(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_2 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_2.call(ctx, eventData.error);\n            };\n        } else {\n            var cb_2 = this.callbacks_[eventData.eventType];\n            return function () {\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n            };\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.matches = function (other) {\n        if (other instanceof ChildEventRegistration) {\n            if (!this.callbacks_ || !other.callbacks_) {\n                return true;\n            } else if (this.context_ === other.context_) {\n                var otherCount = Object(utils_obj[\"h\" /* getCount */])(other.callbacks_);\n                var thisCount = Object(utils_obj[\"h\" /* getCount */])(this.callbacks_);\n                if (otherCount === thisCount) {\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n                    //  If event types don't match, not a match\n                    // If count is not 1, exact match across all\n                    if (otherCount === 1) {\n                        var otherKey /** @type {!string} */ = Object(utils_obj[\"g\" /* getAnyKey */])(other.callbacks_);\n                        var thisKey /** @type {!string} */ = Object(utils_obj[\"g\" /* getAnyKey */])(this.callbacks_);\n                        return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n                    } else {\n                        // Exact match on each key.\n                        return Object(utils_obj[\"c\" /* every */])(this.callbacks_, function (eventType, cb) {\n                            return other.callbacks_[eventType] === cb;\n                        });\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callbacks_ !== null;\n    };\n    return ChildEventRegistration;\n}();\n\n// EXTERNAL MODULE: ./src/utils/promise.ts\nvar promise = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/database/api/Query.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Query_Query; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\nvar Query_Query = /** @class */function () {\n    function Query(repo, path, queryParams_, orderByCalled_) {\n        this.repo = repo;\n        this.path = path;\n        this.queryParams_ = queryParams_;\n        this.orderByCalled_ = orderByCalled_;\n    }\n    Object.defineProperty(Query, \"__referenceConstructor\", {\n        get: function get() {\n            Object(assert[\"a\" /* assert */])(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function set(val) {\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\n    Query.validateQueryEndpoints_ = function (params) {\n        var startNode = null;\n        var endNode = null;\n        if (params.hasStart()) {\n            startNode = params.getIndexStartValue();\n        }\n        if (params.hasEnd()) {\n            endNode = params.getIndexEndValue();\n        }\n        if (params.getIndex() === KeyIndex[\"a\" /* KEY_INDEX */]) {\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n            if (params.hasStart()) {\n                var startName = params.getIndexStartName();\n                if (startName != util[\"c\" /* MIN_NAME */]) {\n                    throw new Error(tooManyArgsError);\n                } else if (typeof startNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n            if (params.hasEnd()) {\n                var endName = params.getIndexEndName();\n                if (endName != util[\"b\" /* MAX_NAME */]) {\n                    throw new Error(tooManyArgsError);\n                } else if (typeof endNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n        } else if (params.getIndex() === PriorityIndex[\"a\" /* PRIORITY_INDEX */]) {\n            if (startNode != null && !Object(validation[\"a\" /* isValidPriority */])(startNode) || endNode != null && !Object(validation[\"a\" /* isValidPriority */])(endNode)) {\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n            }\n        } else {\n            Object(assert[\"a\" /* assert */])(params.getIndex() instanceof PathIndex[\"a\" /* PathIndex */] || params.getIndex() === ValueIndex[\"a\" /* VALUE_INDEX */], 'unknown index type.');\n            if (startNode != null && (typeof startNode === 'undefined' ? 'undefined' : _typeof(startNode)) === 'object' || endNode != null && (typeof endNode === 'undefined' ? 'undefined' : _typeof(endNode)) === 'object') {\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n            }\n        }\n    };\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\n    Query.validateLimit_ = function (params) {\n        if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n        }\n    };\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n        if (this.orderByCalled_ === true) {\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n        }\n    };\n    /**\r\n     * @return {!QueryParams}\r\n     */\n    Query.prototype.getQueryParams = function () {\n        return this.queryParams_;\n    };\n    /**\r\n     * @return {!Reference}\r\n     */\n    Query.prototype.getRef = function () {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.ref', 0, 0, arguments.length);\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n        // method gets called.\n        return new Query.__referenceConstructor(this.repo, this.path);\n    };\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.on', 2, 4, arguments.length);\n        Object(validation[\"c\" /* validateEventType */])('Query.on', 1, eventType, false);\n        Object(utils_validation[\"c\" /* validateCallback */])('Query.on', 2, callback, false);\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n        if (eventType === 'value') {\n            this.onValueEvent(callback, ret.cancel, ret.context);\n        } else {\n            var callbacks = {};\n            callbacks[eventType] = callback;\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\n        }\n        return callback;\n    };\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n        var container = new EventRegistration_ValueEventRegistration(callback, cancelCallback || null, context || null);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n        var container = new EventRegistration_ChildEventRegistration(callbacks, cancelCallback, context);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\n    Query.prototype.off = function (eventType, callback, context) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.off', 0, 3, arguments.length);\n        Object(validation[\"c\" /* validateEventType */])('Query.off', 1, eventType, true);\n        Object(utils_validation[\"c\" /* validateCallback */])('Query.off', 2, callback, true);\n        Object(utils_validation[\"d\" /* validateContextObject */])('Query.off', 3, context, true);\n        var container = null;\n        var callbacks = null;\n        if (eventType === 'value') {\n            var valueCallback = callback || null;\n            container = new EventRegistration_ValueEventRegistration(valueCallback, null, context || null);\n        } else if (eventType) {\n            if (callback) {\n                callbacks = {};\n                callbacks[eventType] = callback;\n            }\n            container = new EventRegistration_ChildEventRegistration(callbacks, null, context || null);\n        }\n        this.repo.removeEventCallbackForQuery(this, container);\n    };\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n        var _this = this;\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.once', 1, 4, arguments.length);\n        Object(validation[\"c\" /* validateEventType */])('Query.once', 1, eventType, false);\n        Object(utils_validation[\"c\" /* validateCallback */])('Query.once', 2, userCallback, true);\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n        // against the Promise specification.\n        var firstCall = true;\n        var deferred = new promise[\"a\" /* Deferred */]();\n        Object(promise[\"c\" /* attachDummyErrorHandler */])(deferred.promise);\n        var onceCallback = function onceCallback(snapshot) {\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n            // triggers multiple events (e.g. child_added or child_changed).\n            if (firstCall) {\n                firstCall = false;\n                _this.off(eventType, onceCallback);\n                if (userCallback) {\n                    userCallback.bind(ret.context)(snapshot);\n                }\n                deferred.resolve(snapshot);\n            }\n        };\n        this.on(eventType, onceCallback,\n        /*cancel=*/function (err) {\n            _this.off(eventType, onceCallback);\n            if (ret.cancel) ret.cancel.bind(ret.context)(err);\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    };\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\n    Query.prototype.limitToFirst = function (limit) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.limitToFirst', 1, 1, arguments.length);\n        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n    };\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\n    Query.prototype.limitToLast = function (limit) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.limitToLast', 1, 1, arguments.length);\n        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n    };\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\n    Query.prototype.orderByChild = function (path) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.orderByChild', 1, 1, arguments.length);\n        if (path === '$key') {\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n        } else if (path === '$priority') {\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n        } else if (path === '$value') {\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n        }\n        Object(validation[\"h\" /* validatePathString */])('Query.orderByChild', 1, path, false);\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\n        var parsedPath = new Path[\"a\" /* Path */](path);\n        if (parsedPath.isEmpty()) {\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n        }\n        var index = new PathIndex[\"a\" /* PathIndex */](parsedPath);\n        var newParams = this.queryParams_.orderBy(index);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\n    Query.prototype.orderByKey = function () {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.orderByKey', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\n        var newParams = this.queryParams_.orderBy(KeyIndex[\"a\" /* KEY_INDEX */]);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\n    Query.prototype.orderByPriority = function () {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.orderByPriority', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n        var newParams = this.queryParams_.orderBy(PriorityIndex[\"a\" /* PRIORITY_INDEX */]);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\n    Query.prototype.orderByValue = function () {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.orderByValue', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\n        var newParams = this.queryParams_.orderBy(ValueIndex[\"a\" /* VALUE_INDEX */]);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);\n    };\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\n    Query.prototype.startAt = function (value, name) {\n        if (value === void 0) {\n            value = null;\n        }\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.startAt', 0, 2, arguments.length);\n        Object(validation[\"e\" /* validateFirebaseDataArg */])('Query.startAt', 1, value, this.path, true);\n        Object(validation[\"g\" /* validateKey */])('Query.startAt', 2, name, true);\n        var newParams = this.queryParams_.startAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n        }\n        // Calling with no params tells us to start at the beginning.\n        if (value === undefined) {\n            value = null;\n            name = null;\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\n    Query.prototype.endAt = function (value, name) {\n        if (value === void 0) {\n            value = null;\n        }\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.endAt', 0, 2, arguments.length);\n        Object(validation[\"e\" /* validateFirebaseDataArg */])('Query.endAt', 1, value, this.path, true);\n        Object(validation[\"g\" /* validateKey */])('Query.endAt', 2, name, true);\n        var newParams = this.queryParams_.endAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\n    Query.prototype.equalTo = function (value, name) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.equalTo', 1, 2, arguments.length);\n        Object(validation[\"e\" /* validateFirebaseDataArg */])('Query.equalTo', 1, value, this.path, false);\n        Object(validation[\"g\" /* validateKey */])('Query.equalTo', 2, name, true);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n        }\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n        }\n        return this.startAt(value, name).endAt(value, name);\n    };\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\n    Query.prototype.toString = function () {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.toString', 0, 0, arguments.length);\n        return this.repo.toString() + this.path.toUrlEncodedString();\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n    Query.prototype.toJSON = function () {\n        // An optional spacer argument is unnecessary for a string.\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.toJSON', 0, 1, arguments.length);\n        return this.toString();\n    };\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\n    Query.prototype.queryObject = function () {\n        return this.queryParams_.getQueryObject();\n    };\n    /**\r\n     * @return {!string}\r\n     */\n    Query.prototype.queryIdentifier = function () {\n        var obj = this.queryObject();\n        var id = Object(util[\"d\" /* ObjectToUniqueKey */])(obj);\n        return id === '{}' ? 'default' : id;\n    };\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\n    Query.prototype.isEqual = function (other) {\n        Object(utils_validation[\"b\" /* validateArgCount */])('Query.isEqual', 1, 1, arguments.length);\n        if (!(other instanceof Query)) {\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n            throw new Error(error);\n        }\n        var sameRepo = this.repo === other.repo;\n        var samePath = this.path.equals(other.path);\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n        return sameRepo && samePath && sameQueryIdentifier;\n    };\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n        var ret = { cancel: null, context: null };\n        if (cancelOrContext && context) {\n            ret.cancel = cancelOrContext;\n            Object(utils_validation[\"c\" /* validateCallback */])(fnName, 3, ret.cancel, true);\n            ret.context = context;\n            Object(utils_validation[\"d\" /* validateContextObject */])(fnName, 4, ret.context, true);\n        } else if (cancelOrContext) {\n            // we have either a cancel callback or a context.\n            if ((typeof cancelOrContext === 'undefined' ? 'undefined' : _typeof(cancelOrContext)) === 'object' && cancelOrContext !== null) {\n                // it's a context!\n                ret.context = cancelOrContext;\n            } else if (typeof cancelOrContext === 'function') {\n                ret.cancel = cancelOrContext;\n            } else {\n                throw new Error(Object(utils_validation[\"a\" /* errorPrefix */])(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Query.prototype, \"ref\", {\n        get: function get() {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}();\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = setMaxNode;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return priorityHashText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return validatePriorityNode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_obj__ = __webpack_require__(2);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\nvar MAX_NODE;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\nvar priorityHashText = function priorityHashText(priority) {\n    if (typeof priority === 'number') return 'number:' + Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"h\" /* doubleToIEEE754String */])(priority);else return 'string:' + priority;\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n    if (priorityNode.isLeafNode()) {\n        var val = priorityNode.val();\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(typeof val === 'string' || typeof val === 'number' || (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"b\" /* contains */])(val, '.sv'), 'Priority must be a string or number.');\n    } else {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n    }\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n    Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ValueIndex */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return VALUE_INDEX; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Index__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__nodeFromJSON__ = __webpack_require__(16);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\nvar ValueIndex = /** @class */function (_super) {\n    __extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return Object(__WEBPACK_IMPORTED_MODULE_2__util_util__[\"v\" /* nameCompare */])(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueIndex.prototype.minPost = function () {\n        return __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */].MIN;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */].MAX;\n    };\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = Object(__WEBPACK_IMPORTED_MODULE_3__nodeFromJSON__[\"a\" /* nodeFromJSON */])(indexValue);\n        return new __WEBPACK_IMPORTED_MODULE_1__Node__[\"a\" /* NamedNode */](name, valueNode);\n    };\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(__WEBPACK_IMPORTED_MODULE_0__Index__[\"a\" /* Index */]);\n\nvar VALUE_INDEX = new ValueIndex();\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return IndexMap; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__childSet__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_obj__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__indexes_PriorityIndex__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__indexes_KeyIndex__ = __webpack_require__(15);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\nvar _defaultIndexMap;\nvar fallbackObject = {};\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\nvar IndexMap = /** @class */function () {\n    function IndexMap(indexes_, indexSet_) {\n        this.indexes_ = indexes_;\n        this.indexSet_ = indexSet_;\n    }\n    Object.defineProperty(IndexMap, \"Default\", {\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\n        get: function get() {\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(fallbackObject && __WEBPACK_IMPORTED_MODULE_4__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], 'ChildrenNode.ts has not been loaded');\n            _defaultIndexMap = _defaultIndexMap || new IndexMap({ '.priority': fallbackObject }, { '.priority': __WEBPACK_IMPORTED_MODULE_4__indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */] });\n            return _defaultIndexMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\n    IndexMap.prototype.get = function (indexKey) {\n        var sortedMap = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"l\" /* safeGet */])(this.indexes_, indexKey);\n        if (!sortedMap) throw new Error('No index defined for ' + indexKey);\n        if (sortedMap === fallbackObject) {\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n            // regular child map\n            return null;\n        } else {\n            return sortedMap;\n        }\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\n        return Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"b\" /* contains */])(this.indexSet_, indexDefinition.toString());\n    };\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(indexDefinition !== __WEBPACK_IMPORTED_MODULE_5__indexes_KeyIndex__[\"a\" /* KEY_INDEX */], \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n        var childList = [];\n        var sawIndexedValue = false;\n        var iter = existingChildren.getIterator(__WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */].Wrap);\n        var next = iter.getNext();\n        while (next) {\n            sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n            childList.push(next);\n            next = iter.getNext();\n        }\n        var newIndex;\n        if (sawIndexedValue) {\n            newIndex = Object(__WEBPACK_IMPORTED_MODULE_1__childSet__[\"a\" /* buildChildSet */])(childList, indexDefinition.getCompare());\n        } else {\n            newIndex = fallbackObject;\n        }\n        var indexName = indexDefinition.toString();\n        var newIndexSet = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"a\" /* clone */])(this.indexSet_);\n        newIndexSet[indexName] = indexDefinition;\n        var newIndexes = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"a\" /* clone */])(this.indexes_);\n        newIndexes[indexName] = newIndex;\n        return new IndexMap(newIndexes, newIndexSet);\n    };\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n        var _this = this;\n        var newIndexes = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"k\" /* map */])(this.indexes_, function (indexedChildren, indexName) {\n            var index = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"l\" /* safeGet */])(_this.indexSet_, indexName);\n            Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(index, 'Missing index implementation for ' + indexName);\n            if (indexedChildren === fallbackObject) {\n                // Check to see if we need to index everything\n                if (index.isDefinedOn(namedNode.node)) {\n                    // We need to build this index\n                    var childList = [];\n                    var iter = existingChildren.getIterator(__WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */].Wrap);\n                    var next = iter.getNext();\n                    while (next) {\n                        if (next.name != namedNode.name) {\n                            childList.push(next);\n                        }\n                        next = iter.getNext();\n                    }\n                    childList.push(namedNode);\n                    return Object(__WEBPACK_IMPORTED_MODULE_1__childSet__[\"a\" /* buildChildSet */])(childList, index.getCompare());\n                } else {\n                    // No change, this remains a fallback\n                    return fallbackObject;\n                }\n            } else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                var newChildren = indexedChildren;\n                if (existingSnap) {\n                    newChildren = newChildren.remove(new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](namedNode.name, existingSnap));\n                }\n                return newChildren.insert(namedNode, namedNode.node);\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n        var newIndexes = Object(__WEBPACK_IMPORTED_MODULE_2__utils_obj__[\"k\" /* map */])(this.indexes_, function (indexedChildren) {\n            if (indexedChildren === fallbackObject) {\n                // This is the fallback. Just return it, nothing to do in this case\n                return indexedChildren;\n            } else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                if (existingSnap) {\n                    return indexedChildren.remove(new __WEBPACK_IMPORTED_MODULE_3__Node__[\"a\" /* NamedNode */](namedNode.name, existingSnap));\n                } else {\n                    // No record of this child\n                    return indexedChildren;\n                }\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    return IndexMap;\n}();\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return buildChildSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__ = __webpack_require__(22);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\nvar Base12Num = /** @class */function () {\n    /**\r\n     * @param {number} length\r\n     */\n    function Base12Num(length) {\n        var logBase2 = function logBase2(num) {\n            return parseInt(Math.log(num) / LOG_2, 10);\n        };\n        var bitMask = function bitMask(bits) {\n            return parseInt(Array(bits + 1).join('1'), 2);\n        };\n        this.count = logBase2(length + 1);\n        this.current_ = this.count - 1;\n        var mask = bitMask(this.count);\n        this.bits_ = length + 1 & mask;\n    }\n    /**\r\n     * @return {boolean}\r\n     */\n    Base12Num.prototype.nextBitIsOne = function () {\n        //noinspection JSBitwiseOperatorUsage\n        var result = !(this.bits_ & 0x1 << this.current_);\n        this.current_--;\n        return result;\n    };\n    return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n    childList.sort(cmp);\n    var buildBalancedTree = function buildBalancedTree(low, high) {\n        var length = high - low;\n        var namedNode;\n        var key;\n        if (length == 0) {\n            return null;\n        } else if (length == 1) {\n            namedNode = childList[low];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */](key, namedNode.node, __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */].BLACK, null, null);\n        } else {\n            var middle = parseInt(length / 2, 10) + low;\n            var left = buildBalancedTree(low, middle);\n            var right = buildBalancedTree(middle + 1, high);\n            namedNode = childList[middle];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */](key, namedNode.node, __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */].BLACK, left, right);\n        }\n    };\n    var buildFrom12Array = function buildFrom12Array(base12) {\n        var node = null;\n        var root = null;\n        var index = childList.length;\n        var buildPennant = function buildPennant(chunkSize, color) {\n            var low = index - chunkSize;\n            var high = index;\n            index -= chunkSize;\n            var childTree = buildBalancedTree(low + 1, high);\n            var namedNode = childList[low];\n            var key = keyFn ? keyFn(namedNode) : namedNode;\n            attachPennant(new __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */](key, namedNode.node, color, null, childTree));\n        };\n        var attachPennant = function attachPennant(pennant) {\n            if (node) {\n                node.left = pennant;\n                node = pennant;\n            } else {\n                root = pennant;\n                node = pennant;\n            }\n        };\n        for (var i = 0; i < base12.count; ++i) {\n            var isOne = base12.nextBitIsOne();\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\n            if (isOne) {\n                buildPennant(chunkSize, __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */].BLACK);\n            } else {\n                // current == 2\n                buildPennant(chunkSize, __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */].BLACK);\n                buildPennant(chunkSize, __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"a\" /* LLRBNode */].RED);\n            }\n        }\n        return root;\n    };\n    var base12 = new Base12Num(childList.length);\n    var root = buildFrom12Array(base12);\n    return new __WEBPACK_IMPORTED_MODULE_0__util_SortedMap__[\"b\" /* SortedMap */](mapSortFn || cmp, root);\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = NAME_ONLY_COMPARATOR;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NAME_COMPARATOR;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util__ = __webpack_require__(1);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"v\" /* nameCompare */])(left.name, right.name);\n}\nfunction NAME_COMPARATOR(left, right) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"v\" /* nameCompare */])(left, right);\n}\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PathIndex; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Index__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ChildrenNode__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Node__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__nodeFromJSON__ = __webpack_require__(16);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\nvar PathIndex = /** @class */function (_super) {\n    __extends(PathIndex, _super);\n    function PathIndex(indexPath_) {\n        var _this = _super.call(this) || this;\n        _this.indexPath_ = indexPath_;\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n        return _this;\n    }\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\n    PathIndex.prototype.extractChild = function (snap) {\n        return snap.getChild(this.indexPath_);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PathIndex.prototype.isDefinedOn = function (node) {\n        return !node.getChild(this.indexPath_).isEmpty();\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PathIndex.prototype.compare = function (a, b) {\n        var aChild = this.extractChild(a.node);\n        var bChild = this.extractChild(b.node);\n        var indexCmp = aChild.compareTo(bChild);\n        if (indexCmp === 0) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__util_util__[\"v\" /* nameCompare */])(a.name, b.name);\n        } else {\n            return indexCmp;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PathIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = Object(__WEBPACK_IMPORTED_MODULE_5__nodeFromJSON__[\"a\" /* nodeFromJSON */])(indexValue);\n        var node = __WEBPACK_IMPORTED_MODULE_3__ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n        return new __WEBPACK_IMPORTED_MODULE_4__Node__[\"a\" /* NamedNode */](name, node);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PathIndex.prototype.maxPost = function () {\n        var node = __WEBPACK_IMPORTED_MODULE_3__ChildrenNode__[\"a\" /* ChildrenNode */].EMPTY_NODE.updateChild(this.indexPath_, __WEBPACK_IMPORTED_MODULE_3__ChildrenNode__[\"b\" /* MAX_NODE */]);\n        return new __WEBPACK_IMPORTED_MODULE_4__Node__[\"a\" /* NamedNode */](__WEBPACK_IMPORTED_MODULE_1__util_util__[\"b\" /* MAX_NAME */], node);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PathIndex.prototype.toString = function () {\n        return this.indexPath_.slice().join('/');\n    };\n    return PathIndex;\n}(__WEBPACK_IMPORTED_MODULE_2__Index__[\"a\" /* Index */]);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DataSnapshot; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_validation__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_util_validation__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util_Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_snap_indexes_PriorityIndex__ = __webpack_require__(5);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\nvar DataSnapshot = /** @class */function () {\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\n    DataSnapshot.prototype.val = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\n    DataSnapshot.prototype.exists = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        Object(__WEBPACK_IMPORTED_MODULE_1__core_util_validation__[\"h\" /* validatePathString */])('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new __WEBPACK_IMPORTED_MODULE_2__core_util_Path__[\"a\" /* Path */](childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, __WEBPACK_IMPORTED_MODULE_3__core_snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */]);\n    };\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.hasChild', 1, 1, arguments.length);\n        Object(__WEBPACK_IMPORTED_MODULE_1__core_util_validation__[\"h\" /* validatePathString */])('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new __WEBPACK_IMPORTED_MODULE_2__core_util_Path__[\"a\" /* Path */](childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.forEach', 1, 1, arguments.length);\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"c\" /* validateCallback */])('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode()) return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), __WEBPACK_IMPORTED_MODULE_3__core_snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */]));\n        });\n    };\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode()) return false;else return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function get() {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\n    DataSnapshot.prototype.getRef = function () {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_validation__[\"b\" /* validateArgCount */])('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function get() {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}();\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return generateWithValues; });\n/* unused harmony export resolveDeferredValue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return resolveDeferredValueTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return resolveDeferredValueSnapshot; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__SparseSnapshotTree__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__snap_LeafNode__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__snap_nodeFromJSON__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__snap_indexes_PriorityIndex__ = __webpack_require__(5);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\nvar generateWithValues = function generateWithValues(values) {\n    values = values || {};\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\n    return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\nvar resolveDeferredValue = function resolveDeferredValue(value, serverValues) {\n    if (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n        return value;\n    } else {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_assert__[\"a\" /* assert */])('.sv' in value, 'Unexpected leaf node or priority contents');\n        return serverValues[value['.sv']];\n    }\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\nvar resolveDeferredValueTree = function resolveDeferredValueTree(tree, serverValues) {\n    var resolvedTree = new __WEBPACK_IMPORTED_MODULE_2__SparseSnapshotTree__[\"a\" /* SparseSnapshotTree */]();\n    tree.forEachTree(new __WEBPACK_IMPORTED_MODULE_1__Path__[\"a\" /* Path */](''), function (path, node) {\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\n    });\n    return resolvedTree;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, serverValues) {\n    var rawPri = node.getPriority().val();\n    var priority = resolveDeferredValue(rawPri, serverValues);\n    var newNode;\n    if (node.isLeafNode()) {\n        var leafNode = node;\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\n        if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n            return new __WEBPACK_IMPORTED_MODULE_3__snap_LeafNode__[\"a\" /* LeafNode */](value, Object(__WEBPACK_IMPORTED_MODULE_4__snap_nodeFromJSON__[\"a\" /* nodeFromJSON */])(priority));\n        } else {\n            return node;\n        }\n    } else {\n        var childrenNode = node;\n        newNode = childrenNode;\n        if (priority !== childrenNode.getPriority().val()) {\n            newNode = newNode.updatePriority(new __WEBPACK_IMPORTED_MODULE_3__snap_LeafNode__[\"a\" /* LeafNode */](priority));\n        }\n        childrenNode.forEachChild(__WEBPACK_IMPORTED_MODULE_5__snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (childName, childNode) {\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\n            if (newChildNode !== childNode) {\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\n            }\n        });\n        return newNode;\n    }\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SparseSnapshotTree; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_Path__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__snap_indexes_PriorityIndex__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_CountedSet__ = __webpack_require__(49);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\nvar SparseSnapshotTree = /** @class */function () {\n    function SparseSnapshotTree() {\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\n        this.value_ = null;\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\n        this.children_ = null;\n    }\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\n    SparseSnapshotTree.prototype.find = function (path) {\n        if (this.value_ != null) {\n            return this.value_.getChild(path);\n        } else if (!path.isEmpty() && this.children_ != null) {\n            var childKey = path.getFront();\n            path = path.popFront();\n            if (this.children_.contains(childKey)) {\n                var childTree = this.children_.get(childKey);\n                return childTree.find(path);\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    };\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\n    SparseSnapshotTree.prototype.remember = function (path, data) {\n        if (path.isEmpty()) {\n            this.value_ = data;\n            this.children_ = null;\n        } else if (this.value_ !== null) {\n            this.value_ = this.value_.updateChild(path, data);\n        } else {\n            if (this.children_ == null) {\n                this.children_ = new __WEBPACK_IMPORTED_MODULE_2__util_CountedSet__[\"a\" /* CountedSet */]();\n            }\n            var childKey = path.getFront();\n            if (!this.children_.contains(childKey)) {\n                this.children_.add(childKey, new SparseSnapshotTree());\n            }\n            var child = this.children_.get(childKey);\n            path = path.popFront();\n            child.remember(path, data);\n        }\n    };\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\n    SparseSnapshotTree.prototype.forget = function (path) {\n        if (path.isEmpty()) {\n            this.value_ = null;\n            this.children_ = null;\n            return true;\n        } else {\n            if (this.value_ !== null) {\n                if (this.value_.isLeafNode()) {\n                    // We're trying to forget a node that doesn't exist\n                    return false;\n                } else {\n                    var value = this.value_;\n                    this.value_ = null;\n                    var self_1 = this;\n                    value.forEachChild(__WEBPACK_IMPORTED_MODULE_1__snap_indexes_PriorityIndex__[\"a\" /* PRIORITY_INDEX */], function (key, tree) {\n                        self_1.remember(new __WEBPACK_IMPORTED_MODULE_0__util_Path__[\"a\" /* Path */](key), tree);\n                    });\n                    return this.forget(path);\n                }\n            } else if (this.children_ !== null) {\n                var childKey = path.getFront();\n                path = path.popFront();\n                if (this.children_.contains(childKey)) {\n                    var safeToRemove = this.children_.get(childKey).forget(path);\n                    if (safeToRemove) {\n                        this.children_.remove(childKey);\n                    }\n                }\n                if (this.children_.isEmpty()) {\n                    this.children_ = null;\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return true;\n            }\n        }\n    };\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n        if (this.value_ !== null) {\n            func(prefixPath, this.value_);\n        } else {\n            this.forEachChild(function (key, tree) {\n                var path = new __WEBPACK_IMPORTED_MODULE_0__util_Path__[\"a\" /* Path */](prefixPath.toString() + '/' + key);\n                tree.forEachTree(path, func);\n            });\n        }\n    };\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\n        if (this.children_ !== null) {\n            this.children_.each(function (key, tree) {\n                func(key, tree);\n            });\n        }\n    };\n    return SparseSnapshotTree;\n}();\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CountedSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_obj__ = __webpack_require__(2);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\nvar CountedSet = /** @class */function () {\n    function CountedSet() {\n        this.set = {};\n    }\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\n    CountedSet.prototype.add = function (item, val) {\n        this.set[item] = val !== null ? val : true;\n    };\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\n    CountedSet.prototype.contains = function (key) {\n        return Object(__WEBPACK_IMPORTED_MODULE_0__utils_obj__[\"b\" /* contains */])(this.set, key);\n    };\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\n    CountedSet.prototype.get = function (item) {\n        return this.contains(item) ? this.set[item] : undefined;\n    };\n    /**\r\n     * @param {!K} item\r\n     */\n    CountedSet.prototype.remove = function (item) {\n        delete this.set[item];\n    };\n    /**\r\n     * Deletes everything in the set\r\n     */\n    CountedSet.prototype.clear = function () {\n        this.set = {};\n    };\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\n    CountedSet.prototype.isEmpty = function () {\n        return Object(__WEBPACK_IMPORTED_MODULE_0__utils_obj__[\"j\" /* isEmpty */])(this.set);\n    };\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\n    CountedSet.prototype.count = function () {\n        return Object(__WEBPACK_IMPORTED_MODULE_0__utils_obj__[\"h\" /* getCount */])(this.set);\n    };\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\n    CountedSet.prototype.each = function (fn) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_obj__[\"f\" /* forEach */])(this.set, function (k, v) {\n            return fn(k, v);\n        });\n    };\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\n    CountedSet.prototype.keys = function () {\n        var keys = [];\n        Object(__WEBPACK_IMPORTED_MODULE_0__utils_obj__[\"f\" /* forEach */])(this.set, function (k) {\n            keys.push(k);\n        });\n        return keys;\n    };\n    return CountedSet;\n}();\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// CONCATENATED MODULE: ./src/database/core/view/CacheNode.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\nvar CacheNode = /** @class */function () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n  return CacheNode;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/ChildrenNode.ts\nvar ChildrenNode = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/database/core/view/ViewCache.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\nvar ViewCache_ViewCache = /** @class */function () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE,\n  /*fullyInitialized=*/false,\n  /*filtered=*/false), new CacheNode(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE,\n  /*fullyInitialized=*/false,\n  /*filtered=*/false));\n  return ViewCache;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/view/filter/IndexedFilter.ts\nvar IndexedFilter = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./src/database/core/operation/Operation.ts\nvar Operation = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/database/core/view/Change.ts\nvar Change = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/database/core/view/ChildChangeAccumulator.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * @constructor\r\n */\nvar ChildChangeAccumulator_ChildChangeAccumulator = /** @class */function () {\n    function ChildChangeAccumulator() {\n        this.changeMap_ = {};\n    }\n    /**\r\n     * @param {!Change} change\r\n     */\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n        var type = change.type;\n        var childKey /** @type {!string} */ = change.childName;\n        Object(assert[\"a\" /* assert */])(type == Change[\"a\" /* Change */].CHILD_ADDED || type == Change[\"a\" /* Change */].CHILD_CHANGED || type == Change[\"a\" /* Change */].CHILD_REMOVED, 'Only child changes supported for tracking');\n        Object(assert[\"a\" /* assert */])(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n        var oldChange = Object(obj[\"l\" /* safeGet */])(this.changeMap_, childKey);\n        if (oldChange) {\n            var oldType = oldChange.type;\n            if (type == Change[\"a\" /* Change */].CHILD_ADDED && oldType == Change[\"a\" /* Change */].CHILD_REMOVED) {\n                this.changeMap_[childKey] = Change[\"a\" /* Change */].childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n            } else if (type == Change[\"a\" /* Change */].CHILD_REMOVED && oldType == Change[\"a\" /* Change */].CHILD_ADDED) {\n                delete this.changeMap_[childKey];\n            } else if (type == Change[\"a\" /* Change */].CHILD_REMOVED && oldType == Change[\"a\" /* Change */].CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change[\"a\" /* Change */].childRemovedChange(childKey, oldChange.oldSnap);\n            } else if (type == Change[\"a\" /* Change */].CHILD_CHANGED && oldType == Change[\"a\" /* Change */].CHILD_ADDED) {\n                this.changeMap_[childKey] = Change[\"a\" /* Change */].childAddedChange(childKey, change.snapshotNode);\n            } else if (type == Change[\"a\" /* Change */].CHILD_CHANGED && oldType == Change[\"a\" /* Change */].CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change[\"a\" /* Change */].childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n            } else {\n                throw Object(assert[\"b\" /* assertionError */])('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n            }\n        } else {\n            this.changeMap_[childKey] = change;\n        }\n    };\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\n    ChildChangeAccumulator.prototype.getChanges = function () {\n        return Object(obj[\"i\" /* getValues */])(this.changeMap_);\n    };\n    return ChildChangeAccumulator;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/KeyIndex.ts\nvar KeyIndex = __webpack_require__(15);\n\n// EXTERNAL MODULE: ./src/database/core/util/ImmutableTree.ts\nvar ImmutableTree = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/database/core/view/CompleteChildSource.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\nvar NoCompleteChildSource_ = /** @class */function () {\n    function NoCompleteChildSource_() {}\n    /**\r\n     * @inheritDoc\r\n     */\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n        return null;\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n        return null;\n    };\n    return NoCompleteChildSource_;\n}();\n\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\nvar CompleteChildSource_WriteTreeCompleteChildSource = /** @class */function () {\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n        if (optCompleteServerCache_ === void 0) {\n            optCompleteServerCache_ = null;\n        }\n        this.writes_ = writes_;\n        this.viewCache_ = viewCache_;\n        this.optCompleteServerCache_ = optCompleteServerCache_;\n    }\n    /**\r\n     * @inheritDoc\r\n     */\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n        var node = this.viewCache_.getEventCache();\n        if (node.isCompleteForChild(childKey)) {\n            return node.getNode().getImmediateChild(childKey);\n        } else {\n            var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n            return this.writes_.calcCompleteChild(childKey, serverNode);\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n        var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n        if (nodes.length === 0) {\n            return null;\n        } else {\n            return nodes[0];\n        }\n    };\n    return WriteTreeCompleteChildSource;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/view/ViewProcessor.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n/**\r\n * @constructor\r\n * @struct\r\n */\nvar ProcessorResult = /** @class */function () {\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\n    function ProcessorResult(viewCache, changes) {\n        this.viewCache = viewCache;\n        this.changes = changes;\n    }\n    return ProcessorResult;\n}();\n\n/**\r\n * @constructor\r\n */\nvar ViewProcessor_ViewProcessor = /** @class */function () {\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\n    function ViewProcessor(filter_) {\n        this.filter_ = filter_;\n    }\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\n        Object(assert[\"a\" /* assert */])(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n        Object(assert[\"a\" /* assert */])(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n    };\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n        var accumulator = new ChildChangeAccumulator_ChildChangeAccumulator();\n        var newViewCache, filterServerNode;\n        if (operation.type === Operation[\"b\" /* OperationType */].OVERWRITE) {\n            var overwrite = operation;\n            if (overwrite.source.fromUser) {\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n            } else {\n                Object(assert[\"a\" /* assert */])(overwrite.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n                // again\n                filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        } else if (operation.type === Operation[\"b\" /* OperationType */].MERGE) {\n            var merge = operation;\n            if (merge.source.fromUser) {\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n            } else {\n                Object(assert[\"a\" /* assert */])(merge.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered\n                filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        } else if (operation.type === Operation[\"b\" /* OperationType */].ACK_USER_WRITE) {\n            var ackUserWrite = operation;\n            if (!ackUserWrite.revert) {\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n            } else {\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n            }\n        } else if (operation.type === Operation[\"b\" /* OperationType */].LISTEN_COMPLETE) {\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n        } else {\n            throw Object(assert[\"b\" /* assertionError */])('Unknown operation type: ' + operation.type);\n        }\n        var changes = accumulator.getChanges();\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n        return new ProcessorResult(newViewCache, changes);\n    };\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n        var eventSnap = newViewCache.getEventCache();\n        if (eventSnap.isFullyInitialized()) {\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n            if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals /** @type {!Node} */(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n                accumulator.push(Change[\"a\" /* Change */].valueChange(\n                /** @type {!Node} */newViewCache.getCompleteEventSnap()));\n            }\n        }\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n        var oldEventSnap = viewCache.getEventCache();\n        if (writesCache.shadowingWrite(changePath) != null) {\n            // we have a shadowing write, ignore changes\n            return viewCache;\n        } else {\n            var newEventCache = void 0,\n                serverNode = void 0;\n            if (changePath.isEmpty()) {\n                // TODO: figure out how this plays with \"sliding ack windows\"\n                Object(assert[\"a\" /* assert */])(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n                if (viewCache.getServerCache().isFiltered()) {\n                    // We need to special case this, because we need to only apply writes to complete children, or\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\n                    // writes cannot be guaranteed to be complete\n                    var serverCache = viewCache.getCompleteServerSnap();\n                    var completeChildren = serverCache instanceof ChildrenNode[\"a\" /* ChildrenNode */] ? serverCache : ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n                } else {\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n                }\n            } else {\n                var childKey = changePath.getFront();\n                if (childKey == '.priority') {\n                    Object(assert[\"a\" /* assert */])(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n                    var oldEventNode = oldEventSnap.getNode();\n                    serverNode = viewCache.getServerCache().getNode();\n                    // we might have overwrites for this priority\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n                    if (updatedPriority != null) {\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n                    } else {\n                        // priority didn't change, keep old node\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                } else {\n                    var childChangePath = changePath.popFront();\n                    // update child\n                    var newEventChild = void 0;\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\n                        serverNode = viewCache.getServerCache().getNode();\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n                        if (eventChildUpdate != null) {\n                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n                        } else {\n                            // Nothing changed, just keep the old child\n                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                        }\n                    } else {\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                    }\n                    if (newEventChild != null) {\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n                    } else {\n                        // no complete child available or no change\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n            }\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n        }\n    };\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n        var oldServerSnap = oldViewCache.getServerCache();\n        var newServerCache;\n        var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n        if (changePath.isEmpty()) {\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n        } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n            var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n        } else {\n            var childKey = changePath.getFront();\n            if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n                // We don't update incomplete nodes with updates intended for other listeners\n                return oldViewCache;\n            }\n            var childChangePath = changePath.popFront();\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n            if (childKey == '.priority') {\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n            } else {\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n            }\n        }\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n        var source = new CompleteChildSource_WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n    };\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n        var oldEventSnap = oldViewCache.getEventCache();\n        var newViewCache, newEventCache;\n        var source = new CompleteChildSource_WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n        if (changePath.isEmpty()) {\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n        } else {\n            var childKey = changePath.getFront();\n            if (childKey === '.priority') {\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n            } else {\n                var childChangePath = changePath.popFront();\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                var newChild = void 0;\n                if (childChangePath.isEmpty()) {\n                    // Child overwrite, we can replace the child\n                    newChild = changedSnap;\n                } else {\n                    var childNode = source.getCompleteChild(childKey);\n                    if (childNode != null) {\n                        if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n                            // This is a priority update on an empty node. If this node exists on the server, the\n                            // server will send down the priority in the update, so ignore for now\n                            newChild = childNode;\n                        } else {\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\n                        }\n                    } else {\n                        // There is no complete child node available\n                        newChild = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                    }\n                }\n                if (!oldChild.equals(newChild)) {\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n                } else {\n                    newViewCache = oldViewCache;\n                }\n            }\n        }\n        return newViewCache;\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n        return viewCache.getEventCache().isCompleteForChild(childKey);\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n        var _this = this;\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n        merge.foreach(function (relativePath, childNode) {\n            node = node.updateChild(relativePath, childNode);\n        });\n        return node;\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n        var _this = this;\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n        // wait for the complete data update coming soon.\n        if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n            return viewCache;\n        }\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        var viewMergeTree;\n        if (path.isEmpty()) {\n            viewMergeTree = changedChildren;\n        } else {\n            viewMergeTree = ImmutableTree[\"a\" /* ImmutableTree */].Empty.setTree(path, changedChildren);\n        }\n        var serverNode = viewCache.getServerCache().getNode();\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n            if (serverNode.hasChild(childKey)) {\n                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path[\"a\" /* Path */](childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path[\"a\" /* Path */](childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n        if (writesCache.shadowingWrite(ackPath) != null) {\n            return viewCache;\n        }\n        // Only filter server node if it is currently filtered\n        var filterServerNode = viewCache.getServerCache().isFiltered();\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n        // now that it won't be shadowed.\n        var serverCache = viewCache.getServerCache();\n        if (affectedTree.value != null) {\n            // This is an overwrite.\n            if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n            } else if (ackPath.isEmpty()) {\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n                // should just re-apply whatever we have in our cache as a merge.\n                var changedChildren_1 = ImmutableTree[\"a\" /* ImmutableTree */].Empty;\n                serverCache.getNode().forEachChild(KeyIndex[\"a\" /* KEY_INDEX */], function (name, node) {\n                    changedChildren_1 = changedChildren_1.set(new Path[\"a\" /* Path */](name), node);\n                });\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n            } else {\n                return viewCache;\n            }\n        } else {\n            // This is a merge.\n            var changedChildren_2 = ImmutableTree[\"a\" /* ImmutableTree */].Empty;\n            affectedTree.foreach(function (mergePath, value) {\n                var serverCachePath = ackPath.child(mergePath);\n                if (serverCache.isCompleteForPath(serverCachePath)) {\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n                }\n            });\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n        }\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n        var oldServerNode = viewCache.getServerCache();\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n    };\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n        var complete;\n        if (writesCache.shadowingWrite(path) != null) {\n            return viewCache;\n        } else {\n            var source = new CompleteChildSource_WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n            var oldEventCache = viewCache.getEventCache().getNode();\n            var newEventCache = void 0;\n            if (path.isEmpty() || path.getFront() === '.priority') {\n                var newNode = void 0;\n                if (viewCache.getServerCache().isFullyInitialized()) {\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                } else {\n                    var serverChildren = viewCache.getServerCache().getNode();\n                    Object(assert[\"a\" /* assert */])(serverChildren instanceof ChildrenNode[\"a\" /* ChildrenNode */], 'serverChildren would be complete if leaf node');\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\n                }\n                newNode = newNode;\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n            } else {\n                var childKey = path.getFront();\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n                    newChild = oldEventCache.getImmediateChild(childKey);\n                }\n                if (newChild != null) {\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n                } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n                    // No complete child available, delete the existing one, if any\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE, path.popFront(), source, accumulator);\n                } else {\n                    newEventCache = oldEventCache;\n                }\n                if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    if (complete.isLeafNode()) {\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n                    }\n                }\n            }\n            complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path[\"a\" /* Path */].Empty) != null;\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n        }\n    };\n    return ViewProcessor;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/Node.ts\nvar Node = __webpack_require__(7);\n\n// CONCATENATED MODULE: ./src/database/core/view/EventGenerator.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\nvar EventGenerator_EventGenerator = /** @class */function () {\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\n    function EventGenerator(query_) {\n        this.query_ = query_;\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\n        this.index_ = this.query_.getQueryParams().getIndex();\n    }\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n        var _this = this;\n        var events = [];\n        var moves = [];\n        changes.forEach(function (change) {\n            if (change.type === Change[\"a\" /* Change */].CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n                moves.push(Change[\"a\" /* Change */].childMovedChange(change.childName, change.snapshotNode));\n            }\n        });\n        this.generateEventsForType_(events, Change[\"a\" /* Change */].CHILD_REMOVED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change[\"a\" /* Change */].CHILD_ADDED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change[\"a\" /* Change */].CHILD_MOVED, moves, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change[\"a\" /* Change */].CHILD_CHANGED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change[\"a\" /* Change */].VALUE, changes, eventRegistrations, eventCache);\n        return events;\n    };\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n        var _this = this;\n        var filteredChanges = changes.filter(function (change) {\n            return change.type === eventType;\n        });\n        filteredChanges.sort(this.compareChanges_.bind(this));\n        filteredChanges.forEach(function (change) {\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\n            registrations.forEach(function (registration) {\n                if (registration.respondsTo(change.type)) {\n                    events.push(registration.createEvent(materializedChange, _this.query_));\n                }\n            });\n        });\n    };\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n        if (change.type === 'value' || change.type === 'child_removed') {\n            return change;\n        } else {\n            change.prevName = eventCache.getPredecessorChildName(\n            /** @type {!string} */\n            change.childName, change.snapshotNode, this.index_);\n            return change;\n        }\n    };\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\n        if (a.childName == null || b.childName == null) {\n            throw Object(assert[\"b\" /* assertionError */])('Should only compare child_ events.');\n        }\n        var aWrapped = new Node[\"a\" /* NamedNode */](a.childName, a.snapshotNode);\n        var bWrapped = new Node[\"a\" /* NamedNode */](b.childName, b.snapshotNode);\n        return this.index_.compare(aWrapped, bWrapped);\n    };\n    return EventGenerator;\n}();\n\n// EXTERNAL MODULE: ./src/database/core/snap/indexes/PriorityIndex.ts\nvar PriorityIndex = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/database/core/view/View.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\nvar View_View = /** @class */function () {\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter[\"a\" /* IndexedFilter */](params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\n        this.processor_ = new ViewProcessor_ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\n        this.viewCache_ = new ViewCache_ViewCache(newEventCache, newServerCache);\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\n        this.eventGenerator_ = new EventGenerator_EventGenerator(this.query_);\n    }\n    /**\r\n     * @return {!Query}\r\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\r\n     * @return {?Node}\r\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            Object(assert[\"a\" /* assert */])(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                } else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        } else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation[\"b\" /* OperationType */].MERGE && operation.source.queryId !== null) {\n            Object(assert[\"a\" /* assert */])(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            Object(assert[\"a\" /* assert */])(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        Object(assert[\"a\" /* assert */])(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex[\"a\" /* PRIORITY_INDEX */], function (key, childNode) {\n                initialChanges.push(Change[\"a\" /* Change */].childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change[\"a\" /* Change */].valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/SyncPoint.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SyncPoint_SyncPoint; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\nvar __referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\nvar SyncPoint_SyncPoint = /** @class */function () {\n    function SyncPoint() {\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function get() {\n            Object(assert[\"a\" /* assert */])(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function set(val) {\n            Object(assert[\"a\" /* assert */])(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * @return {boolean}\r\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return Object(obj[\"j\" /* isEmpty */])(this.views_);\n    };\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = Object(obj[\"l\" /* safeGet */])(this.views_, queryId);\n            Object(assert[\"a\" /* assert */])(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        } else {\n            var events_1 = [];\n            Object(obj[\"f\" /* forEach */])(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = Object(obj[\"l\" /* safeGet */])(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            } else if (serverCache instanceof ChildrenNode[\"a\" /* ChildrenNode */]) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            } else {\n                eventCache = ChildrenNode[\"a\" /* ChildrenNode */].EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new ViewCache_ViewCache(new CacheNode /** @type {!Node} */(eventCache, eventCacheComplete, false), new CacheNode /** @type {!Node} */(serverCache, serverCacheComplete, false));\n            view = new View_View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            Object(obj[\"f\" /* forEach */])(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        } else {\n            // remove the callback from the specific view.\n            var view = Object(obj[\"l\" /* safeGet */])(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) {\n            return _this.views_[key];\n        });\n        return values.filter(function (view) {\n            return !view.getQuery().getQueryParams().loadsAllData();\n        });\n    };\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        Object(obj[\"f\" /* forEach */])(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        } else {\n            var queryId = query.queryIdentifier();\n            return Object(obj[\"l\" /* safeGet */])(this.views_, queryId);\n        }\n    };\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\r\n     * @return {?View}\r\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = Object(obj[\"e\" /* findValue */])(this.views_, function (view) {\n            return view.getQuery().getQueryParams().loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}();\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/app.ts + 1 modules\nvar app = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/utils/obj.ts\nvar obj = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/utils/assert.ts\nvar assert = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/util/Path.ts\nvar Path = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/database/core/util/EventEmitter.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\nvar EventEmitter_EventEmitter = /** @class */function () {\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        Object(assert[\"a\" /* assert */])(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        Object(assert[\"a\" /* assert */])(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}();\n\n// CONCATENATED MODULE: ./src/database/core/util/VisibilityMonitor.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n/**\r\n * @extends {EventEmitter}\r\n */\nvar VisibilityMonitor_VisibilityMonitor = /** @class */function (_super) {\n    __extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            } else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            } else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            } else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        Object(assert[\"a\" /* assert */])(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(EventEmitter_EventEmitter);\n\n// EXTERNAL MODULE: ./src/utils/environment.ts\nvar environment = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/database/core/util/OnlineMonitor.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar OnlineMonitor___extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\nvar OnlineMonitor_OnlineMonitor = /** @class */function (_super) {\n    OnlineMonitor___extends(OnlineMonitor, _super);\n    function OnlineMonitor() {\n        var _this = _super.call(this, ['online']) || this;\n        _this.online_ = true;\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\n        // for Cordova.\n        if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !Object(environment[\"a\" /* isMobileCordova */])()) {\n            window.addEventListener('online', function () {\n                if (!_this.online_) {\n                    _this.online_ = true;\n                    _this.trigger('online', true);\n                }\n            }, false);\n            window.addEventListener('offline', function () {\n                if (_this.online_) {\n                    _this.online_ = false;\n                    _this.trigger('online', false);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    OnlineMonitor.getInstance = function () {\n        return new OnlineMonitor();\n    };\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n        Object(assert[\"a\" /* assert */])(eventType === 'online', 'Unknown event type: ' + eventType);\n        return [this.online_];\n    };\n    /**\r\n     * @return {boolean}\r\n     */\n    OnlineMonitor.prototype.currentlyOnline = function () {\n        return this.online_;\n    };\n    return OnlineMonitor;\n}(EventEmitter_EventEmitter);\n\n// CONCATENATED MODULE: ./src/utils/jwt.ts\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\nvar jwt_decode = function decode(token) {\n    var header = {},\n        claims = {},\n        data = {},\n        signature = '';\n    try {\n        var parts = token.split('.');\n        header = Object(json[\"a\" /* jsonEval */])(Object(util[\"e\" /* base64Decode */])(parts[0]) || '');\n        claims = Object(json[\"a\" /* jsonEval */])(Object(util[\"e\" /* base64Decode */])(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    } catch (e) {}\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isValidTimestamp = function isValidTimestamp(token) {\n    var claims = jwt_decode(token).claims,\n        now = Math.floor(new Date().getTime() / 1000),\n        validSince,\n        validUntil;\n    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        } else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        } else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return now && validSince && validUntil && now >= validSince && now <= validUntil;\n};\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\nvar issuedAtTime = function issuedAtTime(token) {\n    var claims = jwt_decode(token).claims;\n    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isValidFormat = function isValidFormat(token) {\n    var decoded = jwt_decode(token),\n        claims = decoded.claims;\n    return !!decoded.signature && !!claims && (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat');\n};\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\nvar isAdmin = function isAdmin(token) {\n    var claims = jwt_decode(token).claims;\n    return (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims['admin'] === true;\n};\n// EXTERNAL MODULE: ./src/database/realtime/Connection.ts + 1 modules\nvar Connection = __webpack_require__(52);\n\n// EXTERNAL MODULE: ./src/utils/constants.ts\nvar constants = __webpack_require__(17);\n\n// EXTERNAL MODULE: ./src/database/core/ServerActions.ts\nvar ServerActions = __webpack_require__(55);\n\n// CONCATENATED MODULE: ./src/database/core/PersistentConnection.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PersistentConnection_PersistentConnection; });\nvar PersistentConnection__typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PersistentConnection___extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\nvar PersistentConnection_PersistentConnection = /** @class */function (_super) {\n    PersistentConnection___extends(PersistentConnection, _super);\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = Object(util[\"t\" /* logWrapper */])('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !Object(environment[\"b\" /* isNodeSdk */])()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(Object(json[\"b\" /* stringify */])(msg));\n        Object(assert[\"a\" /* assert */])(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        Object(assert[\"a\" /* assert */])(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        Object(assert[\"a\" /* assert */])(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && (typeof payload === 'undefined' ? 'undefined' : PersistentConnection__typeof(payload)) === 'object' && Object(obj[\"b\" /* contains */])(payload, 'w')) {\n            var warnings = Object(obj[\"l\" /* safeGet */])(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n                var indexPath = query.path.toString();\n                Object(util[\"B\" /* warn */])(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        } else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () {});\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            } else if (PersistentConnection__typeof(this.authOverride_) === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    } else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        Object(assert[\"a\" /* assert */])(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        } else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/p: pathString, /*data*/d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/p: pathString,\n            /*data*/d: data\n        };\n        if (hash !== undefined) request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        } else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete) onComplete(message['s'], message['d']);\n        });\n    };\n    /**\r\n     * @inheritDoc\r\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest( /*stats*/'s', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + Object(json[\"b\" /* stringify */])(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        } else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        } else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd') this.onDataUpdate_(body['p'], body['d'],\n        /*isMerge*/false, body['t']);else if (action === 'm') this.onDataUpdate_(body['p'], body['d'],\n        /*isMerge=*/true, body['t']);else if (action === 'c') this.onListenRevoked_(body['p'], body['q']);else if (action === 'ac') this.onAuthRevoked_(body['s'], body['d']);else if (action === 'sd') this.onSecurityDebugPacket_(body);else Object(util[\"k\" /* error */])('Unrecognized action received from server: ' + Object(json[\"b\" /* stringify */])(action) + '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        Object(assert[\"a\" /* assert */])(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        } else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            } else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function closeFn_1() {\n                if (connection_1) {\n                    connection_1.close();\n                } else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function sendRequestFn(msg) {\n                Object(assert[\"a\" /* assert */])(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n                if (!canceled_1) {\n                    Object(util[\"s\" /* log */])('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection[\"a\" /* Connection */](connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1,\n                    /* onKill= */function (reason) {\n                        Object(util[\"B\" /* warn */])(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                } else {\n                    Object(util[\"s\" /* log */])('getToken() completed but was canceled');\n                }\n            }).then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (constants[\"a\" /* CONSTANTS */].NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        Object(util[\"B\" /* warn */])(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\r\n     * @param {string} reason\r\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        Object(util[\"s\" /* log */])('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        } else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\r\n     * @param {string} reason\r\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        Object(util[\"s\" /* log */])('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (Object(obj[\"j\" /* isEmpty */])(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/'h' in put.request && put.queued) {\n                if (put.onComplete) put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];\n    };\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        } else {\n            queryId = query.map(function (q) {\n                return Object(util[\"d\" /* ObjectToUniqueKey */])(q);\n            }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete) listen.onComplete('permission_denied');\n    };\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path[\"a\" /* Path */](pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (Object(obj[\"h\" /* getCount */])(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        } else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        Object(util[\"s\" /* log */])('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        } else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        Object(obj[\"f\" /* forEach */])(this.listens_, function (pathString, queries) {\n            Object(obj[\"f\" /* forEach */])(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i]) this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (constants[\"a\" /* CONSTANTS */].NODE_ADMIN) {\n            clientName = 'admin_node';\n        } else if (constants[\"a\" /* CONSTANTS */].NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app[\"default\"].SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (Object(environment[\"a\" /* isMobileCordova */])()) {\n            stats['framework.cordova'] = 1;\n        } else if (Object(environment[\"c\" /* isReactNative */])()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_OnlineMonitor.getInstance().currentlyOnline();\n        return Object(obj[\"j\" /* isEmpty */])(this.interruptReasons_) && online;\n    };\n    /**\r\n     * @private\r\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions[\"a\" /* ServerActions */]);\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/storage/storage.ts + 2 modules\nvar storage = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./src/database/realtime/Constants.ts\nvar Constants = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./src/database/realtime/BrowserPollConnection.ts + 1 modules\nvar BrowserPollConnection = __webpack_require__(53);\n\n// EXTERNAL MODULE: ./src/database/realtime/WebSocketConnection.ts\nvar WebSocketConnection = __webpack_require__(54);\n\n// CONCATENATED MODULE: ./src/database/realtime/TransportManager.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\nvar TransportManager_TransportManager = /** @class */function () {\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\n    function TransportManager(repoInfo) {\n        this.initTransports_(repoInfo);\n    }\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\n        get: function get() {\n            return [BrowserPollConnection[\"a\" /* BrowserPollConnection */], WebSocketConnection[\"a\" /* WebSocketConnection */]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\n        var isWebSocketsAvailable = WebSocketConnection[\"a\" /* WebSocketConnection */] && WebSocketConnection[\"a\" /* WebSocketConnection */]['isAvailable']();\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection[\"a\" /* WebSocketConnection */].previouslyFailed();\n        if (repoInfo.webSocketOnly) {\n            if (!isWebSocketsAvailable) Object(util[\"B\" /* warn */])(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n            isSkipPollConnection = true;\n        }\n        if (isSkipPollConnection) {\n            this.transports_ = [WebSocketConnection[\"a\" /* WebSocketConnection */]];\n        } else {\n            var transports_1 = this.transports_ = [];\n            Object(util[\"i\" /* each */])(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n                if (transport && transport['isAvailable']()) {\n                    transports_1.push(transport);\n                }\n            });\n        }\n    };\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\n    TransportManager.prototype.initialTransport = function () {\n        if (this.transports_.length > 0) {\n            return this.transports_[0];\n        } else {\n            throw new Error('No transports available');\n        }\n    };\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\n    TransportManager.prototype.upgradeTransport = function () {\n        if (this.transports_.length > 1) {\n            return this.transports_[1];\n        } else {\n            return null;\n        }\n    };\n    return TransportManager;\n}();\n\n// CONCATENATED MODULE: ./src/database/realtime/Connection.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Connection_Connection; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\nvar Connection_Connection = /** @class */function () {\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = Object(util[\"t\" /* logWrapper */])('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = Object(util[\"x\" /* setTimeoutNonBlocking */])(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    } else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            } else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            } else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                    if (conn === _this.rx_) {\n                        _this.onPrimaryMessageReceived_(message);\n                    } else if (conn === _this.secondaryConn_) {\n                        _this.onSecondaryMessageReceived_(message);\n                    } else {\n                        _this.log_('message on old connection');\n                    }\n                }\n        };\n    };\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            } else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            } else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = Object(util[\"w\" /* requireKey */])('t', parsedData);\n        var data = Object(util[\"w\" /* requireKey */])('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        } else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        } else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        } else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = Object(util[\"w\" /* requireKey */])('t', parsedData);\n        var data = Object(util[\"w\" /* requireKey */])('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        } else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = Object(util[\"w\" /* requireKey */])(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            } else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            } else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            } else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            } else if (cmd === CONTROL_ERROR) {\n                Object(util[\"k\" /* error */])('Server Error: ' + payload);\n            } else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            } else {\n                Object(util[\"k\" /* error */])('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n                this.conn_.start();\n                this.onConnectionEstablished_(this.conn_, timestamp);\n                if (Constants[\"e\" /* PROTOCOL_VERSION */] !== version) {\n                    Object(util[\"B\" /* warn */])('Protocol version mismatch detected');\n                }\n                // TODO: do we want to upgrade? when? maybe a delay?\n                this.tryStartUpgrade_();\n            }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        Object(util[\"x\" /* setTimeoutNonBlocking */])(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n                this.close();\n            } else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        } else {\n            Object(util[\"x\" /* setTimeoutNonBlocking */])(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n                this.log_('sending ping on primary.');\n                this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n            }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n                this.log_('Realtime connection failed.');\n                // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n                if (this.repoInfo_.isCacheableHost()) {\n                    storage[\"a\" /* PersistentStorage */].remove('host:' + this.repoInfo_.host);\n                    // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                    this.repoInfo_.internalHost = this.repoInfo_.host;\n                }\n            } else if (this.state_ === 1 /* CONNECTED */) {\n                this.log_('Realtime connection lost.');\n            }\n        this.close();\n    };\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n                throw 'Connection is not connected';\n            } else {\n            this.tx_.send(data);\n        }\n    };\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n                this.log_('Closing realtime connection.');\n                this.state_ = 2 /* DISCONNECTED */;\n                this.closeConnections_();\n                if (this.onDisconnect_) {\n                    this.onDisconnect_();\n                    this.onDisconnect_ = null;\n                }\n            }\n    };\n    /**\r\n     *\r\n     * @private\r\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}();\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./src/database/core/util/util.ts + 3 modules\nvar util = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/database/core/util/CountedSet.ts\nvar CountedSet = __webpack_require__(49);\n\n// EXTERNAL MODULE: ./src/database/core/stats/StatsManager.ts + 1 modules\nvar StatsManager = __webpack_require__(29);\n\n// CONCATENATED MODULE: ./src/database/realtime/polling/PacketReceiver.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\nvar PacketReceiver_PacketReceiver = /** @class */function () {\n    /**\r\n     * @param onMessage_\r\n     */\n    function PacketReceiver(onMessage_) {\n        this.onMessage_ = onMessage_;\n        this.pendingResponses = [];\n        this.currentResponseNum = 0;\n        this.closeAfterResponse = -1;\n        this.onClose = null;\n    }\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n        this.closeAfterResponse = responseNum;\n        this.onClose = callback;\n        if (this.closeAfterResponse < this.currentResponseNum) {\n            this.onClose();\n            this.onClose = null;\n        }\n    };\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n        var _this = this;\n        this.pendingResponses[requestNum] = data;\n        var _loop_1 = function _loop_1() {\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n            delete this_1.pendingResponses[this_1.currentResponseNum];\n            var _loop_2 = function _loop_2(i) {\n                if (toProcess[i]) {\n                    Object(util[\"m\" /* exceptionGuard */])(function () {\n                        _this.onMessage_(toProcess[i]);\n                    });\n                }\n            };\n            for (var i = 0; i < toProcess.length; ++i) {\n                _loop_2(i);\n            }\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n                if (this_1.onClose) {\n                    this_1.onClose();\n                    this_1.onClose = null;\n                }\n                return \"break\";\n            }\n            this_1.currentResponseNum++;\n        };\n        var this_1 = this;\n        while (this.pendingResponses[this.currentResponseNum]) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\") break;\n        }\n    };\n    return PacketReceiver;\n}();\n\n// EXTERNAL MODULE: ./src/database/realtime/Constants.ts\nvar Constants = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./src/utils/json.ts\nvar json = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/utils/environment.ts\nvar environment = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/database/realtime/BrowserPollConnection.ts\n/* unused harmony export FIREBASE_LONGPOLL_START_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_CLOSE_COMMAND */\n/* unused harmony export FIREBASE_LONGPOLL_COMMAND_CB_NAME */\n/* unused harmony export FIREBASE_LONGPOLL_DATA_CB_NAME */\n/* unused harmony export FIREBASE_LONGPOLL_ID_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_PW_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_SERIAL_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_CALLBACK_ID_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET */\n/* unused harmony export FIREBASE_LONGPOLL_DATA_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM */\n/* unused harmony export FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BrowserPollConnection_BrowserPollConnection; });\n/* unused harmony export FirebaseIFrameScriptHolder */\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n// URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\nvar BrowserPollConnection_BrowserPollConnection = /** @class */function () {\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.repoInfo = repoInfo;\n        this.transportSessionId = transportSessionId;\n        this.lastSessionId = lastSessionId;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.everConnected_ = false;\n        this.log_ = Object(util[\"t\" /* logWrapper */])(connId);\n        this.stats_ = StatsManager[\"a\" /* StatsManager */].getCollection(repoInfo);\n        this.urlFn = function (params) {\n            return repoInfo.connectionURL(Constants[\"d\" /* LONG_POLLING */], params);\n        };\n    }\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.curSegmentNum = 0;\n        this.onDisconnect_ = onDisconnect;\n        this.myPacketOrderer = new PacketReceiver_PacketReceiver(onMessage);\n        this.isClosed_ = false;\n        this.connectTimeoutTimer_ = setTimeout(function () {\n            _this.log_('Timed out trying to connect.');\n            // Make sure we clear the host cache\n            _this.onClosed_();\n            _this.connectTimeoutTimer_ = null;\n        }, Math.floor(LP_CONNECT_TIMEOUT));\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\n        Object(util[\"n\" /* executeWhenDOMReady */])(function () {\n            if (_this.isClosed_) return;\n            //Set up a callback that gets triggered once a connection is set up.\n            _this.scriptTagHolder = new BrowserPollConnection_FirebaseIFrameScriptHolder(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var command = args[0],\n                    arg1 = args[1],\n                    arg2 = args[2],\n                    arg3 = args[3],\n                    arg4 = args[4];\n                _this.incrementIncomingBytes_(args);\n                if (!_this.scriptTagHolder) return; // we closed the connection.\n                if (_this.connectTimeoutTimer_) {\n                    clearTimeout(_this.connectTimeoutTimer_);\n                    _this.connectTimeoutTimer_ = null;\n                }\n                _this.everConnected_ = true;\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\n                    _this.id = arg1;\n                    _this.password = arg2;\n                } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\n                    if (arg1) {\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\n                        // through our already open polls), so don't send any more.\n                        _this.scriptTagHolder.sendNewPolls = false;\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\n                        // all of the responses up to this one before closing\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\n                            _this.onClosed_();\n                        });\n                    } else {\n                        _this.onClosed_();\n                    }\n                } else {\n                    throw new Error('Unrecognized command received: ' + command);\n                }\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var pN = args[0],\n                    data = args[1];\n                _this.incrementIncomingBytes_(args);\n                _this.myPacketOrderer.handleResponse(pN, data);\n            }, function () {\n                _this.onClosed_();\n            }, _this.urlFn);\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n            //from cache.\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n            urlParams[Constants[\"h\" /* VERSION_PARAM */]] = Constants[\"e\" /* PROTOCOL_VERSION */];\n            if (_this.transportSessionId) {\n                urlParams[Constants[\"g\" /* TRANSPORT_SESSION_PARAM */]] = _this.transportSessionId;\n            }\n            if (_this.lastSessionId) {\n                urlParams[Constants[\"c\" /* LAST_SESSION_PARAM */]] = _this.lastSessionId;\n            }\n            if (!Object(environment[\"b\" /* isNodeSdk */])() && typeof location !== 'undefined' && location.href && location.href.indexOf(Constants[\"a\" /* FORGE_DOMAIN */]) !== -1) {\n                urlParams[Constants[\"f\" /* REFERER_PARAM */]] = Constants[\"b\" /* FORGE_REF */];\n            }\n            var connectURL = _this.urlFn(urlParams);\n            _this.log_('Connecting via long-poll to ' + connectURL);\n            _this.scriptTagHolder.addTag(connectURL, function () {\n                /* do nothing */\n            });\n        });\n    };\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\n    BrowserPollConnection.prototype.start = function () {\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\n        this.addDisconnectPingFrame(this.id, this.password);\n    };\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\n    BrowserPollConnection.forceAllow = function () {\n        BrowserPollConnection.forceAllow_ = true;\n    };\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\n    BrowserPollConnection.forceDisallow = function () {\n        BrowserPollConnection.forceDisallow_ = true;\n    };\n    // Static method, use string literal so it can be accessed in a generic way\n    BrowserPollConnection.isAvailable = function () {\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n        return BrowserPollConnection.forceAllow_ || !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !Object(util[\"p\" /* isChromeExtensionContentScript */])() && !Object(util[\"r\" /* isWindowsStoreApp */])() && !Object(environment[\"b\" /* isNodeSdk */])();\n    };\n    /**\r\n     * No-op for polling\r\n     */\n    BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\n    BrowserPollConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.scriptTagHolder) {\n            this.scriptTagHolder.close();\n            this.scriptTagHolder = null;\n        }\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n        if (this.myDisconnFrame) {\n            document.body.removeChild(this.myDisconnFrame);\n            this.myDisconnFrame = null;\n        }\n        if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n        }\n    };\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\n    BrowserPollConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is closing itself');\n            this.shutdown_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_(this.everConnected_);\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\n    BrowserPollConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is being closed.');\n            this.shutdown_();\n        }\n    };\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\n    BrowserPollConnection.prototype.send = function (data) {\n        var dataStr = Object(json[\"b\" /* stringify */])(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //first, lets get the base64-encoded data\n        var base64data = Object(util[\"f\" /* base64Encode */])(dataStr);\n        //We can only fit a certain amount in each URL, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = Object(util[\"z\" /* splitStringBySize */])(base64data, MAX_PAYLOAD_SIZE);\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n        //of segments so that we can reassemble the packet on the server.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n            this.curSegmentNum++;\n        }\n    };\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n        if (Object(environment[\"b\" /* isNodeSdk */])()) return;\n        this.myDisconnFrame = document.createElement('iframe');\n        var urlParams = {};\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n        this.myDisconnFrame.src = this.urlFn(urlParams);\n        this.myDisconnFrame.style.display = 'none';\n        document.body.appendChild(this.myDisconnFrame);\n    };\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n        var bytesReceived = Object(json[\"b\" /* stringify */])(args).length;\n        this.bytesReceived += bytesReceived;\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\n    };\n    return BrowserPollConnection;\n}();\n\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\nvar BrowserPollConnection_FirebaseIFrameScriptHolder = /** @class */function () {\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n        this.onDisconnect = onDisconnect;\n        this.urlFn = urlFn;\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n        //problems in some browsers.\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\n        this.outstandingRequests = new CountedSet[\"a\" /* CountedSet */]();\n        //A queue of the pending segments waiting for transmission to the server.\n        this.pendingSegs = [];\n        //A serial number. We use this for two things:\n        // 1) A way to ensure the browser doesn't cache responses to polls\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n        //    JSONP code in the order it was added to the iframe.\n        this.currentSerial = Math.floor(Math.random() * 100000000);\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n        // incoming data from the server that we're waiting for).\n        this.sendNewPolls = true;\n        if (!Object(environment[\"b\" /* isNodeSdk */])()) {\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n            //iframes where we put the long-polling script tags. We have two callbacks:\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\n            //   2) Message Callback - Triggered when new data arrives.\n            this.uniqueCallbackIdentifier = Object(util[\"a\" /* LUIDGenerator */])();\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n            //Create an iframe for us to add script tags to.\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n            // Set the iframe's contents.\n            var script = '';\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n            // for ie9, but ie8 needs to do it again in the document itself.\n            if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n                var currentDomain = document.domain;\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n            }\n            var iframeContents = '<html><body>' + script + '</body></html>';\n            try {\n                this.myIFrame.doc.open();\n                this.myIFrame.doc.write(iframeContents);\n                this.myIFrame.doc.close();\n            } catch (e) {\n                Object(util[\"s\" /* log */])('frame writing exception');\n                if (e.stack) {\n                    Object(util[\"s\" /* log */])(e.stack);\n                }\n                Object(util[\"s\" /* log */])(e);\n            }\n        } else {\n            this.commandCB = commandCB;\n            this.onMessageCB = onMessageCB;\n        }\n    }\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\n        var iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        // This is necessary in order to initialize the document inside the iframe\n        if (document.body) {\n            document.body.appendChild(iframe);\n            try {\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n                var a = iframe.contentWindow.document;\n                if (!a) {\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n                    Object(util[\"s\" /* log */])('No IE domain setting required');\n                }\n            } catch (e) {\n                var domain = document.domain;\n                iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n            }\n        } else {\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n            // never gets hit.\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n        }\n        // Get the document of the iframe in a browser-specific way.\n        if (iframe.contentDocument) {\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n        } else if (iframe.contentWindow) {\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\n        } else if (iframe.document) {\n            iframe.doc = iframe.document; //others?\n        }\n        return iframe;\n    };\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\n    FirebaseIFrameScriptHolder.prototype.close = function () {\n        var _this = this;\n        //Mark this iframe as dead, so no new requests are sent.\n        this.alive = false;\n        if (this.myIFrame) {\n            //We have to actually remove all of the html inside this iframe before removing it from the\n            //window, or IE will continue loading and executing the script tags we've already added, which\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n            this.myIFrame.doc.body.innerHTML = '';\n            setTimeout(function () {\n                if (_this.myIFrame !== null) {\n                    document.body.removeChild(_this.myIFrame);\n                    _this.myIFrame = null;\n                }\n            }, Math.floor(0));\n        }\n        if (Object(environment[\"b\" /* isNodeSdk */])() && this.myID) {\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            var theURL = this.urlFn(urlParams);\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n        }\n        // Protect from being called recursively.\n        var onDisconnect = this.onDisconnect;\n        if (onDisconnect) {\n            this.onDisconnect = null;\n            onDisconnect();\n        }\n    };\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n        this.myID = id;\n        this.myPW = pw;\n        this.alive = true;\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n        while (this.newRequest_()) {}\n    };\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n        // close the old request.\n        if (this.alive && this.sendNewPolls && this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n            //construct our url\n            this.currentSerial++;\n            var urlParams = {};\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n            var theURL = this.urlFn(urlParams);\n            //Now add as much data as we can.\n            var curDataString = '';\n            var i = 0;\n            while (this.pendingSegs.length > 0) {\n                //first, lets see if the next segment will fit.\n                var nextSeg = this.pendingSegs[0];\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n                    //great, the segment will fit. Lets append it.\n                    var theSeg = this.pendingSegs.shift();\n                    curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n                    i++;\n                } else {\n                    break;\n                }\n            }\n            theURL = theURL + curDataString;\n            this.addLongPollTag_(theURL, this.currentSerial);\n            return true;\n        } else {\n            return false;\n        }\n    };\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n        //add this to the queue of segments to send.\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n        //send the data immediately if there isn't already data being transmitted, unless\n        //startLongPoll hasn't been called yet.\n        if (this.alive) {\n            this.newRequest_();\n        }\n    };\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n        var _this = this;\n        //remember that we sent this request.\n        this.outstandingRequests.add(serial, 1);\n        var doNewRequest = function doNewRequest() {\n            _this.outstandingRequests.remove(serial);\n            _this.newRequest_();\n        };\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n        var readyStateCB = function readyStateCB() {\n            // Request completed.  Cancel the keepalive.\n            clearTimeout(keepaliveTimeout);\n            // Trigger a new request so we can continue receiving data.\n            doNewRequest();\n        };\n        this.addTag(url, readyStateCB);\n    };\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n        var _this = this;\n        if (Object(environment[\"b\" /* isNodeSdk */])()) {\n            this.doNodeLongPoll(url, loadCB);\n        } else {\n            setTimeout(function () {\n                try {\n                    // if we're already closed, don't add this poll\n                    if (!_this.sendNewPolls) return;\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\n                    newScript_1.type = 'text/javascript';\n                    newScript_1.async = true;\n                    newScript_1.src = url;\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\n                        var rstate = newScript_1.readyState;\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\n                            if (newScript_1.parentNode) {\n                                newScript_1.parentNode.removeChild(newScript_1);\n                            }\n                            loadCB();\n                        }\n                    };\n                    newScript_1.onerror = function () {\n                        Object(util[\"s\" /* log */])('Long-poll script failed to load: ' + url);\n                        _this.sendNewPolls = false;\n                        _this.close();\n                    };\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\n                } catch (e) {\n                    // TODO: we should make this error visible somehow\n                }\n            }, Math.floor(1));\n        }\n    };\n    return FirebaseIFrameScriptHolder;\n}();\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export setWebSocketImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WebSocketConnection; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_assert__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_stats_StatsManager__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Constants__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_constants__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_storage_storage__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_json__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_environment__ = __webpack_require__(13);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\nvar WebSocketConnection = /** @class */function () {\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = Object(__WEBPACK_IMPORTED_MODULE_2__core_util_util__[\"t\" /* logWrapper */])(this.connId);\n        this.stats_ = __WEBPACK_IMPORTED_MODULE_3__core_stats_StatsManager__[\"a\" /* StatsManager */].getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[__WEBPACK_IMPORTED_MODULE_4__Constants__[\"h\" /* VERSION_PARAM */]] = __WEBPACK_IMPORTED_MODULE_4__Constants__[\"e\" /* PROTOCOL_VERSION */];\n        if (!Object(__WEBPACK_IMPORTED_MODULE_8__utils_environment__[\"b\" /* isNodeSdk */])() && typeof location !== 'undefined' && location.href && location.href.indexOf(__WEBPACK_IMPORTED_MODULE_4__Constants__[\"a\" /* FORGE_DOMAIN */]) !== -1) {\n            urlParams[__WEBPACK_IMPORTED_MODULE_4__Constants__[\"f\" /* REFERER_PARAM */]] = __WEBPACK_IMPORTED_MODULE_4__Constants__[\"b\" /* FORGE_REF */];\n        }\n        if (transportSessionId) {\n            urlParams[__WEBPACK_IMPORTED_MODULE_4__Constants__[\"g\" /* TRANSPORT_SESSION_PARAM */]] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[__WEBPACK_IMPORTED_MODULE_4__Constants__[\"c\" /* LAST_SESSION_PARAM */]] = lastSessionId;\n        }\n        return repoInfo.connectionURL(__WEBPACK_IMPORTED_MODULE_4__Constants__[\"i\" /* WEBSOCKET */], urlParams);\n    };\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        __WEBPACK_IMPORTED_MODULE_6__core_storage_storage__[\"a\" /* PersistentStorage */].set('previous_websocket_failure', true);\n        try {\n            if (Object(__WEBPACK_IMPORTED_MODULE_8__utils_environment__[\"b\" /* isNodeSdk */])()) {\n                var device = __WEBPACK_IMPORTED_MODULE_5__utils_constants__[\"a\" /* CONSTANTS */].NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + __WEBPACK_IMPORTED_MODULE_4__Constants__[\"e\" /* PROTOCOL_VERSION */] + \"/\" + __WEBPACK_IMPORTED_MODULE_0__app__[\"default\"].SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = process['env'];\n                var proxy = this.connURL.indexOf('wss://') == 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            } else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        } catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\n    WebSocketConnection.prototype.start = function () {};\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n    };\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return __WEBPACK_IMPORTED_MODULE_6__core_storage_storage__[\"a\" /* PersistentStorage */].isInMemoryStorage || __WEBPACK_IMPORTED_MODULE_6__core_storage_storage__[\"a\" /* PersistentStorage */].get('previous_websocket_failure') === true;\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        __WEBPACK_IMPORTED_MODULE_6__core_storage_storage__[\"a\" /* PersistentStorage */].remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = Object(__WEBPACK_IMPORTED_MODULE_7__utils_json__[\"a\" /* jsonEval */])(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        Object(__WEBPACK_IMPORTED_MODULE_1__utils_assert__[\"a\" /* assert */])(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        } else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = Object(__WEBPACK_IMPORTED_MODULE_7__utils_json__[\"b\" /* stringify */])(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = Object(__WEBPACK_IMPORTED_MODULE_2__core_util_util__[\"z\" /* splitStringBySize */])(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        } catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}();\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(34)))\n\n/***/ }),\n/* 55 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ServerActions; });\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\nvar ServerActions = /** @class */function () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n  ServerActions.prototype.reportStats = function (stats) {};\n  return ServerActions;\n}();\n\n\n/***/ }),\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (immutable) */ __webpack_exports__[\"registerDatabase\"] = registerDatabase;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__database_api_Database__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__database_api_Query__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__database_api_Reference__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__database_core_util_util__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__database_core_RepoManager__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__database_api_internal__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__database_api_test_access__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_environment__ = __webpack_require__(13);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n\nfunction registerDatabase(instance) {\n    // Register the Database Service with the 'firebase' namespace.\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) {\n        return __WEBPACK_IMPORTED_MODULE_5__database_core_RepoManager__[\"a\" /* RepoManager */].getInstance().databaseFromApp(app, url);\n    },\n    // firebase.database namespace properties\n    {\n        Reference: __WEBPACK_IMPORTED_MODULE_3__database_api_Reference__[\"a\" /* Reference */],\n        Query: __WEBPACK_IMPORTED_MODULE_2__database_api_Query__[\"a\" /* Query */],\n        Database: __WEBPACK_IMPORTED_MODULE_1__database_api_Database__[\"a\" /* Database */],\n        enableLogging: __WEBPACK_IMPORTED_MODULE_4__database_core_util_util__[\"j\" /* enableLogging */],\n        INTERNAL: __WEBPACK_IMPORTED_MODULE_6__database_api_internal__,\n        ServerValue: __WEBPACK_IMPORTED_MODULE_1__database_api_Database__[\"a\" /* Database */].ServerValue,\n        TEST_ACCESS: __WEBPACK_IMPORTED_MODULE_7__database_api_test_access__\n    }, null, true);\n    if (Object(__WEBPACK_IMPORTED_MODULE_8__utils_environment__[\"b\" /* isNodeSdk */])()) {\n        module.exports = namespace;\n    }\n}\nregisterDatabase(__WEBPACK_IMPORTED_MODULE_0__app__[\"default\"]);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(63)(module)))\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forceLongPolling\", function() { return forceLongPolling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forceWebSockets\", function() { return forceWebSockets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWebSocketsAvailable\", function() { return isWebSocketsAvailable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSecurityDebugCallback\", function() { return setSecurityDebugCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stats\", function() { return stats; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"statsIncrementCounter\", function() { return statsIncrementCounter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataUpdateCount\", function() { return dataUpdateCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interceptServerData\", function() { return interceptServerData; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__realtime_WebSocketConnection__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__realtime_BrowserPollConnection__ = __webpack_require__(53);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\nvar forceLongPolling = function forceLongPolling() {\n    __WEBPACK_IMPORTED_MODULE_0__realtime_WebSocketConnection__[\"a\" /* WebSocketConnection */].forceDisallow();\n    __WEBPACK_IMPORTED_MODULE_1__realtime_BrowserPollConnection__[\"a\" /* BrowserPollConnection */].forceAllow();\n};\nvar forceWebSockets = function forceWebSockets() {\n    __WEBPACK_IMPORTED_MODULE_1__realtime_BrowserPollConnection__[\"a\" /* BrowserPollConnection */].forceDisallow();\n};\n/* Used by App Manager */\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n    return __WEBPACK_IMPORTED_MODULE_0__realtime_WebSocketConnection__[\"a\" /* WebSocketConnection */]['isAvailable']();\n};\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nvar stats = function stats(ref, showDelta) {\n    ref.repo.stats(showDelta);\n};\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n    ref.repo.statsIncrementCounter(metric);\n};\nvar dataUpdateCount = function dataUpdateCount(ref) {\n    return ref.repo.dataUpdateCount;\n};\nvar interceptServerData = function interceptServerData(ref, callback) {\n    return ref.repo.interceptServerData_(callback);\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataConnection\", function() { return DataConnection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RealTimeConnection\", function() { return RealTimeConnection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hijackHash\", function() { return hijackHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionTarget\", function() { return ConnectionTarget; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryIdentifier\", function() { return queryIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listens\", function() { return listens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forceRestClient\", function() { return forceRestClient; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_RepoInfo__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_RepoManager__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__realtime_Connection__ = __webpack_require__(52);\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\nvar DataConnection = __WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */];\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n__WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */].prototype.simpleListen = function (pathString, onComplete) {\n    this.sendRequest('q', { p: pathString }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n__WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */].prototype.echo = function (data, onEcho) {\n    this.sendRequest('echo', { d: data }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection = __WEBPACK_IMPORTED_MODULE_3__realtime_Connection__[\"a\" /* Connection */];\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\nvar hijackHash = function hijackHash(newHash) {\n    var oldPut = __WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */].prototype.put;\n    __WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */].prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n        if (opt_hash !== undefined) {\n            opt_hash = newHash();\n        }\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n    };\n    return function () {\n        __WEBPACK_IMPORTED_MODULE_1__core_PersistentConnection__[\"a\" /* PersistentConnection */].prototype.put = oldPut;\n    };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\nvar ConnectionTarget = __WEBPACK_IMPORTED_MODULE_0__core_RepoInfo__[\"a\" /* RepoInfo */];\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\nvar queryIdentifier = function queryIdentifier(query) {\n    return query.queryIdentifier();\n};\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\nvar listens = function listens(firebaseRef) {\n    return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n    __WEBPACK_IMPORTED_MODULE_2__core_RepoManager__[\"a\" /* RepoManager */].getInstance().forceRestClient(_forceRestClient);\n};\n\n/***/ })\n],[62]);\n          } catch(error) {\n            throw new Error(\n              'Cannot instantiate firebase-database.js - ' +\n              'be sure to load firebase-app.js first.'\n            )\n          }\n\n\n// WEBPACK FOOTER //\n// firebase-database.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nexport const assert = function(assertion, message) {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\nexport const assertionError = function(message) {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/assert.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { globalScope } from './globalScope';\n\nconst stringToByteArray = function(str) {\n  var output = [],\n    p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    while (c > 255) {\n      output[p++] = c & 255;\n      c >>= 8;\n    }\n    output[p++] = c;\n  }\n  return output;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\nconst byteArrayToString = function(bytes) {\n  var CHUNK_SIZE = 8192;\n\n  // Special-case the simple case for speed's sake.\n  if (bytes.length < CHUNK_SIZE) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  // The remaining logic splits conversion by chunks since\n  // Function#apply() has a maximum parameter count.\n  // See discussion: http://goo.gl/LrWmZ9\n\n  var str = '';\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    var chunk = bytes.slice(i, i + CHUNK_SIZE);\n    str += String.fromCharCode.apply(null, chunk);\n  }\n  return str;\n};\n\n// Static lookup maps, lazily populated by init_()\nexport const base64 = {\n  /**\n   * Maps bytes to characters.\n   * @type {Object}\n   * @private\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   * @type {Object}\n   * @private\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @type {Object}\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @type {Object}\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   * @type {string}\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   * @type {string}\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   * @type {string}\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   * @type {boolean}\n   */\n  HAS_NATIVE_SUPPORT: typeof globalScope.atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param {boolean=} opt_webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return {string} The base64 encoded string.\n   */\n  encodeByteArray(input, opt_webSafe?) {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    var byteToCharMap = opt_webSafe\n      ? this.byteToCharMapWebSafe_\n      : this.byteToCharMap_;\n\n    var output = [];\n\n    for (var i = 0; i < input.length; i += 3) {\n      var byte1 = input[i];\n      var haveByte2 = i + 1 < input.length;\n      var byte2 = haveByte2 ? input[i + 1] : 0;\n      var haveByte3 = i + 2 < input.length;\n      var byte3 = haveByte3 ? input[i + 2] : 0;\n\n      var outByte1 = byte1 >> 2;\n      var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      var outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param {string} input A string to encode.\n   * @param {boolean=} opt_webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return {string} The base64 encoded string.\n   */\n  encodeString(input, opt_webSafe) {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param {string} input to decode.\n   * @param {boolean=} opt_webSafe True if we should use the\n   *     alternative alphabet.\n   * @return {string} string representing the decoded value.\n   */\n  decodeString(input, opt_webSafe) {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param {string} input Input to decode.\n   * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n   * @return {!Array<number>} bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input, opt_webSafe) {\n    this.init_();\n\n    var charToByteMap = opt_webSafe\n      ? this.charToByteMapWebSafe_\n      : this.charToByteMap_;\n\n    var output = [];\n\n    for (var i = 0; i < input.length; ) {\n      var byte1 = charToByteMap[input.charAt(i++)];\n\n      var haveByte2 = i < input.length;\n      var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      var haveByte3 = i < input.length;\n      var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      var haveByte4 = i < input.length;\n      var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      var outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 != 64) {\n        var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 != 64) {\n          var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/crypt.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nexport class Hash {\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  blockSize: number = -1;\n\n  constructor() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/hash.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Hash } from './hash';\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nexport class Sha1 extends Hash {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @type {!Array<number>}\n   * @private\n   */\n  private chain_: Array<number> = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @type {!Array<number>}\n   * @private\n   */\n  private buf_: Array<number> = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @type {!Array<number>}\n   * @private\n   */\n  private W_: Array<number> = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @type {!Array<number>}\n   * @private\n   */\n  private pad_: Array<number> = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  constructor() {\n    super();\n\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (var i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset() {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n   * @param {number=} opt_offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf, opt_offset?) {\n    if (!opt_offset) {\n      opt_offset = 0;\n    }\n\n    var W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (var i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(opt_offset) << 24) |\n          (buf.charCodeAt(opt_offset + 1) << 16) |\n          (buf.charCodeAt(opt_offset + 2) << 8) |\n          buf.charCodeAt(opt_offset + 3);\n        opt_offset += 4;\n      }\n    } else {\n      for (var i = 0; i < 16; i++) {\n        W[i] =\n          (buf[opt_offset] << 24) |\n          (buf[opt_offset + 1] << 16) |\n          (buf[opt_offset + 2] << 8) |\n          buf[opt_offset + 3];\n        opt_offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (var i = 16; i < 80; i++) {\n      var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    var a = this.chain_[0];\n    var b = this.chain_[1];\n    var c = this.chain_[2];\n    var d = this.chain_[3];\n    var e = this.chain_[4];\n    var f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (var i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes, opt_length?) {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (opt_length === undefined) {\n      opt_length = bytes.length;\n    }\n\n    var lengthMinusBlock = opt_length - this.blockSize;\n    var n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    var buf = this.buf_;\n    var inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < opt_length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf == 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < opt_length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf == this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < opt_length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf == this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += opt_length;\n  }\n\n  /** @override */\n  digest() {\n    var digest = [];\n    var totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (var i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    var n = 0;\n    for (var i = 0; i < 5; i++) {\n      for (var j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Sha1.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../../api/Query';\n\ndeclare const window: any;\ndeclare const Windows: any;\n\nimport { assert } from '../../../utils/assert';\nimport { forEach } from '../../../utils/obj';\nimport { base64 } from '../../../utils/crypt';\nimport { Sha1 } from '../../../utils/Sha1';\nimport { stringToByteArray } from '../../../utils/utf8';\nimport { stringify } from '../../../utils/json';\nimport { SessionStorage } from '../storage/storage';\nimport { isNodeSdk } from '../../../utils/environment';\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexport const LUIDGenerator: (() => number) = (function() {\n  let id = 1;\n  return function() {\n    return id++;\n  };\n})();\n\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexport const base64Encode = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/ true);\n};\n\nlet BufferImpl;\nexport function setBufferImpl(impl) {\n  BufferImpl = impl;\n}\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexport const base64Decode = function(str: string): string | null {\n  try {\n    if (BufferImpl) {\n      return new BufferImpl(str, 'base64').toString('utf8');\n    } else {\n      return base64.decodeString(str, /*useWebSafe=*/ true);\n    }\n  } catch (e) {\n    log('base64Decode failed: ', e);\n  }\n  return null;\n};\n\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function(str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nconst buildLogMessage_ = function(...var_args: any[]): string {\n  let message = '';\n  for (let i = 0; i < var_args.length; i++) {\n    if (\n      Array.isArray(var_args[i]) ||\n      (var_args[i] &&\n        typeof var_args[i] === 'object' &&\n        typeof var_args[i].length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, var_args[i]);\n    } else if (typeof var_args[i] === 'object') {\n      message += stringify(var_args[i]);\n    } else {\n      message += var_args[i];\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function(\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || (logger_ === true || logger_ === false),\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    if (typeof console !== 'undefined') {\n      if (typeof console.log === 'function') {\n        logger = console.log.bind(console);\n      } else if (typeof console.log === 'object') {\n        // IE does this.\n        logger = function(message) {\n          console.log(message);\n        };\n      }\n    }\n    if (persistent) SessionStorage.set('logging_enabled', true);\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexport const log = function(...var_args: string[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true)\n      enableLogging(true);\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, var_args);\n    logger(message);\n  }\n};\n\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexport const logWrapper = function(\n  prefix: string\n): (...var_args: any[]) => void {\n  return function(...var_args: any[]) {\n    log(prefix, ...var_args);\n  };\n};\n\n/**\n * @param {...string} var_args\n */\nexport const error = function(...var_args: string[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...var_args);\n    if (typeof console.error !== 'undefined') {\n      console.error(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * @param {...string} var_args\n */\nexport const fatal = function(...var_args: string[]) {\n  const message = buildLogMessage_(...var_args);\n  throw new Error('FIREBASE FATAL ERROR: ' + message);\n};\n\n/**\n * @param {...*} var_args\n */\nexport const warn = function(...var_args: any[]) {\n  if (typeof console !== 'undefined') {\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...var_args);\n    if (typeof console.warn !== 'undefined') {\n      console.warn(message);\n    } else {\n      console.log(message);\n    }\n  }\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\n/**\n * @param {!String} methodName\n */\nexport const warnAboutUnsupportedMethod = function(methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexport const isInvalidJSONNumber = function(data: any): boolean {\n  return (\n    typeof data === 'number' &&\n    (data != data || // NaN\n      data == Number.POSITIVE_INFINITY ||\n      data == Number.NEGATIVE_INFINITY)\n  );\n};\n\n/**\n * @param {function()} fn\n */\nexport const executeWhenDOMReady = function(fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    let wrappedFn = function() {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n    } else if ((document as any).attachEvent) {\n      // IE.\n      (document as any).attachEvent('onreadystatechange', function() {\n        if (document.readyState === 'complete') wrappedFn();\n      });\n      // fallback to onload.\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexport const nameCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexport const stringCompare = function(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexport const requireKey = function(\n  key: string,\n  obj: { [k: string]: any }\n): any {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\n/**\n * @param {*} obj\n * @return {string}\n */\nexport const ObjectToUniqueKey = function(obj: any): string {\n  if (typeof obj !== 'object' || obj === null) return stringify(obj);\n\n  const keys = [];\n  for (let k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) key += ',';\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function(\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexport const each = function(\n  obj: Object | Array<any>,\n  fn: (v?: any, k?: any) => void\n) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; ++i) {\n      fn(i, obj[i]);\n    }\n  } else {\n    /**\n     * in the conversion of code we removed the goog.object.forEach\n     * function which did a value,key callback. We standardized on\n     * a single impl that does a key, value callback. So we invert\n     * to not have to touch the `each` code points\n     */\n    forEach(obj, (key: any, val: any) => fn(val, key));\n  }\n};\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexport const bindCallback = function(\n  callback: (a: any) => void,\n  context?: object | null\n): Function {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexport const doubleToIEEE754String = function(v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  let bias = (1 << (ebits - 1)) - 1,\n    s,\n    e,\n    f,\n    ln,\n    i,\n    bits,\n    str;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) hexByte = '0' + hexByte;\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexport const isChromeExtensionContentScript = function(): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexport const isWindowsStoreApp = function(): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexport const errorForServerCode = function(code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code == 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code == 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexport const tryParseInt = function(str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexport const exceptionGuard = function(fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function() {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function(\n  callback?: Function | null,\n  ...var_args: any[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(function() {\n      callback(...var_args);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function(): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexport const exportPropGetter = function(\n  object: Object,\n  name: string,\n  fnGet: () => any\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function(\n  fn: Function,\n  time: number\n): number | Object {\n  const timeout: number | Object = setTimeout(fn, time);\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/util.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\n\nexport const contains = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nexport const safeGet = function(obj, key) {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];\n  // else return undefined.\n};\n\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexport const forEach = function(obj, fn) {\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n};\n\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexport const extend = function(objTo, objFrom) {\n  forEach(objFrom, function(key, value) {\n    objTo[key] = value;\n  });\n  return objTo;\n};\n\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexport const clone = function(obj) {\n  return extend({}, obj);\n};\n\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexport const isNonNullObject = function(obj) {\n  return typeof obj === 'object' && obj !== null;\n};\n\nexport const isEmpty = function(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n};\n\nexport const getCount = function(obj) {\n  var rv = 0;\n  for (var key in obj) {\n    rv++;\n  }\n  return rv;\n};\n\nexport const map = function(obj, f, opt_obj?) {\n  var res = {};\n  for (var key in obj) {\n    res[key] = f.call(opt_obj, obj[key], key, obj);\n  }\n  return res;\n};\n\nexport const findKey = function(obj, fn, opt_this?) {\n  for (var key in obj) {\n    if (fn.call(opt_this, obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n};\n\nexport const findValue = function(obj, fn, opt_this?) {\n  var key = findKey(obj, fn, opt_this);\n  return key && obj[key];\n};\n\nexport const getAnyKey = function(obj) {\n  for (var key in obj) {\n    return key;\n  }\n};\n\nexport const getValues = function(obj) {\n  var res = [];\n  var i = 0;\n  for (var key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n};\n\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexport const every = function<V>(\n  obj: Object,\n  fn: (k: string, v?: V) => boolean\n): boolean {\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (!fn(key, obj[key])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/obj.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from './util';\nimport { stringLength } from '../../../utils/utf8';\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  private pieces_: string[];\n  private pieceNum_: number;\n\n  /**\n   * Singleton to represent an empty path\n   *\n   * @const\n   */\n  static get Empty() {\n    return new Path('');\n  }\n\n  /**\n   * @param {string|Array.<string>} pathOrString Path string to parse,\n   *      or another path, or the raw tokens array\n   * @param {number=} pieceNum\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  getFront(): string | null {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n\n    return this.pieces_[this.pieceNum_];\n  }\n\n  /**\n   * @return {number} The number of segments in this path\n   */\n  getLength(): number {\n    return this.pieces_.length - this.pieceNum_;\n  }\n\n  /**\n   * @return {!Path}\n   */\n  popFront(): Path {\n    let pieceNum = this.pieceNum_;\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n    return new Path(this.pieces_, pieceNum);\n  }\n\n  /**\n   * @return {?string}\n   */\n  getBack(): string | null {\n    if (this.pieceNum_ < this.pieces_.length)\n      return this.pieces_[this.pieces_.length - 1];\n\n    return null;\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];\n    }\n\n    return pathString || '/';\n  }\n\n  toUrlEncodedString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '')\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n    }\n\n    return pathString || '/';\n  }\n\n  /**\n   * Shallow copy of the parts of the path.\n   *\n   * @param {number=} begin\n   * @return {!Array<string>}\n   */\n  slice(begin: number = 0): string[] {\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  }\n\n  /**\n   * @return {?Path}\n   */\n  parent(): Path | null {\n    if (this.pieceNum_ >= this.pieces_.length) return null;\n\n    const pieces = [];\n    for (let i = this.pieceNum_; i < this.pieces_.length - 1; i++)\n      pieces.push(this.pieces_[i]);\n\n    return new Path(pieces, 0);\n  }\n\n  /**\n   * @param {string|!Path} childPathObj\n   * @return {!Path}\n   */\n  child(childPathObj: string | Path): Path {\n    const pieces = [];\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++)\n      pieces.push(this.pieces_[i]);\n\n    if (childPathObj instanceof Path) {\n      for (\n        let i = childPathObj.pieceNum_;\n        i < childPathObj.pieces_.length;\n        i++\n      ) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      const childPieces = childPathObj.split('/');\n      for (let i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) pieces.push(childPieces[i]);\n      }\n    }\n\n    return new Path(pieces, 0);\n  }\n\n  /**\n   * @return {boolean} True if there are no segments in this path\n   */\n  isEmpty(): boolean {\n    return this.pieceNum_ >= this.pieces_.length;\n  }\n\n  /**\n   * @param {!Path} outerPath\n   * @param {!Path} innerPath\n   * @return {!Path} The path from outerPath to innerPath\n   */\n  static relativePath(outerPath: Path, innerPath: Path): Path {\n    const outer = outerPath.getFront(),\n      inner = innerPath.getFront();\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error(\n        'INTERNAL ERROR: innerPath (' +\n          innerPath +\n          ') is not within ' +\n          'outerPath (' +\n          outerPath +\n          ')'\n      );\n    }\n  }\n\n  /**\n   * @param {!Path} left\n   * @param {!Path} right\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n   */\n  static comparePaths(left: Path, right: Path): number {\n    const leftKeys = left.slice();\n    const rightKeys = right.slice();\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n      if (cmp !== 0) return cmp;\n    }\n    if (leftKeys.length === rightKeys.length) return 0;\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  }\n\n  /**\n   *\n   * @param {Path} other\n   * @return {boolean} true if paths are the same.\n   */\n  equals(other: Path): boolean {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (\n      let i = this.pieceNum_, j = other.pieceNum_;\n      i <= this.pieces_.length;\n      i++, j++\n    ) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param {!Path} other\n   * @return {boolean} True if this path is a parent (or the same as) other\n   */\n  contains(other: Path): boolean {\n    let i = this.pieceNum_;\n    let j = other.pieceNum_;\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n      ++i;\n      ++j;\n    }\n    return true;\n  }\n} // end Path\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  /** @type {!Array<string>} */\n  private parts_: string[];\n  /** @type {number} Initialize to number of '/' chars needed in path. */\n  private byteLength_: number;\n\n  /**\n   * @param {!Path} path Initial Path.\n   * @param {string} errorPrefix_ Prefix for any error messages.\n   */\n  constructor(path: Path, private errorPrefix_: string) {\n    /** @type {!Array<string>} */\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    this.checkValid_();\n  }\n\n  /** @const {number} Maximum key depth. */\n  static get MAX_PATH_DEPTH() {\n    return 32;\n  }\n\n  /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n  static get MAX_PATH_LENGTH_BYTES() {\n    return 768;\n  }\n\n  /** @param {string} child */\n  push(child: string) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  }\n\n  pop() {\n    const last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last);\n    // Un-count the previous '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  }\n\n  private checkValid_() {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(\n        this.errorPrefix_ +\n          'has a key path longer than ' +\n          ValidationPath.MAX_PATH_LENGTH_BYTES +\n          ' bytes (' +\n          this.byteLength_ +\n          ').'\n      );\n    }\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(\n        this.errorPrefix_ +\n          'path specified exceeds the maximum depth that can be written (' +\n          ValidationPath.MAX_PATH_DEPTH +\n          ') or object contains a cycle ' +\n          this.toErrorString()\n      );\n    }\n  }\n\n  /**\n   * String for use in error messages - uses '.' notation for path.\n   *\n   * @return {string}\n   */\n  toErrorString(): string {\n    if (this.parts_.length == 0) {\n      return '';\n    }\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/Path.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { LeafNode } from '../LeafNode';\n\nlet nodeFromJSON: (a: any) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: any) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nexport class PriorityIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: any, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/indexes/PriorityIndex.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { sha1, MAX_NAME, MIN_NAME } from '../util/util';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { Node, NamedNode } from './Node';\nimport { validatePriorityNode, priorityHashText, setMaxNode } from './snap';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { Path } from '../util/Path';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   *\n   * @param {!SortedMap.<string, !Node>} children_ List of children\n   * of this node..\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n   * @param {!IndexMap} indexMap_\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = path.getFront();\n    if (front === null) return this;\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap, newPriority;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = path.getFront();\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        path.getFront() !== '.priority' || path.getLength() === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        path.popFront(),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  /**\n   * @private\n   * @type {RegExp}\n   */\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) return null;\n\n    const obj: { [k: string]: Object } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function(key: string, childNode: Node) {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: Object[] = [];\n      for (let key in obj) array[(key as any) as number] = obj[key];\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty())\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n\n      this.forEachChild(PRIORITY_INDEX, function(key, childNode) {\n        const childHash = childNode.hash();\n        if (childHash !== '') toHash += ':' + key + ':' + childHash;\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?string}\n   */\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?NamedNode}\n   */\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   * @param {!Index} indexDefinition\n   * @return {?string}\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {?NamedNode}\n   */\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachChild(index: Index, action: (key: string, node: Node) => void): any {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(function(wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {SortedMapIterator}\n   */\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  /**\n   *\n   * @param {!NamedNode} startPost\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  /**\n   * @param {!NamedNode} endPost\n   * @param {!Index} indexDefinition\n   * @return {!SortedMapIterator}\n   */\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function(key) {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   * @private\n   * @param {!Index} indexDefinition\n   * @return {?SortedMap.<NamedNode, Node>}\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/ChildrenNode.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @return {boolean} Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @return {!Node} The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param {!Node} newPriorityNode New priority to set for the node.\n   * @return {!Node} Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param {string} childName The name of the child to retrieve.\n   * @return {!Node} The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param {!Path} path The path of the child to retrieve.\n   * @return {!Node} The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param {!string} childName The name of the child to find the predecessor of.\n   * @param {!Node} childNode The node to find the predecessor of.\n   * @param {!Index} index The index to use to determine the predecessor\n   * @return {?string} The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: String,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param {string} childName The name of the child to update.\n   * @param {!Node} newChildNode The new child node\n   * @return {!Node} The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param {!Path} path The path of the child to update.\n   * @param {!Node} newChildNode The new child node, which may be an empty node\n   * @return {!Node} The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   * @param {!string} childName\n   * @return {boolean}\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @return {boolean} True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @return {number} The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param {!Index} index\n   * @param {function(string, !Node)} action Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @return {*} The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): any;\n\n  /**\n   * @param {boolean=} exportFormat True for export format (also wire protocol format).\n   * @return {*} Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): Object;\n\n  /**\n   * @return {string} hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param {!Node} other Another node\n   * @return {!number} -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @param {!Node} other\n   * @return {boolean} Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {!Node} This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {boolean}\n   */\n  isIndexed(indexDefinition: Index): boolean;\n}\n\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  /**\n   *\n   * @param {!string} name\n   * @param {!Node} node\n   * @return {NamedNode}\n   */\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/Node.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport const jsonEval = function(str) {\n  return JSON.parse(str);\n};\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport const stringify = function(data) {\n  return JSON.stringify(data);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/json.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function(fnName, minCount, maxCount, argCount) {\n  var argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    var error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName, argumentNumber, optional) {\n  var argName = '';\n  switch (argumentNumber) {\n    case 1:\n      argName = optional ? 'first' : 'First';\n      break;\n    case 2:\n      argName = optional ? 'second' : 'Second';\n      break;\n    case 3:\n      argName = optional ? 'third' : 'Third';\n      break;\n    case 4:\n      argName = optional ? 'fourth' : 'Fourth';\n      break;\n    default:\n      throw new Error(\n        'errorPrefix called with argumentNumber > 4.  Need to update it?'\n      );\n  }\n\n  var error = fnName + ' failed: ';\n\n  error += argName + ' argument ';\n  return error;\n}\n\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nexport const validateNamespace = function(\n  fnName,\n  argumentNumber,\n  namespace,\n  optional\n) {\n  if (optional && !namespace) return;\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, argumentNumber, optional) +\n        'must be a valid firebase namespace.'\n    );\n  }\n};\n\nexport const validateCallback = function(\n  fnName,\n  argumentNumber,\n  callback,\n  optional\n) {\n  if (optional && !callback) return;\n  if (typeof callback !== 'function')\n    throw new Error(\n      errorPrefix(fnName, argumentNumber, optional) +\n        'must be a valid function.'\n    );\n};\n\nexport const validateContextObject = function(\n  fnName,\n  argumentNumber,\n  context,\n  optional\n) {\n  if (optional && !context) return;\n  if (typeof context !== 'object' || context === null)\n    throw new Error(\n      errorPrefix(fnName, argumentNumber, optional) +\n        'must be a valid context object.'\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/validation.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, ValidationPath } from './Path';\nimport { forEach, contains, safeGet } from '../../../utils/obj';\nimport { isInvalidJSONNumber } from './util';\nimport { errorPrefix as errorPrefixFxn } from '../../../utils/validation';\nimport { stringLength } from '../../../utils/utf8';\nimport { RepoInfo } from '../RepoInfo';\n\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\n/**\n * @param {*} key\n * @return {boolean}\n */\nexport const isValidKey = function(key: any): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidPathString = function(pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexport const isValidRootPathString = function(pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexport const isValidPriority = function(priority: any): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority && typeof priority === 'object' && contains(priority, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseDataArg = function(\n  fnName: string,\n  argumentNumber: number,\n  data: any,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) return;\n\n  validateFirebaseData(\n    errorPrefixFxn(fnName, argumentNumber, optional),\n    data,\n    path\n  );\n};\n\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexport const validateFirebaseData = function(\n  errorPrefix: string,\n  data: any,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        path.toErrorString() +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString()\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        path.toErrorString() +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false,\n      hasActualChild = false;\n    forEach(data, function(key: string, value: any) {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              path.toErrorString() +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          path.toErrorString() +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexport const validateFirebaseMergePaths = function(\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = curPath.slice();\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(Path.comparePaths);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexport const validateFirebaseMergeDataArg = function(\n  fnName: string,\n  argumentNumber: number,\n  data: any,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) return;\n\n  const errorPrefix = errorPrefixFxn(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  forEach(data, function(key: string, value: any) {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function(\n  fnName: string,\n  argumentNumber: number,\n  priority: any,\n  optional: boolean\n) {\n  if (optional && priority === undefined) return;\n  if (isInvalidJSONNumber(priority))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n};\n\nexport const validateEventType = function(\n  fnName: string,\n  argumentNumber: number,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) return;\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n\nexport const validateKey = function(\n  fnName: string,\n  argumentNumber: number,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) return;\n  if (!isValidKey(key))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n};\n\nexport const validatePathString = function(\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) return;\n\n  if (!isValidPathString(pathString))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n};\n\nexport const validateRootPathString = function(\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nexport const validateWritablePath = function(fnName: string, path: Path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function(\n  fnName: string,\n  argumentNumber: number,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    !isValidKey(parsedUrl.repoInfo.namespace) ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, false) +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateCredential = function(\n  fnName: string,\n  argumentNumber: number,\n  cred: any,\n  optional: boolean\n) {\n  if (optional && cred === undefined) return;\n  if (!(typeof cred === 'string'))\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid credential (a string).'\n    );\n};\n\nexport const validateBoolean = function(\n  fnName: string,\n  argumentNumber: number,\n  bool: any,\n  optional: boolean\n) {\n  if (optional && bool === undefined) return;\n  if (typeof bool !== 'boolean')\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) + 'must be a boolean.'\n    );\n};\n\nexport const validateString = function(\n  fnName: string,\n  argumentNumber: number,\n  string: any,\n  optional: boolean\n) {\n  if (optional && string === undefined) return;\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function(\n  fnName: string,\n  argumentNumber: number,\n  obj: any,\n  optional: boolean\n) {\n  if (optional && obj === undefined) return;\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function(\n  fnName: string,\n  argumentNumber: number,\n  obj: any,\n  key: string,\n  optional: boolean,\n  opt_type?: string\n) {\n  const objectContainsKey =\n    obj && typeof obj === 'object' && contains(obj, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (opt_type) {\n    const val = safeGet(obj, key);\n    if (\n      (opt_type === 'number' && !(typeof val === 'number')) ||\n      (opt_type === 'string' && !(typeof val === 'string')) ||\n      (opt_type === 'boolean' && !(typeof val === 'boolean')) ||\n      (opt_type === 'function' && !(typeof val === 'function')) ||\n      (opt_type === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            opt_type +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            opt_type +\n            '\"'\n        );\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/validation.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  /**\n   * @type {!OperationSource}\n   */\n  source: OperationSource;\n\n  /**\n   * @type {!OperationType}\n   */\n  type: OperationType;\n\n  /**\n   * @type {!Path}\n   */\n  path: Path;\n\n  /**\n   * @param {string} childName\n   * @return {?Operation}\n   */\n  operationForChild(childName: string): Operation | null;\n}\n\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nexport class OperationSource {\n  constructor(\n    public fromUser: boolean,\n    public fromServer: boolean,\n    public queryId: string | null,\n    public tagged: boolean\n  ) {\n    assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static User = new OperationSource(\n    /*fromUser=*/ true,\n    false,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @const\n   * @type {!OperationSource}\n   */\n  static Server = new OperationSource(\n    false,\n    /*fromServer=*/ true,\n    null,\n    /*tagged=*/ false\n  );\n\n  /**\n   * @param {string} queryId\n   * @return {!OperationSource}\n   */\n  static forServerTaggedQuery = function(queryId: string): OperationSource {\n    return new OperationSource(\n      false,\n      /*fromServer=*/ true,\n      queryId,\n      /*tagged=*/ true\n    );\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/operation/Operation.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexport const getUA = function() {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n};\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexport const isMobileCordova = function() {\n  return (\n    typeof window !== 'undefined' &&\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n};\n\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexport const isReactNative = function() {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n};\n\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexport const isNodeSdk = function() {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/environment.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nexport class Change {\n  constructor(\n    public type: string,\n    public snapshotNode: Node,\n    public childName?: string,\n    public oldSnap?: Node,\n    public prevName?: string\n  ) {}\n\n  /**\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static valueChange(snapshot: Node): Change {\n    return new Change(Change.VALUE, snapshot);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childAddedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childRemovedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} newSnapshot\n   * @param {!Node} oldSnapshot\n   * @return {!Change}\n   */\n  static childChangedChange(\n    childKey: string,\n    newSnapshot: Node,\n    oldSnapshot: Node\n  ): Change {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  }\n\n  /**\n   * @param {string} childKey\n   * @param {!Node} snapshot\n   * @return {!Change}\n   */\n  static childMovedChange(childKey: string, snapshot: Node): Change {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }\n\n  //event types\n  /** Event type for a child added */\n  static CHILD_ADDED = 'child_added';\n\n  /** Event type for a child removed */\n  static CHILD_REMOVED = 'child_removed';\n\n  /** Event type for a child changed */\n  static CHILD_CHANGED = 'child_changed';\n\n  /** Event type for a child moved */\n  static CHILD_MOVED = 'child_moved';\n\n  /** Event type for a value change */\n  static VALUE = 'value';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/Change.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { Node, NamedNode } from '../Node';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { assert, assertionError } from '../../../../utils/assert';\nimport { ChildrenNode } from '../ChildrenNode';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost() {\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/indexes/KeyIndex.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { forEach, contains } from '../../../utils/obj';\nimport { assert } from '../../../utils/assert';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { IndexMap } from './IndexMap';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { SortedMap } from '../util/SortedMap';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nexport function nodeFromJSON(\n  json: any | null,\n  priority: string | number | null = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | object;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj: { [k: string]: any } = json as object;\n    forEach(hinzeJsonObj, (key: string, child: any) => {\n      if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(hinzeJsonObj[key]);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length == 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    const jsonObj = json as object;\n    forEach(jsonObj, (key: string, childData: any) => {\n      if (contains(jsonObj, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty())\n            node = node.updateImmediateChild(key, childNode);\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/nodeFromJSON.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '4.5.0'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/constants.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '../../../utils/json';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param {string} key The key to save the value under\n   * @param {?Object} value The value being stored, or null to remove the key.\n   */\n  set(key: string, value: any | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @return {*} The value that was stored under this key, or null\n   */\n  get(key: string): any {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/storage/DOMStorageWrapper.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '../../../utils/obj';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: any } = {};\n\n  set(key: string, value: any | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): any {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/storage/MemoryStorage.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: any;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function(\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/storage/storage.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\nexport const FORGE_DOMAIN = 'firebaseio.com';\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/Constants.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node, NamedNode } from '../Node';\nimport { MIN_NAME, MAX_NAME } from '../../util/util';\nimport { Comparator } from '../../util/SortedMap';\n\n/**\n *\n * @constructor\n */\nexport abstract class Index {\n  /**\n   * @param {!NamedNode} a\n   * @param {!NamedNode} b\n   * @return {number}\n   */\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   * @param {!Node} oldNode\n   * @param {!Node} newNode\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @return {!NamedNode} a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  abstract makePost(indexValue: any, name: string): NamedNode;\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/indexes/Index.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\nimport { priorityHashText, validatePriorityNode } from './snap';\nimport { Node } from './Node';\nimport { Path } from '../util/Path';\nimport { Index } from './indexes/Index';\nimport { ChildrenNodeConstructor } from './ChildrenNode';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   * @type {Array.<!string>}\n   * @const\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @implements {Node}\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n   *                                         The object type is possible in the event of a deferred value\n   * @param {!Node=} priorityNode_ The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | object,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: String, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE\n        .updateImmediateChild(childName, newChildNode)\n        .updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = path.getFront();\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || path.getLength() === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          path.popFront(),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): any {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  val(exportFormat?: boolean): Object {\n    if (exportFormat && !this.getPriority().isEmpty())\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    else return this.getValue();\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty())\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @return {Object|string|number|boolean} The value of the node.\n   */\n  getValue(): object | string | number | boolean {\n    return this.value_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   * @param {!LeafNode} otherLeaf\n   * @return {!number}\n   * @private\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(): Node {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    /**\n     * @inheritDoc\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/LeafNode.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  /** @private\n   * @type {Array.<!LLRBNode>}\n   */\n  private nodeStack_: (LLRBNode<K, V> | LLRBEmptyNode<K, V>)[] = [];\n\n  /**\n   * @template K, V, T\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n   * @param {?K} startKey\n   * @param {function(K, K): number} comparator\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\n   * @param {(function(K, V):T)=} resultGenerator_\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) cmp *= -1;\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) return null;\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_)\n      result = this.resultGenerator_(node.key, node.value);\n    else result = { key: node.key, value: node.value } as any;\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) return null;\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as any;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @template K, V\n   * @param {!K} key Key associated with this node.\n   * @param {!V} value Value associated with this node.\n   * @param {?boolean} color Whether this node is red.\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    this.right =\n      right != null ? right : SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param {?K} key New key for the node, or null.\n   * @param {?V} value New value for the node, or null.\n   * @param {?boolean} color New color for the node, or null.\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n   * @return {!LLRBNode} The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @return {number} The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @return {boolean} True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @return {*} The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => any): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!Object, !Object)} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {*} True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @return {!Object} The minimum node in the tree.\n   * @private\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @return {!K} The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @return {!K} The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   *\n   * @param {!Object} key Key to insert.\n   * @param {!Object} value Value to insert.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode} New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let cmp, n;\n    n = this;\n    cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param {!Object} key The key of the item to remove.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) n = n.rotateRight_();\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @private\n   * @return {boolean} Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n = this as any;\n    if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();\n    if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();\n    if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @private\n   * @return {!LLRBNode} New tree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @private\n   * @return {boolean} True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  /**\n   * @private\n   * @return {number} Not sure what this returns exactly. :-).\n   */\n  check_(): number {\n    let blackDepth;\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @return {!LLRBEmptyNode} The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param {!K} key Key to be added.\n   * @param {!V} value Value to be added.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBNode} New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param {!K} key The key to remove.\n   * @param {Comparator} comparator Comparator.\n   * @return {!LLRBEmptyNode} New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @return {number} The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @return {boolean} True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {boolean} True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => any): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param {function(!K, !V)} action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return {boolean} True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  /**\n   * @return {null}\n   */\n  minKey(): null {\n    return null;\n  }\n\n  /**\n   * @return {null}\n   */\n  maxKey(): null {\n    return null;\n  }\n\n  /**\n   * @private\n   * @return {number} Not sure what this returns exactly. :-).\n   */\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @private\n   * @return {boolean} Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   * @const\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @template K, V\n   * @param {function(K, K):number} comparator_ Key comparator.\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param {!K} key Key to be added.\n   * @param {!V} value Value to be added.\n   * @return {!SortedMap.<K, V>} New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param {!K} key The key to remove.\n   * @return {!SortedMap.<K, V>} New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param {!K} key The key to look up.\n   * @return {?V} The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param {K} key The key to find the predecessor of\n   * @return {?K} The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) node = node.right;\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @return {boolean} True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @return {number} The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @return {?K} The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @return {?K} The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param {function(!K, !V):*} action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return {*} The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => any): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param {function(!Object, !Object)} action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return {*} True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @template T\n   * @param {(function(K, V):T)=} resultGenerator\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/SortedMap.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { Path } from '../util/Path';\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { ImmutableTree } from '../util/ImmutableTree';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = OperationSource.User;\n\n  /**\n   *\n   * @param {!Path} path\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n   * @param {!boolean} revert\n   */\n  constructor(\n    /**@inheritDoc */ public path: Path,\n    /**@inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /**@inheritDoc */ public revert: boolean\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): AckUserWrite {\n    if (!this.path.isEmpty()) {\n      assert(\n        this.path.getFront() === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        this.path.popFront(),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/operation/AckUserWrite.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { Operation, OperationSource, OperationType } from './Operation';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/operation/ListenComplete.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Path } from '../util/Path';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (this.path.isEmpty()) {\n      return new Overwrite(\n        this.source,\n        Path.Empty,\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/operation/Overwrite.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\nimport { Path } from '../util/Path';\nimport { assert } from '../../../utils/assert';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport { Node } from '../snap/Node';\n\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /**@inheritDoc */ public source: OperationSource,\n    /**@inheritDoc */ public path: Path,\n    /**@inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): Operation {\n    if (this.path.isEmpty()) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      assert(\n        this.path.getFront() === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/operation/Merge.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImmutableTree } from './util/ImmutableTree';\nimport { Path } from './util/Path';\nimport { forEach } from '../../utils/obj';\nimport { Node, NamedNode } from './snap/Node';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { assert } from '../../utils/assert';\nimport { ChildrenNode } from './snap/ChildrenNode';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n *\n * @constructor\n * @param {!ImmutableTree.<!Node>} writeTree\n */\nexport class CompoundWrite {\n  constructor(private writeTree_: ImmutableTree<Node>) {}\n  /**\n   * @type {!CompoundWrite}\n   */\n  static Empty = new CompoundWrite(new ImmutableTree(null));\n\n  /**\n   * @param {!Path} path\n   * @param {!Node} node\n   * @return {!CompoundWrite}\n   */\n  addWrite(path: Path, node: Node): CompoundWrite {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      const rootmost = this.writeTree_.findRootMostValueAndPath(path);\n      if (rootmost != null) {\n        const rootMostPath = rootmost.path;\n        let value = rootmost.value;\n        const relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        const subtree = new ImmutableTree(node);\n        const newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} updates\n   * @return {!CompoundWrite}\n   */\n  addWrites(path: Path, updates: { [name: string]: Node }): CompoundWrite {\n    let newWrite = this as CompoundWrite;\n    forEach(updates, function(childKey: string, node: Node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  }\n\n  /**\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n   * location, which must be removed by calling this method with that path.\n   *\n   * @param {!Path} path The path at which a write and all deeper writes should be removed\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\n   */\n  removeWrite(path: Path): CompoundWrite {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      const newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n\n  /**\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n   * considered \"complete\".\n   *\n   * @param {!Path} path The path to check for\n   * @return {boolean} Whether there is a complete write at that path\n   */\n  hasCompleteWrite(path: Path): boolean {\n    return this.getCompleteNode(path) != null;\n  }\n\n  /**\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n   * writes from deeper paths, but will return child nodes from a more shallow path.\n   *\n   * @param {!Path} path The path to get a complete write\n   * @return {?Node} The node if complete at that path, or null otherwise.\n   */\n  getCompleteNode(path: Path): Node | null {\n    const rootmost = this.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      return this.writeTree_\n        .get(rootmost.path)\n        .getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Returns all children that are guaranteed to be a complete overwrite.\n   *\n   * @return {!Array.<NamedNode>} A list of all complete children.\n   */\n  getCompleteChildren(): Array<NamedNode> {\n    const children: NamedNode[] = [];\n    let node = this.writeTree_.value;\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        (node as ChildrenNode).forEachChild(PRIORITY_INDEX, function(\n          childName,\n          childNode\n        ) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function(childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n    return children;\n  }\n\n  /**\n   * @param {!Path} path\n   * @return {!CompoundWrite}\n   */\n  childCompoundWrite(path: Path): CompoundWrite {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      const shadowingNode = this.getCompleteNode(path);\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  }\n\n  /**\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n   * @return {boolean} Whether this CompoundWrite is empty\n   */\n  isEmpty(): boolean {\n    return this.writeTree_.isEmpty();\n  }\n\n  /**\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n   * node\n   * @param {!Node} node The node to apply this CompoundWrite to\n   * @return {!Node} The node with all writes applied\n   */\n  apply(node: Node): Node {\n    return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\n  }\n\n  /**\n   * @param {!Path} relativePath\n   * @param {!ImmutableTree.<!Node>} writeTree\n   * @param {!Node} node\n   * @return {!Node}\n   * @private\n   */\n  private static applySubtreeWrite_ = function(\n    relativePath: Path,\n    writeTree: ImmutableTree<Node>,\n    node: Node\n  ): Node {\n    if (writeTree.value != null) {\n      // Since there a write is always a leaf, we're done here\n      return node.updateChild(relativePath, writeTree.value);\n    } else {\n      let priorityWrite = null;\n      writeTree.children.inorderTraversal(function(childKey, childTree) {\n        if (childKey === '.priority') {\n          // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n          // to apply priorities to empty nodes that are later filled\n          assert(\n            childTree.value !== null,\n            'Priority writes must always be leaf nodes'\n          );\n          priorityWrite = childTree.value;\n        } else {\n          node = CompoundWrite.applySubtreeWrite_(\n            relativePath.child(childKey),\n            childTree,\n            node\n          );\n        }\n      });\n      // If there was a priority write, we only apply it if the node is not empty\n      if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n        node = node.updateChild(relativePath.child('.priority'), priorityWrite);\n      }\n      return node;\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/CompoundWrite.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { findKey, forEach, safeGet } from '../../utils/obj';\nimport { assert, assertionError } from '../../utils/assert';\nimport { Path } from './util/Path';\nimport { CompoundWrite } from './CompoundWrite';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { NamedNode, Node } from './snap/Node';\nimport { CacheNode } from './view/CacheNode';\nimport { Index } from './snap/indexes/Index';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\nexport class WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   *\n   * @type {!CompoundWrite}\n   * @private\n   */\n  private visibleWrites_: CompoundWrite = CompoundWrite.Empty;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   *\n   * @type {!Array.<!WriteRecord>}\n   * @private\n   */\n  private allWrites_: WriteRecord[] = [];\n\n  private lastWriteId_ = -1;\n\n  /**\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n   *\n   * @param {!Path} path\n   * @return {!WriteTreeRef}\n   */\n  childWrites(path: Path): WriteTreeRef {\n    return new WriteTreeRef(path, this);\n  }\n\n  /**\n   * Record a new overwrite from user code.\n   *\n   * @param {!Path} path\n   * @param {!Node} snap\n   * @param {!number} writeId\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n   */\n  addOverwrite(path: Path, snap: Node, writeId: number, visible?: boolean) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older write on top of newer ones'\n    );\n    if (visible === undefined) {\n      visible = true;\n    }\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n    this.lastWriteId_ = writeId;\n  }\n\n  /**\n   * Record a new merge from user code.\n   *\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} changedChildren\n   * @param {!number} writeId\n   */\n  addMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ) {\n    assert(\n      writeId > this.lastWriteId_,\n      'Stacking an older merge on top of newer ones'\n    );\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  }\n\n  /**\n   * @param {!number} writeId\n   * @return {?WriteRecord}\n   */\n  getWrite(writeId: number): WriteRecord | null {\n    for (let i = 0; i < this.allWrites_.length; i++) {\n      const record = this.allWrites_[i];\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n   *\n   * @param {!number} writeId\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n   * events as a result).\n   */\n  removeWrite(writeId: number): boolean {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n    const idx = this.allWrites_.findIndex(function(s) {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    const writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n\n    let removedWriteWasVisible = writeToRemove.visible;\n    let removedWriteOverlapsWithOtherWrites = false;\n\n    let i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      const currentWrite = this.allWrites_[i];\n      if (currentWrite.visible) {\n        if (\n          i >= idx &&\n          this.recordContainsPath_(currentWrite, writeToRemove.path)\n        ) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(\n          writeToRemove.path\n        );\n      } else {\n        const children = writeToRemove.children;\n        forEach(children, (childName: string) => {\n          this.visibleWrites_ = this.visibleWrites_.removeWrite(\n            writeToRemove.path.child(childName)\n          );\n        });\n      }\n      return true;\n    }\n  }\n\n  /**\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n   * No server data is considered.\n   *\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  getCompleteWriteData(path: Path): Node | null {\n    return this.visibleWrites_.getCompleteNode(path);\n  }\n\n  /**\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n   * writes), attempt to calculate a complete snapshot for the given path\n   *\n   * @param {!Path} treePath\n   * @param {?Node} completeServerCache\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   * @return {?Node}\n   */\n  calcCompleteEventCache(\n    treePath: Path,\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      const shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        const subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (\n          completeServerCache == null &&\n          !subMerge.hasCompleteWrite(Path.Empty)\n        ) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (\n          !includeHiddenWrites &&\n          completeServerCache == null &&\n          !merge.hasCompleteWrite(Path.Empty)\n        ) {\n          return null;\n        } else {\n          const filter = function(write: WriteRecord) {\n            return (\n              (write.visible || includeHiddenWrites) &&\n              (!writeIdsToExclude ||\n                !~writeIdsToExclude.indexOf(write.writeId)) &&\n              (write.path.contains(treePath) || treePath.contains(write.path))\n            );\n          };\n          const mergeAtPath = WriteTree.layerTree_(\n            this.allWrites_,\n            filter,\n            treePath\n          );\n          const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  }\n\n  /**\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n   * Used when creating new views, to pre-fill their complete event children snapshot.\n   *\n   * @param {!Path} treePath\n   * @param {?ChildrenNode} completeServerChildren\n   * @return {!ChildrenNode}\n   */\n  calcCompleteEventChildren(\n    treePath: Path,\n    completeServerChildren: ChildrenNode | null\n  ) {\n    let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n    const topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function(\n          childName,\n          childSnap\n        ) {\n          completeChildren = completeChildren.updateImmediateChild(\n            childName,\n            childSnap\n          );\n        });\n      }\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function(\n        childName,\n        childNode\n      ) {\n        const node = merge\n          .childCompoundWrite(new Path(childName))\n          .apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      });\n      // Add any complete children we have from the set\n      merge.getCompleteChildren().forEach(function(namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      const merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function(namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(\n          namedNode.name,\n          namedNode.node\n        );\n      });\n      return completeChildren;\n    }\n  }\n\n  /**\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\n   * applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events\n   *\n   * Either existingEventSnap or existingServerSnap must exist\n   *\n   * @param {!Path} treePath\n   * @param {!Path} childPath\n   * @param {?Node} existingEventSnap\n   * @param {?Node} existingServerSnap\n   * @return {?Node}\n   */\n  calcEventCacheAfterServerOverwrite(\n    treePath: Path,\n    childPath: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    assert(\n      existingEventSnap || existingServerSnap,\n      'Either existingEventSnap or existingServerSnap must exist'\n    );\n    const path = treePath.child(childPath);\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      const childMerge = this.visibleWrites_.childCompoundWrite(path);\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   *\n   * @param {!Path} treePath\n   * @param {!string} childKey\n   * @param {!CacheNode} existingServerSnap\n   * @return {?Node}\n   */\n  calcCompleteChild(\n    treePath: Path,\n    childKey: string,\n    existingServerSnap: CacheNode\n  ): Node | null {\n    const path = treePath.child(childKey);\n    const shadowingNode = this.visibleWrites_.getCompleteNode(path);\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        const childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(\n          existingServerSnap.getNode().getImmediateChild(childKey)\n        );\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   *\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  shadowingWrite(path: Path): Node | null {\n    return this.visibleWrites_.getCompleteNode(path);\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window.\n   *\n   * @param {!Path} treePath\n   * @param {?Node} completeServerData\n   * @param {!NamedNode} startPost\n   * @param {!number} count\n   * @param {boolean} reverse\n   * @param {!Index} index\n   * @return {!Array.<!NamedNode>}\n   */\n  calcIndexedSlice(\n    treePath: Path,\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    let toIterate: Node;\n    const merge = this.visibleWrites_.childCompoundWrite(treePath);\n    const shadowingNode = merge.getCompleteNode(Path.Empty);\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n    toIterate = toIterate.withIndex(index);\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      const nodes = [];\n      const cmp = index.getCompare();\n      const iter = reverse\n        ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n        : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n      let next = iter.getNext();\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n        next = iter.getNext();\n      }\n      return nodes;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @param {!WriteRecord} writeRecord\n   * @param {!Path} path\n   * @return {boolean}\n   * @private\n   */\n  private recordContainsPath_(writeRecord: WriteRecord, path: Path): boolean {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      // findKey can return undefined, so use !! to coerce to boolean\n      return !!findKey(writeRecord.children, function(\n        childSnap: Node,\n        childName: string\n      ) {\n        return writeRecord.path.child(childName).contains(path);\n      });\n    }\n  }\n\n  /**\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n   * @private\n   */\n  private resetTree_() {\n    this.visibleWrites_ = WriteTree.layerTree_(\n      this.allWrites_,\n      WriteTree.DefaultFilter_,\n      Path.Empty\n    );\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  }\n\n  /**\n   * The default filter used when constructing the tree. Keep everything that's visible.\n   *\n   * @param {!WriteRecord} write\n   * @return {boolean}\n   * @private\n   */\n  private static DefaultFilter_(write: WriteRecord) {\n    return write.visible;\n  }\n\n  /**\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n   * event data at that path.\n   *\n   * @param {!Array.<!WriteRecord>} writes\n   * @param {!function(!WriteRecord):boolean} filter\n   * @param {!Path} treeRoot\n   * @return {!CompoundWrite}\n   * @private\n   */\n  private static layerTree_(\n    writes: WriteRecord[],\n    filter: (w: WriteRecord) => boolean,\n    treeRoot: Path\n  ): CompoundWrite {\n    let compoundWrite = CompoundWrite.Empty;\n    for (let i = 0; i < writes.length; ++i) {\n      const write = writes[i];\n      // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n      if (filter(write)) {\n        const writePath = write.path;\n        let relativePath;\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(\n              Path.Empty,\n              write.snap.getChild(relativePath)\n            );\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(\n              relativePath,\n              write.children\n            );\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(\n                Path.Empty,\n                write.children\n              );\n            } else {\n              const child = safeGet(write.children, relativePath.getFront());\n              if (child) {\n                // There exists a child in this node that matches the root path\n                const deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          } else {\n            // There is no overlap between root path and write path, ignore write\n          }\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n    return compoundWrite;\n  }\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\nexport class WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   *\n   * @type {!Path}\n   * @private\n   * @const\n   */\n  private readonly treePath_: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   *\n   * @type {!WriteTree}\n   * @private\n   * @const\n   */\n  private readonly writeTree_: WriteTree;\n\n  /**\n   * @param {!Path} path\n   * @param {!WriteTree} writeTree\n   */\n  constructor(path: Path, writeTree: WriteTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n\n  /**\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n   * can lead to a more expensive calculation.\n   *\n   * @param {?Node} completeServerCache\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n   * @return {?Node}\n   */\n  calcCompleteEventCache(\n    completeServerCache: Node | null,\n    writeIdsToExclude?: number[],\n    includeHiddenWrites?: boolean\n  ): Node | null {\n    return this.writeTree_.calcCompleteEventCache(\n      this.treePath_,\n      completeServerCache,\n      writeIdsToExclude,\n      includeHiddenWrites\n    );\n  }\n\n  /**\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n   * mix of the given server data and write data.\n   *\n   * @param {?ChildrenNode} completeServerChildren\n   * @return {!ChildrenNode}\n   */\n  calcCompleteEventChildren(completeServerChildren: ChildrenNode | null): ChildrenNode {\n    return this.writeTree_.calcCompleteEventChildren(\n      this.treePath_,\n      completeServerChildren\n    ) as ChildrenNode;\n  }\n\n  /**\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n   * if anything, needs to be applied to the event cache.\n   *\n   * Possibilities:\n   *\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n   *\n   * 2. Some write is completely shadowing. No events to be raised\n   *\n   * 3. Is partially shadowed. Events should be raised\n   *\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n   *\n   * @param {!Path} path\n   * @param {?Node} existingEventSnap\n   * @param {?Node} existingServerSnap\n   * @return {?Node}\n   */\n  calcEventCacheAfterServerOverwrite(\n    path: Path,\n    existingEventSnap: Node | null,\n    existingServerSnap: Node | null\n  ): Node | null {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(\n      this.treePath_,\n      path,\n      existingEventSnap,\n      existingServerSnap\n    );\n  }\n\n  /**\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n   * a higher path, this will return the child of that write relative to the write and this path.\n   * Returns null if there is no write at this path.\n   *\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  shadowingWrite(path: Path): Node | null {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  }\n\n  /**\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n   * the window, but may now be in the window\n   *\n   * @param {?Node} completeServerData\n   * @param {!NamedNode} startPost\n   * @param {!number} count\n   * @param {boolean} reverse\n   * @param {!Index} index\n   * @return {!Array.<!NamedNode>}\n   */\n  calcIndexedSlice(\n    completeServerData: Node | null,\n    startPost: NamedNode,\n    count: number,\n    reverse: boolean,\n    index: Index\n  ): NamedNode[] {\n    return this.writeTree_.calcIndexedSlice(\n      this.treePath_,\n      completeServerData,\n      startPost,\n      count,\n      reverse,\n      index\n    );\n  }\n\n  /**\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\n   * complete child for this ChildKey.\n   *\n   * @param {!string} childKey\n   * @param {!CacheNode} existingServerCache\n   * @return {?Node}\n   */\n  calcCompleteChild(\n    childKey: string,\n    existingServerCache: CacheNode\n  ): Node | null {\n    return this.writeTree_.calcCompleteChild(\n      this.treePath_,\n      childKey,\n      existingServerCache\n    );\n  }\n\n  /**\n   * Return a WriteTreeRef for a child.\n   *\n   * @param {string} childName\n   * @return {!WriteTreeRef}\n   */\n  child(childName: string): WriteTreeRef {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/WriteTree.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils/assert';\nimport { errorForServerCode } from './util/util';\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { forEach, safeGet } from '../../utils/obj';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport { Operation, OperationSource } from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { Path } from './util/Path';\nimport { SyncPoint } from './SyncPoint';\nimport { WriteTree, WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { Node } from './snap/Node';\nimport { Event } from './view/Event';\nimport { EventRegistration } from './view/EventRegistration';\nimport { View } from './view/View';\n\n/**\n * @typedef {{\n *   startListening: function(\n *     !Query,\n *     ?number,\n *     function():string,\n *     function(!string, *):!Array.<!Event>\n *   ):!Array.<!Event>,\n *\n *   stopListening: function(!Query, ?number)\n * }}\n */\nexport interface ListenProvider {\n  startListening(\n    query: Query,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: any) => Event[]\n  ): Event[];\n\n  stopListening(a: Query, b: number | null): void;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   * @type {!ImmutableTree.<!SyncPoint>}\n   * @private\n   */\n  private syncPointTree_: ImmutableTree<SyncPoint> = ImmutableTree.Empty;\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   * @type {!WriteTree}\n   * @private\n   */\n  private pendingWriteTree_ = new WriteTree();\n\n  private tagToQueryMap_: { [k: string]: string } = {};\n  private queryToTagMap_: { [k: string]: number } = {};\n\n  /**\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(private listenProvider_: ListenProvider) {}\n\n  /**\n   * Apply the data changes for a user-generated set() or transaction() call.\n   *\n   * @param {!Path} path\n   * @param {!Node} newData\n   * @param {number} writeId\n   * @param {boolean=} visible\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyUserOverwrite(\n    path: Path,\n    newData: Node,\n    writeId: number,\n    visible?: boolean\n  ): Event[] {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(\n        new Overwrite(OperationSource.User, path, newData)\n      );\n    }\n  }\n\n  /**\n   * Apply the data from a user-generated update() call\n   *\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} changedChildren\n   * @param {!number} writeId\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyUserMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    writeId: number\n  ): Event[] {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(OperationSource.User, path, changeTree)\n    );\n  }\n\n  /**\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n   *\n   * @param {!number} writeId\n   * @param {boolean=} revert True if the given write failed and needs to be reverted\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  ackUserWrite(writeId: number, revert: boolean = false) {\n    const write = this.pendingWriteTree_.getWrite(writeId);\n    const needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      let affectedTree = ImmutableTree.Empty;\n      if (write.snap != null) {\n        // overwrite\n        affectedTree = affectedTree.set(Path.Empty, true);\n      } else {\n        forEach(write.children, function(pathString: string, node: Node) {\n          affectedTree = affectedTree.set(new Path(pathString), node);\n        });\n      }\n      return this.applyOperationToSyncPoints_(\n        new AckUserWrite(write.path, affectedTree, revert)\n      );\n    }\n  }\n\n  /**\n   * Apply new server data for the specified path..\n   *\n   * @param {!Path} path\n   * @param {!Node} newData\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyServerOverwrite(path: Path, newData: Node): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new Overwrite(OperationSource.Server, path, newData)\n    );\n  }\n\n  /**\n   * Apply new server data to be merged in at the specified path.\n   *\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} changedChildren\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyServerMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node }\n  ): Event[] {\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n\n    return this.applyOperationToSyncPoints_(\n      new Merge(OperationSource.Server, path, changeTree)\n    );\n  }\n\n  /**\n   * Apply a listen complete for a query\n   *\n   * @param {!Path} path\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyListenComplete(path: Path): Event[] {\n    return this.applyOperationToSyncPoints_(\n      new ListenComplete(OperationSource.Server, path)\n    );\n  }\n\n  /**\n   * Apply new server data for the specified tagged query.\n   *\n   * @param {!Path} path\n   * @param {!Node} snap\n   * @param {!number} tag\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyTaggedQueryOverwrite(path: Path, snap: Node, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey != null) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const op = new Overwrite(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath,\n        snap\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  }\n\n  /**\n   * Apply server data to be merged in for the specified tagged query.\n   *\n   * @param {!Path} path\n   * @param {!Object.<string, !Node>} changedChildren\n   * @param {!number} tag\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyTaggedQueryMerge(\n    path: Path,\n    changedChildren: { [k: string]: Node },\n    tag: number\n  ): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const changeTree = ImmutableTree.fromObject(changedChildren);\n      const op = new Merge(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath,\n        changeTree\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Apply a listen complete for a tagged query\n   *\n   * @param {!Path} path\n   * @param {!number} tag\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  applyTaggedListenComplete(path: Path, tag: number): Event[] {\n    const queryKey = this.queryKeyForTag_(tag);\n    if (queryKey) {\n      const r = SyncTree.parseQueryKey_(queryKey);\n      const queryPath = r.path,\n        queryId = r.queryId;\n      const relativePath = Path.relativePath(queryPath, path);\n      const op = new ListenComplete(\n        OperationSource.forServerTaggedQuery(queryId),\n        relativePath\n      );\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @param {!Query} query\n   * @param {!EventRegistration} eventRegistration\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration\n  ): Event[] {\n    const path = query.path;\n\n    let serverCache: Node | null = null;\n    let foundAncestorDefaultView = false;\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n    this.syncPointTree_.foreachOnPath(path, function(pathToSyncPoint, sp) {\n      const relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    let syncPoint = this.syncPointTree_.get(path);\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView =\n        foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    let serverCacheComplete;\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      const subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function(childName, childSyncPoint) {\n        const completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(\n            childName,\n            completeCache\n          );\n        }\n      });\n    }\n\n    const viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      const queryKey = SyncTree.makeQueryKey_(query);\n      assert(\n        !(queryKey in this.queryToTagMap_),\n        'View does not exist, but we have a tag'\n      );\n      const tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap_[queryKey] = tag;\n      // Coerce to string to avoid sparse arrays.\n      this.tagToQueryMap_['_' + tag] = queryKey;\n    }\n    const writesCache = this.pendingWriteTree_.childWrites(path);\n    let events = syncPoint.addEventRegistration(\n      query,\n      eventRegistration,\n      writesCache,\n      serverCache,\n      serverCacheComplete\n    );\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      const view /** @type !View */ = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n    return events;\n  }\n\n  /**\n   * Remove event callback(s).\n   *\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n   *\n   * @param {!Query} query\n   * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\n    const path = query.path;\n    const maybeSyncPoint = this.syncPointTree_.get(path);\n    let cancelEvents: Event[] = [];\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n    if (\n      maybeSyncPoint &&\n      (query.queryIdentifier() === 'default' ||\n        maybeSyncPoint.viewExistsForQuery(query))\n    ) {\n      /**\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n       */\n      const removedAndEvents = maybeSyncPoint.removeEventRegistration(\n        query,\n        eventRegistration,\n        cancelError\n      );\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n      const removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events;\n      // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(function(query) {\n          return query.getQueryParams().loadsAllData();\n        });\n      const covered = this.syncPointTree_.findOnPath(path, function(\n        relativePath,\n        parentSyncPoint\n      ) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        const subtree = this.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = this.collectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.getQuery();\n            const listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(\n              SyncTree.queryForListening_(newQuery),\n              this.tagForQuery_(newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        } else {\n          // There's nothing below us, so nothing we need to start listening on\n        }\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          this.listenProvider_.stopListening(\n            SyncTree.queryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: Query) => {\n            const tagToRemove = this.queryToTagMap_[\n              SyncTree.makeQueryKey_(queryToRemove)\n            ];\n            this.listenProvider_.stopListening(\n              SyncTree.queryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n      // Now, clear all of the tags we're tracking for the removed listens\n      this.removeTags_(removed);\n    } else {\n      // No-op, this listener must've been already removed\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\n   * it, but as this is only used by transaction code, that should always be the case anyways.\n   *\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n   * @param {!Path} path The path to the data we want\n   * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\n   * @return {?Node}\n   */\n  calcCompleteEventCache(\n    path: Path,\n    writeIdsToExclude?: number[]\n  ): Node | null {\n    const includeHiddenSets = true;\n    const writeTree = this.pendingWriteTree_;\n    const serverCache = this.syncPointTree_.findOnPath(path, function(\n      pathSoFar,\n      syncPoint\n    ) {\n      const relativePath = Path.relativePath(pathSoFar, path);\n      const serverCache = syncPoint.getCompleteServerCache(relativePath);\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(\n      path,\n      serverCache,\n      writeIdsToExclude,\n      includeHiddenSets\n    );\n  }\n\n  /**\n   * This collapses multiple unfiltered views into a single view, since we only need a single\n   * listener for them.\n   *\n   * @param {!ImmutableTree.<!SyncPoint>} subtree\n   * @return {!Array.<!View>}\n   * @private\n   */\n  private collectDistinctViewsForSubTree_(\n    subtree: ImmutableTree<SyncPoint>\n  ): View[] {\n    return subtree.fold<\n      View[]\n    >((relativePath, maybeChildSyncPoint, childMap) => {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        const completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        let views: View[] = [];\n        if (maybeChildSyncPoint) {\n          views = maybeChildSyncPoint.getQueryViews();\n        }\n        forEach(childMap, function(key: string, childViews: View[]) {\n          views = views.concat(childViews);\n        });\n        return views;\n      }\n    });\n  }\n\n  /**\n   * @param {!Array.<!Query>} queries\n   * @private\n   */\n  private removeTags_(queries: Query[]) {\n    for (let j = 0; j < queries.length; ++j) {\n      const removedQuery = queries[j];\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        const removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        const removedQueryTag = this.queryToTagMap_[removedQueryKey];\n        delete this.queryToTagMap_[removedQueryKey];\n        delete this.tagToQueryMap_['_' + removedQueryTag];\n      }\n    }\n  }\n\n  /**\n   * Normalizes a query to a query we send the server for listening\n   * @param {!Query} query\n   * @return {!Query} The normalized query\n   * @private\n   */\n  private static queryForListening_(query: Query): Query {\n    if (\n      query.getQueryParams().loadsAllData() &&\n      !query.getQueryParams().isDefault()\n    ) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return /** @type {!Query} */ query.getRef();\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\n   *\n   * @param {!Query} query\n   * @param {!View} view\n   * @return {!Array.<!Event>} This method can return events to support synchronous data sources\n   * @private\n   */\n  private setupListener_(query: Query, view: View): Event[] {\n    const path = query.path;\n    const tag = this.tagForQuery_(query);\n    const listener = this.createListenerForView_(view);\n\n    const events = this.listenProvider_.startListening(\n      SyncTree.queryForListening_(query),\n      tag,\n      listener.hashFn,\n      listener.onComplete\n    );\n\n    const subtree = this.syncPointTree_.subtree(path);\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n    if (tag) {\n      assert(\n        !subtree.value.hasCompleteView(),\n        \"If we're adding a query, it shouldn't be shadowed\"\n      );\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      const queriesToStop = subtree.fold<Query[]>(function(\n        relativePath,\n        maybeChildSyncPoint,\n        childMap\n      ) {\n        if (\n          !relativePath.isEmpty() &&\n          maybeChildSyncPoint &&\n          maybeChildSyncPoint.hasCompleteView()\n        ) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: Query[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              maybeChildSyncPoint.getQueryViews().map(view => view.getQuery())\n            );\n          }\n          forEach(childMap, function(key: string, childQueries: Query[]) {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      });\n      for (let i = 0; i < queriesToStop.length; ++i) {\n        const queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(\n          SyncTree.queryForListening_(queryToStop),\n          this.tagForQuery_(queryToStop)\n        );\n      }\n    }\n    return events;\n  }\n\n  /**\n   *\n   * @param {!View} view\n   * @return {{hashFn: function(), onComplete: function(!string, *)}}\n   * @private\n   */\n  private createListenerForView_(\n    view: View\n  ): { hashFn(): string; onComplete(a: string, b?: any): Event[] } {\n    const query = view.getQuery();\n    const tag = this.tagForQuery_(query);\n\n    return {\n      hashFn: () => {\n        const cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: (status: string): Event[] => {\n        if (status === 'ok') {\n          if (tag) {\n            return this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          const error = errorForServerCode(status, query);\n          return this.removeEventRegistration(\n            query,\n            /*eventRegistration*/ null,\n            error\n          );\n        }\n      }\n    };\n  }\n\n  /**\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n   * @private\n   * @param {!Query} query\n   * @return {string}\n   */\n  private static makeQueryKey_(query: Query): string {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  }\n\n  /**\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n   * @private\n   * @param {!string} queryKey\n   * @return {{queryId: !string, path: !Path}}\n   */\n  private static parseQueryKey_(\n    queryKey: string\n  ): { queryId: string; path: Path } {\n    const splitIndex = queryKey.indexOf('$');\n    assert(\n      splitIndex !== -1 && splitIndex < queryKey.length - 1,\n      'Bad queryKey.'\n    );\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  }\n\n  /**\n   * Return the query associated with the given tag, if we have one\n   * @param {!number} tag\n   * @return {?string}\n   * @private\n   */\n  private queryKeyForTag_(tag: number): string | null {\n    return this.tagToQueryMap_['_' + tag];\n  }\n\n  /**\n   * Return the tag associated with the given query.\n   * @param {!Query} query\n   * @return {?number}\n   * @private\n   */\n  private tagForQuery_(query: Query): number | null {\n    const queryKey = SyncTree.makeQueryKey_(query);\n    return safeGet(this.queryToTagMap_, queryKey);\n  }\n\n  /**\n   * Static tracker for next query tag.\n   * @type {number}\n   * @private\n   */\n  private static nextQueryTag_ = 1;\n\n  /**\n   * Static accessor for query tags.\n   * @return {number}\n   * @private\n   */\n  private static getNextQueryTag_(): number {\n    return SyncTree.nextQueryTag_++;\n  }\n\n  /**\n   * A helper method to apply tagged operations\n   *\n   * @param {!Path} queryPath\n   * @param {!Operation} operation\n   * @return {!Array.<!Event>}\n   * @private\n   */\n  private applyTaggedOperation_(\n    queryPath: Path,\n    operation: Operation\n  ): Event[] {\n    const syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    const writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(\n      operation,\n      writesCache,\n      /*serverCache=*/ null\n    );\n  }\n\n  /**\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n   *\n   * NOTES:\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n\n   * - We call applyOperation() on each SyncPoint passing three things:\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n   *   3. A snapshot Node with cached server data, if we have it.\n\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\n   *\n   * @param {!Operation} operation\n   * @return {!Array.<!Event>}\n   * @private\n   */\n  private applyOperationToSyncPoints_(operation: Operation): Event[] {\n    return this.applyOperationHelper_(\n      operation,\n      this.syncPointTree_,\n      /*serverCache=*/ null,\n      this.pendingWriteTree_.childWrites(Path.Empty)\n    );\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   *\n   * @private\n   * @param {!Operation} operation\n   * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n   * @param {?Node} serverCache\n   * @param {!WriteTreeRef} writesCache\n   * @return {!Array.<!Event>}\n   */\n  private applyOperationHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(\n        operation,\n        syncPointTree,\n        serverCache,\n        writesCache\n      );\n    } else {\n      const syncPoint = syncPointTree.get(Path.Empty);\n\n      // If we don't have cached server data, see if we can get it from this SyncPoint.\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      let events: Event[] = [];\n      const childName = operation.path.getFront();\n      const childOperation = operation.operationForChild(childName);\n      const childTree = syncPointTree.children.get(childName);\n      if (childTree && childOperation) {\n        const childServerCache = serverCache\n          ? serverCache.getImmediateChild(childName)\n          : null;\n        const childWritesCache = writesCache.child(childName);\n        events = events.concat(\n          this.applyOperationHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n\n      if (syncPoint) {\n        events = events.concat(\n          syncPoint.applyOperation(operation, writesCache, serverCache)\n        );\n      }\n\n      return events;\n    }\n  }\n\n  /**\n   * Recursive helper for applyOperationToSyncPoints_\n   *\n   * @private\n   * @param {!Operation} operation\n   * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n   * @param {?Node} serverCache\n   * @param {!WriteTreeRef} writesCache\n   * @return {!Array.<!Event>}\n   */\n  private applyOperationDescendantsHelper_(\n    operation: Operation,\n    syncPointTree: ImmutableTree<SyncPoint>,\n    serverCache: Node | null,\n    writesCache: WriteTreeRef\n  ): Event[] {\n    const syncPoint = syncPointTree.get(Path.Empty);\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    let events: Event[] = [];\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writesCache.child(childName);\n      const childOperation = operation.operationForChild(childName);\n      if (childOperation) {\n        events = events.concat(\n          this.applyOperationDescendantsHelper_(\n            childOperation,\n            childTree,\n            childServerCache,\n            childWritesCache\n          )\n        );\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPoint.applyOperation(operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/SyncTree.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Path } from './util/Path';\nimport { Node } from './snap/Node';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/SnapshotHolder.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { log, warn } from './util/util';\nimport { FirebaseApp, FirebaseAuthTokenData } from '../../app/firebase_app';\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class AuthTokenProvider {\n  /**\n   * @param {!FirebaseApp} app_\n   */\n  constructor(private app_: FirebaseApp) {}\n\n  /**\n   * @param {boolean} forceRefresh\n   * @return {!Promise<FirebaseAuthTokenData>}\n   */\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return this.app_['INTERNAL']['getToken'](forceRefresh).then(\n      null,\n      // .catch\n      function(error) {\n        // TODO: Need to figure out all the cases this is raised and whether\n        // this makes sense.\n        if (error && error.code === 'auth/token-not-initialized') {\n          log('Got auth/token-not-initialized error.  Treating as null token.');\n          return null;\n        } else {\n          return Promise.reject(error);\n        }\n      }\n    );\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    this.app_['INTERNAL']['addAuthTokenListener'](listener);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void) {\n    this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n  }\n\n  notifyForInvalidToken() {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.app_.name +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/AuthTokenProvider.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { clone, forEach } from '../../../utils/obj';\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta: typeof newStats = clone(newStats);\n    if (this.last_) {\n      forEach(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/stats/StatsListener.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, forEach } from '../../../utils/obj';\nimport { setTimeoutNonBlocking } from '../util/util';\nimport { StatsListener } from './StatsListener';\nimport { StatsCollection } from './StatsCollection';\nimport { ServerActions } from '../ServerActions';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\n/**\n * @constructor\n */\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  private statsToReport_: { [k: string]: boolean } = {};\n\n  /**\n   * @param collection\n   * @param server_\n   */\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  includeStat(stat: string) {\n    this.statsToReport_[stat] = true;\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    forEach(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/stats/StatsReporter.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\nimport { log, logger, exceptionGuard } from '../util/util';\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nexport class EventQueue {\n  /**\n   * @private\n   * @type {!Array.<EventList>}\n   */\n  private eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   * @private\n   * @type {!number}\n   */\n  private recursionDepth_ = 0;\n\n  /**\n   * @param {!Array.<Event>} eventDataList The new events to queue.\n   */\n  queueEvents(eventDataList: Event[]) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    let currList = null;\n    for (let i = 0; i < eventDataList.length; i++) {\n      const eventData = eventDataList[i];\n      const eventPath = eventData.getPath();\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  }\n\n  /**\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\n   * for the specified path.\n   *\n   * It is assumed that the new events are all for the specified path.\n   *\n   * @param {!Path} path The path to raise events for.\n   * @param {!Array.<Event>} eventDataList The new events to raise.\n   */\n  raiseEventsAtPath(path: Path, eventDataList: Event[]) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_((eventPath: Path) =>\n      eventPath.equals(path)\n    );\n  }\n\n  /**\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\n   * locations related to the specified change path (i.e. all ancestors and descendants).\n   *\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n   *\n   * @param {!Path} changedPath The path to raise events for.\n   * @param {!Array.<!Event>} eventDataList The events to raise\n   */\n  raiseEventsForChangedPath(changedPath: Path, eventDataList: Event[]) {\n    this.queueEvents(eventDataList);\n\n    this.raiseQueuedEventsMatchingPredicate_((eventPath: Path) => {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  }\n\n  /**\n   * @param {!function(!Path):boolean} predicate\n   * @private\n   */\n  private raiseQueuedEventsMatchingPredicate_(\n    predicate: (path: Path) => boolean\n  ) {\n    this.recursionDepth_++;\n\n    let sentAll = true;\n    for (let i = 0; i < this.eventLists_.length; i++) {\n      const eventList = this.eventLists_[i];\n      if (eventList) {\n        const eventPath = eventList.getPath();\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  }\n}\n\n/**\n * @param {!Path} path\n * @constructor\n */\nexport class EventList {\n  /**\n   * @type {!Array.<Event>}\n   * @private\n   */\n  private events_: Event[] = [];\n\n  constructor(private readonly path_: Path) {}\n\n  /**\n   * @param {!Event} eventData\n   */\n  add(eventData: Event) {\n    this.events_.push(eventData);\n  }\n\n  /**\n   * Iterates through the list and raises each event\n   */\n  raise() {\n    for (let i = 0; i < this.events_.length; i++) {\n      const eventData = this.events_[i];\n      if (eventData !== null) {\n        this.events_[i] = null;\n        const eventFn = eventData.getEventRunner();\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n        exceptionGuard(eventFn);\n      }\n    }\n  }\n\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path {\n    return this.path_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/EventQueue.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { forEach } from './obj';\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexport const querystring = function(querystringParams) {\n  var params = [];\n  forEach(querystringParams, function(key, value) {\n    if (Array.isArray(value)) {\n      value.forEach(function(arrayVal) {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  });\n  return params.length ? '&' + params.join('&') : '';\n};\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexport const querystringDecode = function(querystring) {\n  var obj = {};\n  var tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(function(token) {\n    if (token) {\n      var key = token.split('=');\n      obj[key[0]] = key[1];\n    }\n  });\n  return obj;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/util.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils/assert';\nimport { logWrapper, warn } from './util/util';\nimport { jsonEval } from '../../utils/json';\nimport { safeGet } from '../../utils/obj';\nimport { querystring } from '../../utils/util';\nimport { ServerActions } from './ServerActions';\nimport { RepoInfo } from './RepoInfo';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { Query } from '../api/Query';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: any }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: any[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   *\n   * @private {!Object.<string, !Object>}\n   */\n  private listens_: { [k: string]: Object } = {};\n\n  /**\n   * @param {!Query} query\n   * @param {?number=} tag\n   * @return {string}\n   * @private\n   */\n  static getListenId_(query: Query, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query.getQueryParams().isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query.path.toString();\n    }\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n   * @param {AuthTokenProvider} authTokenProvider_\n   * @implements {ServerActions}\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: any,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: any) => void\n  ) {\n    const pathString = query.path.toString();\n    this.log_(\n      'Listen called for ' + pathString + ' ' + query.queryIdentifier()\n    );\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParamaters = query\n      .getQueryParams()\n      .toRestQueryStringParameters();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParamaters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error == 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: Query, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   *\n   * @param {!string} pathString\n   * @param {!Object.<string, *>} queryStringParameters\n   * @param {?function(?number, *=)} callback\n   * @private\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: any } = {},\n    callback: ((a: number | null, b?: any) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    this.authTokenProvider_\n      .getToken(/*forceRefresh=*/ false)\n      .then(authTokenData => {\n        const authToken = authTokenData && authTokenData.accessToken;\n        if (authToken) {\n          queryStringParameters['auth'] = authToken;\n        }\n\n        const url =\n          (this.repoInfo_.secure ? 'https://' : 'http://') +\n          this.repoInfo_.host +\n          pathString +\n          '?' +\n          querystring(queryStringParameters);\n\n        this.log_('Sending REST request for ' + url);\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (callback && xhr.readyState === 4) {\n            this.log_(\n              'REST Response for ' + url + ' received. status:',\n              xhr.status,\n              'response:',\n              xhr.responseText\n            );\n            let res = null;\n            if (xhr.status >= 200 && xhr.status < 300) {\n              try {\n                res = jsonEval(xhr.responseText);\n              } catch (e) {\n                warn(\n                  'Failed to parse JSON response for ' +\n                    url +\n                    ': ' +\n                    xhr.responseText\n                );\n              }\n              callback(null, res);\n            } else {\n              // 401 and 404 are expected.\n              if (xhr.status !== 401 && xhr.status !== 404) {\n                warn(\n                  'Got unsuccessful REST response for ' +\n                    url +\n                    ' Status: ' +\n                    xhr.status\n                );\n              }\n              callback(xhr.status);\n            }\n            callback = null;\n          }\n        };\n\n        xhr.open('GET', url, /*asynchronous=*/ true);\n        xhr.send();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/ReadonlyRestClient.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { Path } from './util/Path';\nimport { SparseSnapshotTree } from './SparseSnapshotTree';\nimport { SyncTree } from './SyncTree';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport { stringify } from '../../utils/json';\nimport { beingCrawled, each, exceptionGuard, warn, log } from './util/util';\nimport { map, forEach, isEmpty } from '../../utils/obj';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { StatsManager } from './stats/StatsManager';\nimport { StatsReporter } from './stats/StatsReporter';\nimport { StatsListener } from './stats/StatsListener';\nimport { EventQueue } from './view/EventQueue';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { FirebaseApp } from '../../app/firebase_app';\nimport { RepoInfo } from './RepoInfo';\nimport { Database } from '../api/Database';\nimport { ServerActions } from './ServerActions';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { Event } from './view/Event';\nimport { Node } from './snap/Node';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  dataUpdateCount = 0;\n  private infoSyncTree_: SyncTree;\n  private serverSyncTree_: SyncTree;\n\n  private stats_: StatsCollection;\n  private statsListener_: StatsListener | null = null;\n  private eventQueue_ = new EventQueue();\n  private nextWriteId_ = 1;\n  private server_: ServerActions;\n  private statsReporter_: StatsReporter;\n  private transactions_init_: () => void;\n  private infoData_: SnapshotHolder;\n  private abortTransactions_: (path: Path) => Path;\n  private rerunTransactions_: (changedPath: Path) => Path;\n  private interceptServerDataCallback_:\n    | ((a: string, b: any) => void)\n    | null = null;\n  private __database: Database;\n\n  // A list of data pieces and paths to be set when this client disconnects.\n  private onDisconnect_ = new SparseSnapshotTree();\n\n  /**\n   * TODO: This should be @private but it's used by test_access.js and internal.js\n   * @type {?PersistentConnection}\n   */\n  persistentConnection_: PersistentConnection | null = null;\n\n  /**\n   * @param {!RepoInfo} repoInfo_\n   * @param {boolean} forceRestClient\n   * @param {!FirebaseApp} app\n   */\n  constructor(\n    public repoInfo_: RepoInfo,\n    forceRestClient: boolean,\n    public app: FirebaseApp\n  ) {\n    /** @type {!AuthTokenProvider} */\n    const authTokenProvider = new AuthTokenProvider(app);\n\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        authTokenProvider\n      );\n\n      // Minor hack: Fire onConnect immediately, since there's no actual connection.\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      const authOverride = app.options['databaseAuthVariableOverride'];\n      // Validate authOverride\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error(\n            'Only objects are supported for option databaseAuthVariableOverride'\n          );\n        }\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(\n        this.repoInfo_,\n        this.onDataUpdate_.bind(this),\n        this.onConnectStatus_.bind(this),\n        this.onServerInfoUpdate_.bind(this),\n        authTokenProvider,\n        authOverride\n      );\n\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(token => {\n      this.server_.refreshAuthToken(token);\n    });\n\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n    this.statsReporter_ = StatsManager.getOrCreateReporter(\n      repoInfo_,\n      () => new StatsReporter(this.stats_, this.server_)\n    );\n\n    this.transactions_init_();\n\n    // Used for .info.\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        let infoEvents: Event[] = [];\n        const node = this.infoData_.getNode(query.path);\n        // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n        if (!node.isEmpty()) {\n          infoEvents = this.infoSyncTree_.applyServerOverwrite(\n            query.path,\n            node\n          );\n          setTimeout(() => {\n            onComplete('ok');\n          }, 0);\n        }\n        return infoEvents;\n      },\n      stopListening: () => {}\n    });\n    this.updateInfo_('connected', false);\n\n    this.serverSyncTree_ = new SyncTree({\n      startListening: (query, tag, currentHashFn, onComplete) => {\n        this.server_.listen(query, currentHashFn, tag, (status, data) => {\n          const events = onComplete(status, data);\n          this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        });\n        // No synchronous events for network-backed sync trees\n        return [];\n      },\n      stopListening: (query, tag) => {\n        this.server_.unlisten(query, tag);\n      }\n    });\n  }\n\n  /**\n   * @return {string}  The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n\n  /**\n   * @return {!string} The namespace represented by the repo.\n   */\n  name(): string {\n    return this.repoInfo_.namespace;\n  }\n\n  /**\n   * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n   */\n  serverTime(): number {\n    const offsetNode = this.infoData_.getNode(\n      new Path('.info/serverTimeOffset')\n    );\n    const offset = (offsetNode.val() as number) || 0;\n    return new Date().getTime() + offset;\n  }\n\n  /**\n   * Generate ServerValues using some variables from the repo object.\n   * @return {!Object}\n   */\n  generateServerValues(): Object {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  }\n\n  /**\n   * Called by realtime when we get new messages from the server.\n   *\n   * @private\n   * @param {string} pathString\n   * @param {*} data\n   * @param {boolean} isMerge\n   * @param {?number} tag\n   */\n  private onDataUpdate_(\n    pathString: string,\n    data: any,\n    isMerge: boolean,\n    tag: number | null\n  ) {\n    // For testing.\n    this.dataUpdateCount++;\n    const path = new Path(pathString);\n    data = this.interceptServerDataCallback_\n      ? this.interceptServerDataCallback_(pathString, data)\n      : data;\n    let events = [];\n    if (tag) {\n      if (isMerge) {\n        const taggedChildren = map(data as { [k: string]: any }, (raw: any) =>\n          nodeFromJSON(raw)\n        );\n        events = this.serverSyncTree_.applyTaggedQueryMerge(\n          path,\n          taggedChildren,\n          tag\n        );\n      } else {\n        const taggedSnap = nodeFromJSON(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(\n          path,\n          taggedSnap,\n          tag\n        );\n      }\n    } else if (isMerge) {\n      const changedChildren = map(data as { [k: string]: any }, (raw: any) =>\n        nodeFromJSON(raw)\n      );\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      const snap = nodeFromJSON(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n    let affectedPath = path;\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }\n\n  /**\n   * TODO: This should be @private but it's used by test_access.js and internal.js\n   * @param {?function(!string, *):*} callback\n   * @private\n   */\n  interceptServerData_(callback: ((a: string, b: any) => any) | null) {\n    this.interceptServerDataCallback_ = callback;\n  }\n\n  /**\n   * @param {!boolean} connectStatus\n   * @private\n   */\n  private onConnectStatus_(connectStatus: boolean) {\n    this.updateInfo_('connected', connectStatus);\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  }\n\n  /**\n   * @param {!Object} updates\n   * @private\n   */\n  private onServerInfoUpdate_(updates: Object) {\n    each(updates, (value: any, key: string) => {\n      this.updateInfo_(key, value);\n    });\n  }\n\n  /**\n   *\n   * @param {!string} pathString\n   * @param {*} value\n   * @private\n   */\n  private updateInfo_(pathString: string, value: any) {\n    const path = new Path('/.info/' + pathString);\n    const newNode = nodeFromJSON(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    const events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  }\n\n  /**\n   * @return {!number}\n   * @private\n   */\n  private getNextWriteId_(): number {\n    return this.nextWriteId_++;\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {*} newVal\n   * @param {number|string|null} newPriority\n   * @param {?function(?Error, *=)} onComplete\n   */\n  setWithPriority(\n    path: Path,\n    newVal: any,\n    newPriority: number | string | null,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    });\n\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      serverValues\n    );\n\n    const writeId = this.getNextWriteId_();\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      writeId,\n      true\n    );\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(\n      path.toString(),\n      newNodeUnresolved.val(/*export=*/ true),\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('set at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = this.serverSyncTree_.ackUserWrite(\n          writeId,\n          !success\n        );\n        this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n    const affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath);\n    // We queued the events above, so just flush the queue here\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {!Object} childrenToMerge\n   * @param {?function(?Error, *=)} onComplete\n   */\n  update(\n    path: Path,\n    childrenToMerge: { [k: string]: any },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.log_('update', { path: path.toString(), value: childrenToMerge });\n\n    // Start with our existing data and merge each child into it.\n    let empty = true;\n    const serverValues = this.generateServerValues();\n    const changedChildren: { [k: string]: Node } = {};\n    forEach(childrenToMerge, (changedKey: string, changedValue: any) => {\n      empty = false;\n      const newNodeUnresolved = nodeFromJSON(changedValue);\n      changedChildren[changedKey] = resolveDeferredValueSnapshot(\n        newNodeUnresolved,\n        serverValues\n      );\n    });\n\n    if (!empty) {\n      const writeId = this.getNextWriteId_();\n      const events = this.serverSyncTree_.applyUserMerge(\n        path,\n        changedChildren,\n        writeId\n      );\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(\n        path.toString(),\n        childrenToMerge,\n        (status, errorReason) => {\n          const success = status === 'ok';\n          if (!success) {\n            warn('update at ' + path + ' failed: ' + status);\n          }\n\n          const clearEvents = this.serverSyncTree_.ackUserWrite(\n            writeId,\n            !success\n          );\n          const affectedPath =\n            clearEvents.length > 0 ? this.rerunTransactions_(path) : path;\n          this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n          this.callOnCompleteCallback(onComplete, status, errorReason);\n        }\n      );\n\n      forEach(childrenToMerge, (changedPath: string) => {\n        const affectedPath = this.abortTransactions_(path.child(changedPath));\n        this.rerunTransactions_(affectedPath);\n      });\n\n      // We queued the events above, so just flush the queue here\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  }\n\n  /**\n   * Applies all of the changes stored up in the onDisconnect_ tree.\n   * @private\n   */\n  private runOnDisconnectEvents_() {\n    this.log_('onDisconnectEvents');\n\n    const serverValues = this.generateServerValues();\n    const resolvedOnDisconnectTree = resolveDeferredValueTree(\n      this.onDisconnect_,\n      serverValues\n    );\n    let events: Event[] = [];\n\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, (path, snap) => {\n      events = events.concat(\n        this.serverSyncTree_.applyServerOverwrite(path, snap)\n      );\n      const affectedPath = this.abortTransactions_(path);\n      this.rerunTransactions_(affectedPath);\n    });\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {?function(?Error, *=)} onComplete\n   */\n  onDisconnectCancel(\n    path: Path,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    this.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n      if (status === 'ok') {\n        this.onDisconnect_.forget(path);\n      }\n      this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {*} value\n   * @param {?function(?Error, *=)} onComplete\n   */\n  onDisconnectSet(\n    path: Path,\n    value: any,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {*} value\n   * @param {*} priority\n   * @param {?function(?Error, *=)} onComplete\n   */\n  onDisconnectSetWithPriority(\n    path: Path,\n    value: any,\n    priority: any,\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    const newNode = nodeFromJSON(value, priority);\n    this.server_.onDisconnectPut(\n      path.toString(),\n      newNode.val(/*export=*/ true),\n      (status, errorReason) => {\n        if (status === 'ok') {\n          this.onDisconnect_.remember(path, newNode);\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  /**\n   * @param {!Path} path\n   * @param {*} childrenToMerge\n   * @param {?function(?Error, *=)} onComplete\n   */\n  onDisconnectUpdate(\n    path: Path,\n    childrenToMerge: { [k: string]: any },\n    onComplete: ((status: Error | null, errorReason?: string) => void) | null\n  ) {\n    if (isEmpty(childrenToMerge)) {\n      log(\n        \"onDisconnect().update() called with empty data.  Don't do anything.\"\n      );\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        if (status === 'ok') {\n          forEach(childrenToMerge, (childName: string, childNode: any) => {\n            const newChildNode = nodeFromJSON(childNode);\n            this.onDisconnect_.remember(path.child(childName), newChildNode);\n          });\n        }\n        this.callOnCompleteCallback(onComplete, status, errorReason);\n      }\n    );\n  }\n\n  /**\n   * @param {!Query} query\n   * @param {!EventRegistration} eventRegistration\n   */\n  addEventCallbackForQuery(query: Query, eventRegistration: EventRegistration) {\n    let events;\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  }\n\n  /**\n   * @param {!Query} query\n   * @param {?EventRegistration} eventRegistration\n   */\n  removeEventCallbackForQuery(\n    query: Query,\n    eventRegistration: EventRegistration\n  ) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    let events;\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(\n        query,\n        eventRegistration\n      );\n    }\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  }\n\n  interrupt() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  }\n\n  resume() {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  }\n\n  stats(showDelta: boolean = false) {\n    if (typeof console === 'undefined') return;\n\n    let stats: { [k: string]: any };\n    if (showDelta) {\n      if (!this.statsListener_)\n        this.statsListener_ = new StatsListener(this.stats_);\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    const longestName = Object.keys(stats).reduce(\n      (previousValue, currentValue) =>\n        Math.max(currentValue.length, previousValue),\n      0\n    );\n\n    forEach(stats, (stat: string, value: any) => {\n      // pad stat names to be the same length (plus 2 extra spaces).\n      for (let i = stat.length; i < longestName + 2; i++) stat += ' ';\n      console.log(stat + value);\n    });\n  }\n\n  statsIncrementCounter(metric: string) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  }\n\n  /**\n   * @param {...*} var_args\n   * @private\n   */\n  private log_(...var_args: any[]) {\n    let prefix = '';\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n    log(prefix, ...var_args);\n  }\n\n  /**\n   * @param {?function(?Error, *=)} callback\n   * @param {!string} status\n   * @param {?string=} errorReason\n   */\n  callOnCompleteCallback(\n    callback: ((status: Error | null, errorReason?: string) => void) | null,\n    status: string,\n    errorReason?: string | null\n  ) {\n    if (callback) {\n      exceptionGuard(function() {\n        if (status == 'ok') {\n          callback(null);\n        } else {\n          const code = (status || 'error').toUpperCase();\n          let message = code;\n          if (errorReason) message += ': ' + errorReason;\n\n          const error = new Error(message);\n          (error as any).code = code;\n          callback(error);\n        }\n      });\n    }\n  }\n\n  get database(): Database {\n    return this.__database || (this.__database = new Database(this));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/Repo.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function(str) {\n  var out = [],\n    p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      var high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function(str) {\n  var p = 0;\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utf8.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback } from '../../utils/validation';\nimport {\n  validateWritablePath,\n  validateFirebaseDataArg,\n  validatePriority,\n  validateFirebaseMergeDataArg\n} from '../core/util/validation';\nimport { warn } from '../core/util/util';\nimport { Deferred } from '../../utils/promise';\nimport { Repo } from '../core/Repo';\nimport { Path } from '../core/util/Path';\n\n/**\n * @constructor\n */\nexport class OnDisconnect {\n  /**\n   * @param {!Repo} repo_\n   * @param {!Path} path_\n   */\n  constructor(private repo_: Repo, private path_: Path) {}\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    const deferred = new Deferred();\n    this.repo_.onDisconnectCancel(\n      this.path_,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    const deferred = new Deferred();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} value\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  set(value: any, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    const deferred = new Deferred();\n    this.repo_.onDisconnectSet(\n      this.path_,\n      value,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} value\n   * @param {number|string|null} priority\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  setWithPriority(\n    value: any,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      1,\n      value,\n      this.path_,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo_.onDisconnectSetWithPriority(\n      this.path_,\n      value,\n      priority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {!Object} objectToMerge\n   * @param {function(?Error)=} onComplete\n   * @return {!firebase.Promise}\n   */\n  update(\n    objectToMerge: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: any } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      1,\n      objectToMerge,\n      this.path_,\n      false\n    );\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    const deferred = new Deferred();\n    this.repo_.onDisconnectUpdate(\n      this.path_,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/onDisconnect.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from './DataSnapshot';\nimport { validateArgCount } from '../../utils/validation';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   * @constructor\n   * @dict\n   * @param {boolean} committed\n   * @param {DataSnapshot} snapshot\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/TransactionResult.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function() {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  const PUSH_CHARS =\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function(now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/NextPushId.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { NodeFilter } from './NodeFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nexport class RangedFilter implements NodeFilter {\n  /**\n   * @type {!IndexedFilter}\n   * @const\n   * @private\n   */\n  private indexedFilter_: IndexedFilter;\n\n  /**\n   * @const\n   * @type {!Index}\n   * @private\n   */\n  private index_: Index;\n\n  /**\n   * @const\n   * @type {!NamedNode}\n   * @private\n   */\n  private startPost_: NamedNode;\n\n  /**\n   * @const\n   * @type {!NamedNode}\n   * @private\n   */\n  private endPost_: NamedNode;\n\n  /**\n   * @param {!QueryParams} params\n   */\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  /**\n   * @return {!NamedNode}\n   */\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  /**\n   * @return {!NamedNode}\n   */\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  /**\n   * @param {!NamedNode} node\n   * @return {boolean}\n   */\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function(key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @param {!QueryParams} params\n   * @return {!NamedNode}\n   * @private\n   */\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  /**\n   * @param {!QueryParams} params\n   * @return {!NamedNode}\n   * @private\n   */\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/filter/RangedFilter.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RangedFilter } from './RangedFilter';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Node, NamedNode } from '../../snap/Node';\nimport { assert } from '../../../../utils/assert';\nimport { Change } from '../Change';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { IndexedFilter } from './IndexedFilter';\nimport { QueryParams } from '../QueryParams';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nexport class LimitedFilter implements NodeFilter {\n  /**\n   * @const\n   * @type {RangedFilter}\n   * @private\n   */\n  private readonly rangedFilter_: RangedFilter;\n\n  /**\n   * @const\n   * @type {!Index}\n   * @private\n   */\n  private readonly index_: Index;\n\n  /**\n   * @const\n   * @type {number}\n   * @private\n   */\n  private readonly limit_: number;\n\n  /**\n   * @const\n   * @type {boolean}\n   * @private\n   */\n  private readonly reverse_: boolean;\n\n  /**\n   * @param {!QueryParams} params\n   */\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          let next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          let inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @param {!Node} snap\n   * @param {string} childKey\n   * @param {!Node} childSnap\n   * @param {!CompleteChildSource} source\n   * @param {?ChildChangeAccumulator} changeAccumulator\n   * @return {!Node}\n   * @private\n   */\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() == this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : oldEventCache.getLastChild(this.index_) as NamedNode;\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childChangedChange(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childRemovedChange(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              Change.childAddedChange(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            Change.childRemovedChange(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            Change.childAddedChange(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/filter/LimitedFilter.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { MIN_NAME, MAX_NAME } from '../util/util';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { RangedFilter } from './filter/RangedFilter';\nimport { stringify } from '../../../utils/json';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { Index } from '../snap/indexes/Index';\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nexport class QueryParams {\n  private limitSet_ = false;\n  private startSet_ = false;\n  private startNameSet_ = false;\n  private endSet_ = false;\n  private endNameSet_ = false;\n\n  private limit_ = 0;\n  private viewFrom_ = '';\n  private indexStartValue_: any | null = null;\n  private indexStartName_ = '';\n  private indexEndValue_: any | null = null;\n  private indexEndName_ = '';\n\n  private index_ = PRIORITY_INDEX;\n\n  /**\n   * Wire Protocol Constants\n   * @const\n   * @enum {string}\n   * @private\n   */\n  private static readonly WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n\n  /**\n   * REST Query Constants\n   * @const\n   * @enum {string}\n   * @private\n   */\n  private static readonly REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n\n  /**\n   * Default, empty query parameters\n   * @type {!QueryParams}\n   * @const\n   */\n  static readonly DEFAULT = new QueryParams();\n\n  /**\n   * @return {boolean}\n   */\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @return {boolean} True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return (\n        this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT\n      );\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   * @return {*}\n   */\n  getIndexStartValue(): any {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   * @return {!string}\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * @return {*}\n   */\n  getIndexEndValue(): any {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   * @return {!string}\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   * @return {!number}\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  /**\n   * @return {!Index}\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  /**\n   * @return {!QueryParams}\n   * @private\n   */\n  private copy_(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limit(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limitToFirst(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  }\n\n  /**\n   * @param {!number} newLimit\n   * @return {!QueryParams}\n   */\n  limitToLast(newLimit: number): QueryParams {\n    const newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {?string=} key\n   * @return {!QueryParams}\n   */\n  startAt(indexValue: any, key?: string | null): QueryParams {\n    const newParams = this.copy_();\n    newParams.startSet_ = true;\n    if (!(indexValue !== undefined)) {\n      indexValue = null;\n    }\n    newParams.indexStartValue_ = indexValue;\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n    return newParams;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {?string=} key\n   * @return {!QueryParams}\n   */\n  endAt(indexValue: any, key?: string | null): QueryParams {\n    const newParams = this.copy_();\n    newParams.endSet_ = true;\n    if (!(indexValue !== undefined)) {\n      indexValue = null;\n    }\n    newParams.indexEndValue_ = indexValue;\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n    return newParams;\n  }\n\n  /**\n   * @param {!Index} index\n   * @return {!QueryParams}\n   */\n  orderBy(index: Index): QueryParams {\n    const newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  getQueryObject(): Object {\n    const WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    const obj: { [k: string]: any } = {};\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      let viewFrom = this.viewFrom_;\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    }\n    // For now, priority index is the default, so we only specify if it's some other index\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n    return obj;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\n  }\n\n  /**\n   * @return {!NodeFilter}\n   */\n  getNodeFilter(): NodeFilter {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  }\n\n  /**\n   * Returns a set of REST query string parameters representing this query.\n   *\n   * @return {!Object.<string,*>} query string parameters\n   */\n  toRestQueryStringParameters(): { [k: string]: any } {\n    const REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    const qs: { [k: string]: string | number } = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    let orderBy;\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n    qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/QueryParams.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnDisconnect } from './onDisconnect';\nimport { TransactionResult } from './TransactionResult';\nimport { warn } from '../core/util/util';\nimport { nextPushId } from '../core/util/NextPushId';\nimport { Query } from './Query';\nimport { Repo } from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport { QueryParams } from '../core/view/QueryParams';\nimport {\n  validateRootPathString,\n  validatePathString,\n  validateFirebaseMergeDataArg,\n  validateBoolean,\n  validatePriority,\n  validateFirebaseDataArg,\n  validateWritablePath\n} from '../core/util/validation';\nimport { validateArgCount, validateCallback } from '../../utils/validation';\nimport {\n  Deferred,\n  attachDummyErrorHandler,\n  PromiseImpl\n} from '../../utils/promise';\nimport { SyncPoint } from '../core/SyncPoint';\nimport { Database } from './Database';\nimport { DataSnapshot } from './DataSnapshot';\n\nexport interface ReferenceConstructor {\n  new (repo: Repo, path: Path): Reference;\n}\n\nexport class Reference extends Query {\n  public then: (a?: any) => Promise<any>;\n  public catch: (a?: Error) => Promise<any>;\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   *\n   * @param {!Repo} repo\n   * @param {(!Path)} path\n   * @extends {Query}\n   */\n  constructor(repo: Repo, path: Path) {\n    if (!(repo instanceof Repo)) {\n      throw new Error(\n        'new Reference() no longer supported - use app.database().'\n      );\n    }\n\n    // call Query's constructor, passing in the repo and path.\n    super(repo, path, QueryParams.DEFAULT, false);\n  }\n\n  /** @return {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) return null;\n    else return this.path.getBack();\n  }\n\n  /**\n   * @param {!(string|Path)} pathString\n   * @return {!Reference}\n   */\n  child(pathString: string | Path): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null)\n        validateRootPathString('Reference.child', 1, pathString, false);\n      else validatePathString('Reference.child', 1, pathString, false);\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  }\n\n  /** @return {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n\n    const parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  }\n\n  /** @return {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n\n    let ref = this as any;\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n    return ref;\n  }\n\n  /** @return {!Database} */\n  databaseProp(): Database {\n    return this.repo.database;\n  }\n\n  /**\n   * @param {*} newVal\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  set(newVal: any, onComplete?: (a: Error | null) => void): Promise<any> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      /*priority=*/ null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {!Object} objectToMerge\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  update(\n    objectToMerge: Object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<any> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: any } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'Reference.update',\n      1,\n      objectToMerge,\n      this.path,\n      false\n    );\n    validateCallback('Reference.update', 2, onComplete, true);\n    const deferred = new Deferred();\n    this.repo.update(\n      this.path,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*} newVal\n   * @param {string|number|null} newPriority\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  setWithPriority(\n    newVal: any,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<any> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg(\n      'Reference.setWithPriority',\n      1,\n      newVal,\n      this.path,\n      false\n    );\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys')\n      throw 'Reference.setWithPriority failed: ' +\n        this.getKey() +\n        ' is a read-only object.';\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path,\n      newVal,\n      newPriority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  remove(onComplete?: (a: Error | null) => void): Promise<any> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n\n    return this.set(null, onComplete);\n  }\n\n  /**\n   * @param {function(*):*} transactionUpdate\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n   * @param {boolean=} applyLocally\n   * @return {!Promise}\n   */\n  transaction(\n    transactionUpdate: (a: any) => any,\n    onComplete?: (a: Error | null, b: boolean, c: DataSnapshot | null) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true);\n    // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys')\n      throw 'Reference.transaction failed: ' +\n        this.getKey() +\n        ' is a read-only object.';\n\n    if (applyLocally === undefined) applyLocally = true;\n\n    const deferred = new Deferred();\n    if (typeof onComplete === 'function') {\n      attachDummyErrorHandler(deferred.promise);\n    }\n\n    const promiseComplete = function(\n      error: Error,\n      committed: boolean,\n      snapshot: DataSnapshot\n    ) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n    this.repo.startTransaction(\n      this.path,\n      transactionUpdate,\n      promiseComplete,\n      applyLocally\n    );\n\n    return deferred.promise;\n  }\n\n  /**\n   * @param {string|number|null} priority\n   * @param {function(?Error)=} onComplete\n   * @return {!Promise}\n   */\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<any> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    this.repo.setWithPriority(\n      this.path.child('.priority'),\n      priority,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * @param {*=} value\n   * @param {function(?Error)=} onComplete\n   * @return {!Reference}\n   */\n  push(value?: any, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n\n    const now = this.repo.serverTime();\n    const name = nextPushId(now);\n\n    // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n    const thennablePushRef = this.child(name);\n    const pushRef = this.child(name);\n\n    let promise;\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = PromiseImpl.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      attachDummyErrorHandler(promise);\n    }\n\n    return thennablePushRef;\n  }\n\n  /**\n   * @return {!OnDisconnect}\n   */\n  onDisconnect(): OnDisconnect {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  }\n\n  get database(): Database {\n    return this.databaseProp();\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/Reference.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap } from './SortedMap';\nimport { Path } from './Path';\nimport { stringCompare } from './util';\nimport { forEach } from '../../../utils/obj';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static Empty = new ImmutableTree<any>(null);\n\n  /**\n   * @template T\n   * @param {!Object.<string, !T>} obj\n   * @return {!ImmutableTree.<!T>}\n   */\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = ImmutableTree.Empty;\n    forEach(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  /**\n   * @template T\n   * @param {?T} value\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n   */\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n   * on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param {!Path} relativePath The remainder of the path\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\n   *   node\n   * @return {?{path:!Path, value:!T}}\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: Path.Empty, value: this.value };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        const front = relativePath.getFront();\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(\n            relativePath.popFront(),\n            predicate\n          );\n          if (childExistingPathAndValue != null) {\n            const fullPath = new Path(front).child(\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   * @param {!Path} relativePath\n   * @return {?{path: !Path, value: !T}}\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @param {!Path} relativePath\n   * @return {!ImmutableTree.<T>} The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      const front = relativePath.getFront();\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param {!Path} relativePath Path to set value at.\n   * @param {?T} toSet Value to set.\n   * @return {!ImmutableTree.<T>} Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front) || ImmutableTree.Empty;\n      const newChild = child.set(relativePath.popFront(), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param {!Path} relativePath Path to value to remove.\n   * @return {!ImmutableTree.<T>} Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(relativePath.popFront());\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param {!Path} relativePath Path to get value for.\n   * @return {?T} Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param {!Path} relativePath Path to replace subtree for.\n   * @param {!ImmutableTree} newTree New tree.\n   * @return {!ImmutableTree} Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      const front = relativePath.getFront();\n      const child = this.children.get(front) || ImmutableTree.Empty;\n      const newChild = child.setTree(relativePath.popFront(), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   * @template V\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\n   * @return {V}\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(Path.Empty, fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   * @template V\n   * @param {!Path} pathSoFar\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\n   * @return {V}\n   * @private\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(function(\n      childKey: string,\n      childTree: ImmutableTree<T>\n    ) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   * @template V\n   * @param {!Path} path\n   * @param {!function(!Path, !T):?V} f\n   * @return {?V}\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, Path.Empty, f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        const front = pathToFollow.getFront()!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathToFollow.popFront(),\n            pathSoFar.child(front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {!Path} path\n   * @param {!function(!Path, !T)} f\n   * @returns {!ImmutableTree.<T>}\n   */\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathToFollow.getFront();\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathToFollow.popFront(),\n          currentRelativePath.child(front),\n          f\n        );\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param {function(!Path, !T)} f A function to be called with\n   *   the path from the root of the tree to a node, and the value at that node.\n   *   Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(Path.Empty, f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal(function(childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  /**\n   *\n   * @param {function(string, !T)} f\n   */\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/ImmutableTree.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../../utils/assert';\nimport { Change } from '../Change';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { NodeFilter } from './NodeFilter';\nimport { Index } from '../../snap/indexes/Index';\nimport { Path } from '../../util/Path';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { Node } from '../../snap/Node';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() == newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            Change.childRemovedChange(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(\n          Change.childAddedChange(key, newChild)\n        );\n      } else {\n        optChangeAccumulator.trackChildChange(\n          Change.childChangedChange(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function(key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              Change.childRemovedChange(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function(key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                Change.childChangedChange(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              Change.childAddedChange(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/filter/IndexedFilter.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy } from '../../../utils/deep_copy';\nimport { contains } from '../../../utils/obj';\n\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) this.counters_[name] = 0;\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/stats/StatsCollection.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StatsCollection } from './StatsCollection';\nimport { RepoInfo } from '../RepoInfo';\n\nexport class StatsManager {\n  private static collections_: { [k: string]: StatsCollection } = {};\n  private static reporters_: { [k: string]: any } = {};\n\n  static getCollection(repoInfo: RepoInfo): StatsCollection {\n    const hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  }\n\n  static getOrCreateReporter<T>(\n    repoInfo: RepoInfo,\n    creatorFunction: () => T\n  ): T {\n    const hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/stats/StatsManager.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils/assert';\nimport { Reference } from '../api/Reference';\nimport { DataSnapshot } from '../api/DataSnapshot';\nimport { Path } from './util/Path';\nimport { Tree } from './util/Tree';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { LUIDGenerator, warn, exceptionGuard } from './util/util';\nimport { resolveDeferredValueSnapshot } from './util/ServerValues';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { contains, safeGet } from '../../utils/obj';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Repo } from './Repo';\nimport { Event } from './view/Event';\n\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\n * @enum {number}\n */\nexport enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\n(Repo as any).MAX_TRANSACTION_RETRIES_ = 25;\n\n/**\n * @typedef {{\n *   path: !Path,\n *   update: function(*):*,\n *   onComplete: ?function(?Error, boolean, ?DataSnapshot),\n *   status: ?TransactionStatus,\n *   order: !number,\n *   applyLocally: boolean,\n *   retryCount: !number,\n *   unwatcher: function(),\n *   abortReason: ?string,\n *   currentWriteId: !number,\n *   currentInputSnapshot: ?Node,\n *   currentOutputSnapshotRaw: ?Node,\n *   currentOutputSnapshotResolved: ?Node\n * }}\n */\ntype Transaction = {\n  path: Path;\n  update: (a: any) => any;\n  onComplete: (a: Error | null, b: boolean, c: DataSnapshot | null) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n};\n\n/**\n * Setup the transaction data structures\n * @private\n */\n(Repo.prototype as any).transactions_init_ = function() {\n  /**\n   * Stores queues of outstanding transactions for Firebase locations.\n   *\n   * @type {!Tree.<Array.<!Transaction>>}\n   * @private\n   */\n  this.transactionQueueTree_ = new Tree<Transaction[]>();\n};\n\ndeclare module './Repo' {\n  interface Repo {\n    startTransaction(\n      path: Path,\n      transactionUpdate: (a: any) => void,\n      onComplete: ((a: Error, b: boolean, c: DataSnapshot) => void) | null,\n      applyLocally: boolean\n    ): void;\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\nRepo.prototype.startTransaction = function(\n  path: Path,\n  transactionUpdate: (a: any) => any,\n  onComplete: ((a: Error, b: boolean, c: DataSnapshot) => void) | null,\n  applyLocally: boolean\n) {\n  this.log_('transaction on ' + path);\n\n  // Add a watch to make sure we get server updates.\n  const valueCallback = function() {};\n  const watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n  const unwatcher = function() {\n    watchRef.off('value', valueCallback);\n  };\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n\n    // One of TransactionStatus enums.\n    status: null,\n\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n\n    // Stores why a transaction was aborted.\n    abortReason: null,\n\n    currentWriteId: null,\n\n    currentInputSnapshot: null,\n\n    currentOutputSnapshotRaw: null,\n\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      const snapshot = new DataSnapshot(\n        transaction.currentInputSnapshot,\n        new Reference(this, transaction.path),\n        PRIORITY_INDEX\n      );\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = this.transactionQueueTree_.subTree(path);\n    const nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n\n    queueNode.setValue(nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        this.serverSyncTree_.calcCompleteEventCache(path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n    priorityForNode /** @type {null|number|string} */ = priorityForNode;\n\n    const serverValues = this.generateServerValues();\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n\n    const events = this.serverSyncTree_.applyUserOverwrite(\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n\n    this.sendReadyTransactions_();\n  }\n};\n\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\n(Repo.prototype as any).getLatestState_ = function(\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n};\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\n(Repo.prototype as any).sendReadyTransactions_ = function(\n  node: Tree<Transaction[]> = this.transactionQueueTree_\n) {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    const queue = this.buildTransactionQueue_(node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(childNode => {\n      this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\n(Repo.prototype as any).sendTransactionQueue_ = function(\n  path: Path,\n  queue: Array<Transaction>\n) {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(function(txn) {\n    return txn.currentWriteId;\n  });\n  const latestState = this.getLatestState_(path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = Path.relativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /**@type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  this.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      this.log_('transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this transaction is complete, it should be set\n            const node = queue[i].currentOutputSnapshotResolved as Node;\n            const ref = new Reference(this, queue[i].path);\n            const snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n            callbacks.push(\n              queue[i].onComplete.bind(null, null, true, snapshot)\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        this.pruneCompletedTransactionsBelowNode_(\n          this.transactionQueueTree_.subTree(path)\n        );\n        // There may be pending transactions that we can now send.\n        this.sendReadyTransactions_();\n\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            else queue[i].status = TransactionStatus.RUN;\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        this.rerunTransactions_(path);\n      }\n    },\n    latestHash\n  );\n};\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\n(Repo.prototype as any).rerunTransactions_ = function(changedPath: Path): Path {\n  const rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  const path = rootMostTransactionNode.path();\n\n  const queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n\n  return path;\n};\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\n(Repo.prototype as any).rerunTransactionQueue_ = function(\n  queue: Array<Transaction>,\n  path: Path\n) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(function(q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(function(q) {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = Path.relativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= (Repo as any).MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = this.getLatestState_(\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = this.generateServerValues();\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_();\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            this.serverSyncTree_.applyUserOverwrite(\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true)\n          );\n        }\n      }\n    }\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n      (function(unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          const ref = new Reference(this, queue[i].path);\n          // We set this field immediately, so it's safe to cast to an actual snapshot\n          const lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n          const snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  this.sendReadyTransactions_();\n};\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\n(Repo.prototype as any).getAncestorTransactionNode_ = function(\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n  let transactionNode = this.transactionQueueTree_;\n  while (\n    (front = path.getFront()) !== null &&\n    transactionNode.getValue() === null\n  ) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n  }\n\n  return transactionNode;\n};\n\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\n(Repo.prototype as any).buildTransactionQueue_ = function(\n  transactionNode: Tree<Transaction[]>\n): Array<Transaction> {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort(function(a, b) {\n    return a.order - b.order;\n  });\n\n  return transactionQueue;\n};\n\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\n(Repo.prototype as any).aggregateTransactionQueuesForNode_ = function(\n  node: Tree<Transaction[]>,\n  queue: Array<Transaction>\n) {\n  const nodeQueue = node.getValue();\n  if (nodeQueue !== null) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(child => {\n    this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\n(Repo.prototype as any).pruneCompletedTransactionsBelowNode_ = function(\n  node: Tree<Transaction[]>\n) {\n  const queue = node.getValue();\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(childNode => {\n    this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\n(Repo.prototype as any).abortTransactions_ = function(path: Path): Path {\n  const affectedPath = this.getAncestorTransactionNode_(path).path();\n\n  const transactionNode = this.transactionQueueTree_.subTree(path);\n\n  transactionNode.forEachAncestor((node: Tree<Transaction[]>) => {\n    this.abortTransactionsOnNode_(node);\n  });\n\n  this.abortTransactionsOnNode_(transactionNode);\n\n  transactionNode.forEachDescendant((node: Tree<Transaction[]>) => {\n    this.abortTransactionsOnNode_(node);\n  });\n\n  return affectedPath;\n};\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\n(Repo.prototype as any).abortTransactionsOnNode_ = function(\n  node: Tree<Transaction[]>\n) {\n  const queue = node.getValue();\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true)\n        );\n        if (queue[i].onComplete) {\n          const snapshot: DataSnapshot | null = null;\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, snapshot)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/Repo_transaction.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { Path } from './Path';\nimport { forEach, contains, safeGet } from '../../../utils/obj';\n\n/**\n * Node in a Tree.\n */\nexport class TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: { [name: string]: TreeNode<T> } = {};\n  childCount = 0;\n  value: T | null = null;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @template T\n   * @param {string=} name_ Optional name of the node.\n   * @param {Tree=} parent_ Optional parent node.\n   * @param {TreeNode=} node_ Optional node to wrap.\n   */\n  constructor(\n    private name_: string = '',\n    private parent_: Tree<T> | null = null,\n    private node_: TreeNode<T> = new TreeNode<T>()\n  ) {}\n\n  /**\n   * Returns a sub-Tree for the given path.\n   *\n   * @param {!(string|Path)} pathObj Path to look up.\n   * @return {!Tree.<T>} Tree for path.\n   */\n  subTree(pathObj: string | Path): Tree<T> {\n    // TODO: Require pathObj to be Path?\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    let child = this as any,\n      next;\n    while ((next = path.getFront()) !== null) {\n      const childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n    }\n\n    return child;\n  }\n\n  /**\n   * Returns the data associated with this tree node.\n   *\n   * @return {?T} The data or null if no data exists.\n   */\n  getValue(): T | null {\n    return this.node_.value;\n  }\n\n  /**\n   * Sets data to this tree node.\n   *\n   * @param {!T} value Value to set.\n   */\n  setValue(value: T) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  }\n\n  /**\n   * Clears the contents of the tree node (its value and all children).\n   */\n  clear() {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  }\n\n  /**\n   * @return {boolean} Whether the tree has any children.\n   */\n  hasChildren(): boolean {\n    return this.node_.childCount > 0;\n  }\n\n  /**\n   * @return {boolean} Whether the tree is empty (no value or children).\n   */\n  isEmpty(): boolean {\n    return this.getValue() === null && !this.hasChildren();\n  }\n\n  /**\n   * Calls action for each child of this tree node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   */\n  forEachChild(action: (tree: Tree<T>) => void) {\n    forEach(this.node_.children, (child: string, childTree: TreeNode<T>) => {\n      action(new Tree<T>(child, this, childTree));\n    });\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n   *   false.\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n   *   parent.\n   */\n  forEachDescendant(\n    action: (tree: Tree<T>) => void,\n    includeSelf?: boolean,\n    childrenFirst?: boolean\n  ) {\n    if (includeSelf && !childrenFirst) action(this);\n\n    this.forEachChild(function(child) {\n      child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) action(this);\n  }\n\n  /**\n   * Calls action on each ancestor node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n   *   true to abort.\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\n   * @return {boolean} true if the action callback returned true.\n   */\n  forEachAncestor(\n    action: (tree: Tree<T>) => void,\n    includeSelf?: boolean\n  ): boolean {\n    let node = includeSelf ? this : this.parent();\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n      node = node.parent();\n    }\n    return false;\n  }\n\n  /**\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n   * is found, action is called on it and traversal does not continue inside the node.\n   * Action is *not* called on this node.\n   *\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\n   */\n  forEachImmediateDescendantWithValue(action: (tree: Tree<T>) => void) {\n    this.forEachChild(function(child) {\n      if (child.getValue() !== null) action(child);\n      else child.forEachImmediateDescendantWithValue(action);\n    });\n  }\n\n  /**\n   * @return {!Path} The path of this tree node, as a Path.\n   */\n  path(): Path {\n    return new Path(\n      this.parent_ === null\n        ? this.name_\n        : this.parent_.path() + '/' + this.name_\n    );\n  }\n\n  /**\n   * @return {string} The name of the tree node.\n   */\n  name(): string {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n   */\n  parent(): Tree<T> | null {\n    return this.parent_;\n  }\n\n  /**\n   * Adds or removes this child from its parent based on whether it's empty or not.\n   *\n   * @private\n   */\n  private updateParents_() {\n    if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);\n  }\n\n  /**\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\n   *\n   * @param {string} childName The name of the child to update.\n   * @param {!Tree.<T>} child The child to update.\n   * @private\n   */\n  private updateChild_(childName: string, child: Tree<T>) {\n    const childEmpty = child.isEmpty();\n    const childExists = contains(this.node_.children, childName);\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/Tree.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '../../app/firebase_app';\nimport { safeGet } from '../../utils/obj';\nimport { Repo } from './Repo';\nimport { fatal } from './util/util';\nimport { parseRepoInfo } from './util/libs/parser';\nimport { validateUrl } from './util/validation';\nimport './Repo_transaction';\nimport { Database } from '../api/Database';\nimport { RepoInfo } from './RepoInfo';\n\n/** @const {string} */\nconst DATABASE_URL_OPTION = 'databaseURL';\n\nlet _staticInstance: RepoManager;\n\n/**\n * Creates and caches Repo instances.\n */\nexport class RepoManager {\n  /**\n   * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n   */\n  private repos_: {\n    [appName: string]: {\n      [dbUrl: string]: Repo;\n    };\n  } = {};\n\n  /**\n   * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n   * @private {boolean}\n   */\n  private useRestClient_: boolean = false;\n\n  static getInstance(): RepoManager {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n    return _staticInstance;\n  }\n\n  // TODO(koss): Remove these functions unless used in tests?\n  interrupt() {\n    for (const appName in this.repos_) {\n      for (const dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].interrupt();\n      }\n    }\n  }\n\n  resume() {\n    for (const appName in this.repos_) {\n      for (const dbUrl in this.repos_[appName]) {\n        this.repos_[appName][dbUrl].resume();\n      }\n    }\n  }\n\n  /**\n   * This function should only ever be called to CREATE a new database instance.\n   *\n   * @param {!FirebaseApp} app\n   * @return {!Database}\n   */\n  databaseFromApp(app: FirebaseApp, url?: string): Database {\n    const dbUrl: string = url || app.options[DATABASE_URL_OPTION];\n    if (dbUrl === undefined) {\n      fatal(\n        \"Can't determine Firebase Database URL.  Be sure to include \" +\n          DATABASE_URL_OPTION +\n          ' option when calling firebase.intializeApp().'\n      );\n    }\n\n    const parsedUrl = parseRepoInfo(dbUrl);\n    const repoInfo = parsedUrl.repoInfo;\n\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n    if (!parsedUrl.path.isEmpty()) {\n      fatal(\n        'Database URL must point to the root of a Firebase Database ' +\n          '(not including a child path).'\n      );\n    }\n\n    const repo = this.createRepo(repoInfo, app);\n\n    return repo.database;\n  }\n\n  /**\n   * Remove the repo and make sure it is disconnected.\n   *\n   * @param {!Repo} repo\n   */\n  deleteRepo(repo: Repo) {\n    const appRepos = safeGet(this.repos_, repo.app.name);\n    // This should never happen...\n    if (!appRepos || safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\n        `Database ${repo.app.name}(${repo.repoInfo_}) has already been deleted.`\n      );\n    }\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  }\n\n  /**\n   * Ensures a repo doesn't already exist and then creates one using the\n   * provided app.\n   *\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\n   * @param {!FirebaseApp} app\n   * @return {!Repo} The Repo object for the specified server / repoName.\n   */\n  createRepo(repoInfo: RepoInfo, app: FirebaseApp): Repo {\n    let appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    let repo = safeGet(appRepos, repoInfo.toURLString());\n    if (repo) {\n      fatal(\n        'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n      );\n    }\n    repo = new Repo(repoInfo, this.useRestClient_, app);\n    appRepos[repoInfo.toURLString()] = repo;\n\n    return repo;\n  }\n\n  /**\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n   * @param {boolean} forceRestClient\n   */\n  forceRestClient(forceRestClient: boolean) {\n    this.useRestClient_ = forceRestClient;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/RepoManager.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fatal } from '../core/util/util';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { Path } from '../core/util/Path';\nimport { PromiseImpl } from '../../utils/promise';\nimport { Reference } from './Reference';\nimport { Repo } from '../core/Repo';\nimport { RepoManager } from '../core/RepoManager';\nimport { validateArgCount } from '../../utils/validation';\nimport { validateUrl } from '../core/util/validation';\nimport { FirebaseApp, FirebaseService } from '../../app/firebase_app';\nimport { RepoInfo } from '../core/RepoInfo';\n\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nexport class Database implements FirebaseService {\n  INTERNAL: DatabaseInternals;\n  private root_: Reference;\n\n  static readonly ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    }\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   * @param {!Repo} repo_\n   */\n  constructor(private repo_: Repo) {\n    if (!(repo_ instanceof Repo)) {\n      fatal(\n        \"Don't call new Database() directly - please use firebase.database().\"\n      );\n    }\n\n    /** @type {Reference} */\n    this.root_ = new Reference(repo_, Path.Empty);\n\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  get app(): FirebaseApp {\n    return this.repo_.app;\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in opt_pathString.\n   * @param {string=} pathString\n   * @return {!Reference} Firebase reference.\n   */\n  ref(pathString?: string): Reference {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    return pathString !== undefined ? this.root_.child(pathString) : this.root_;\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @param {string} url\n   * @return {!Reference} Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    /** @const {string} */\n    const apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const parsedURL = parseRepoInfo(url);\n    validateUrl(apiName, 1, parsedURL);\n\n    const repoInfo = parsedURL.repoInfo;\n    if (repoInfo.host !== ((this.repo_ as any).repoInfo_ as RepoInfo).host) {\n      fatal(\n        apiName +\n          ': Host name does not match the current database: ' +\n          '(found ' +\n          repoInfo.host +\n          ' but expected ' +\n          ((this.repo_ as any).repoInfo_ as RepoInfo).host +\n          ')'\n      );\n    }\n\n    return this.ref(parsedURL.path.toString());\n  }\n\n  /**\n   * @param {string} apiName\n   */\n  private checkDeleted_(apiName: string) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n\n  // Make individual repo go offline.\n  goOffline() {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  }\n\n  goOnline() {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  }\n}\n\nexport class DatabaseInternals {\n  /** @param {!Database} database */\n  constructor(public database: Database) {}\n\n  /** @return {Promise<void>} */\n  delete(): Promise<void> {\n    (this.database as any).checkDeleted_('delete');\n    RepoManager.getInstance().deleteRepo((this.database as any).repo_ as Repo);\n\n    (this.database as any).repo_ = null;\n    (this.database as any).root_ = null;\n    this.database.INTERNAL = null;\n    this.database = null;\n    return PromiseImpl.resolve();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/Database.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../Path';\nimport { RepoInfo } from '../../RepoInfo';\nimport { warnIfPageIsSecure, fatal } from '../util';\n\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\nexport const parseRepoInfo = function(\n  dataURL: string\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseURL(dataURL),\n    namespace = parsedUrl.subdomain;\n\n  if (parsedUrl.domain === 'firebase') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (!namespace || namespace == 'undefined') {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nexport const parseURL = function(\n  dataURL: string\n): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host and path.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    host = dataURL.substring(0, slashInd);\n    pathString = decodePath(dataURL.substring(slashInd));\n\n    const parts = host.split('.');\n    if (parts.length === 3) {\n      // Normalize namespaces to lowercase to share storage / connection.\n      domain = parts[1];\n      subdomain = parts[0].toLowerCase();\n    } else if (parts.length === 2) {\n      domain = parts[0];\n    }\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/libs/parser.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils/assert';\nimport { forEach } from '../../utils/obj';\nimport { PersistentStorage } from './storage/storage';\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nexport class RepoInfo {\n  host: string;\n  domain: string;\n  internalHost: string;\n\n  /**\n   * @param {string} host Hostname portion of the url for the repo\n   * @param {boolean} secure Whether or not this repo is accessed over ssl\n   * @param {string} namespace The namespace represented by the repo\n   * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n   * @param {string=} persistenceKey Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public secure: boolean,\n    public namespace: string,\n    public webSocketOnly: boolean,\n    public persistenceKey: string = ''\n  ) {\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  needsQueryParam(): boolean {\n    return this.host !== this.internalHost;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isDemoHost() {\n    return this.domain === 'firebaseio-demo.com';\n  }\n\n  isCustomHost() {\n    return (\n      this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  updateHost(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  }\n\n  /**\n   * Returns the websocket URL for this repo\n   * @param {string} type of connection\n   * @param {Object} params list\n   * @return {string} The URL for this repo\n   */\n  connectionURL(type: string, params: { [k: string]: string }): string {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n\n    let connURL: string;\n    if (type === WEBSOCKET) {\n      connURL =\n        (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL =\n        (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    const pairs: string[] = [];\n\n    forEach(params, (key: string, value: string) => {\n      pairs.push(key + '=' + value);\n    });\n\n    return connURL + pairs.join('&');\n  }\n\n  /** @return {string} */\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  /** @return {string} */\n  toURLString(): string {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/RepoInfo.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '../../../utils/json';\nimport { Path } from '../util/Path';\nimport { EventRegistration } from './EventRegistration';\nimport { DataSnapshot } from '../../api/DataSnapshot';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  /**\n   * @return {!Path}\n   */\n  getPath(): Path;\n\n  /**\n   * @return {!string}\n   */\n  getEventType(): string;\n\n  /**\n   * @return {!function()}\n   */\n  getEventRunner(): () => void;\n\n  /**\n   * @return {!string}\n   */\n  toString(): string;\n}\n\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nexport class DataEvent implements Event {\n  /**\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n   * @param {!DataSnapshot} snapshot The data backing the event\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType:\n      | 'value'\n      | ' child_added'\n      | ' child_changed'\n      | ' child_moved'\n      | ' child_removed',\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  /**\n   * @param {EventRegistration} eventRegistration\n   * @param {Error} error\n   * @param {!Path} path\n   */\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/Event.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataSnapshot } from '../../api/DataSnapshot';\nimport { DataEvent, CancelEvent, Event } from './Event';\nimport { contains, getCount, getAnyKey, every } from '../../../utils/obj';\nimport { assert } from '../../../utils/assert';\nimport { Path } from '../util/Path';\nimport { Change } from './Change';\nimport { Query } from '../../api/Query';\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   * @param {!string} eventType\n   * @return {boolean}\n   */\n  respondsTo(eventType: string): boolean;\n\n  /**\n   * @param {!Change} change\n   * @param {!Query} query\n   * @return {!Event}\n   */\n  createEvent(change: Change, query: Query): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   * @param {!Event} eventData\n   * @return {function()}\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  /**\n   * @param {!Error} error\n   * @param {!Path} path\n   * @return {?CancelEvent}\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  /**\n   * @param {!EventRegistration} other\n   * @return {boolean}\n   */\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   * @return {boolean}\n   */\n  hasAnyCallback(): boolean;\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  /**\n   * @param {?function(!DataSnapshot)} callback_\n   * @param {?function(Error)} cancelCallback_\n   * @param {?Object} context_\n   */\n  constructor(\n    private callback_: ((d: DataSnapshot) => void) | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_: Object | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(change.snapshotNode, query.getRef(), index)\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function() {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callback_;\n      return function() {\n        cb.call(ctx, (eventData as DataEvent).snapshot);\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return (\n        other.callback_ === this.callback_ && other.context_ === this.context_\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callback_ !== null;\n  }\n}\n\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\nexport class ChildEventRegistration implements EventRegistration {\n  /**\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n   * @param {?function(Error)} cancelCallback_\n   * @param {Object=} context_\n   */\n  constructor(\n    private callbacks_:\n      | ({ [k: string]: (d: DataSnapshot, s?: string | null) => void })\n      | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_?: Object\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const ref = query.getRef().child /** @type {!string} */(change.childName);\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      change.type as any,\n      this,\n      new DataSnapshot(change.snapshotNode, ref, index as any),\n      change.prevName\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function() {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callbacks_[(eventData as DataEvent).eventType];\n      return function() {\n        cb.call(\n          ctx,\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        const otherCount = getCount(other.callbacks_);\n        const thisCount = getCount(this.callbacks_);\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          //  If event types don't match, not a match\n          // If count is not 1, exact match across all\n\n          if (otherCount === 1) {\n            const otherKey /** @type {!string} */ = getAnyKey(other.callbacks_);\n            const thisKey /** @type {!string} */ = getAnyKey(this.callbacks_);\n            return (\n              thisKey === otherKey &&\n              (!other.callbacks_[otherKey] ||\n                !this.callbacks_[thisKey] ||\n                other.callbacks_[otherKey] === this.callbacks_[thisKey])\n            );\n          } else {\n            // Exact match on each key.\n            return every(\n              this.callbacks_,\n              (eventType, cb) => other.callbacks_[eventType] === cb\n            );\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callbacks_ !== null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/EventRegistration.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../utils/assert';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { MIN_NAME, MAX_NAME, ObjectToUniqueKey } from '../core/util/util';\nimport { Path } from '../core/util/Path';\nimport {\n  isValidPriority,\n  validateEventType,\n  validatePathString,\n  validateFirebaseDataArg,\n  validateKey\n} from '../core/util/validation';\nimport {\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject\n} from '../../utils/validation';\nimport {\n  ValueEventRegistration,\n  ChildEventRegistration,\n  EventRegistration\n} from '../core/view/EventRegistration';\nimport { Deferred, attachDummyErrorHandler } from '../../utils/promise';\nimport { Repo } from '../core/Repo';\nimport { QueryParams } from '../core/view/QueryParams';\nimport { Reference } from './Reference';\nimport { DataSnapshot } from './DataSnapshot';\n\nlet __referenceConstructor: new (repo: Repo, path: Path) => Query;\n\nexport interface SnapshotCallback {\n  (a: DataSnapshot, b?: string): any;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query {\n  static set __referenceConstructor(val) {\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  constructor(\n    public repo: Repo,\n    public path: Path,\n    private queryParams_: QueryParams,\n    private orderByCalled_: boolean\n  ) {}\n\n  /**\n   * Validates start/end values for queries.\n   * @param {!QueryParams} params\n   * @private\n   */\n  private static validateQueryEndpoints_(params: QueryParams) {\n    let startNode = null;\n    let endNode = null;\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      const tooManyArgsError =\n        'Query: When ordering by key, you may only pass one argument to ' +\n        'startAt(), endAt(), or equalTo().';\n      const wrongArgTypeError =\n        'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\n        'or equalTo() must be a string.';\n      if (params.hasStart()) {\n        const startName = params.getIndexStartName();\n        if (startName != MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n      if (params.hasEnd()) {\n        const endName = params.getIndexEndName();\n        if (endName != MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (\n        (startNode != null && !isValidPriority(startNode)) ||\n        (endNode != null && !isValidPriority(endNode))\n      ) {\n        throw new Error(\n          'Query: When ordering by priority, the first argument passed to startAt(), ' +\n            'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).'\n        );\n      }\n    } else {\n      assert(\n        params.getIndex() instanceof PathIndex ||\n          params.getIndex() === VALUE_INDEX,\n        'unknown index type.'\n      );\n      if (\n        (startNode != null && typeof startNode === 'object') ||\n        (endNode != null && typeof endNode === 'object')\n      ) {\n        throw new Error(\n          'Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\n            'an object.'\n        );\n      }\n    }\n  }\n\n  /**\n   * Validates that limit* has been called with the correct combination of parameters\n   * @param {!QueryParams} params\n   * @private\n   */\n  private static validateLimit_(params: QueryParams) {\n    if (\n      params.hasStart() &&\n      params.hasEnd() &&\n      params.hasLimit() &&\n      !params.hasAnchoredLimit()\n    ) {\n      throw new Error(\n        \"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\"\n      );\n    }\n  }\n\n  /**\n   * Validates that no other order by call has been made\n   * @param {!string} fnName\n   * @private\n   */\n  private validateNoPreviousOrderByCall_(fnName: string) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  }\n\n  /**\n   * @return {!QueryParams}\n   */\n  getQueryParams(): QueryParams {\n    return this.queryParams_;\n  }\n\n  /**\n   * @return {!Reference}\n   */\n  getRef(): Reference {\n    validateArgCount('Query.ref', 0, 0, arguments.length);\n    // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n    return new Query.__referenceConstructor(this.repo, this.path) as Reference;\n  }\n\n  /**\n   * @param {!string} eventType\n   * @param {!function(DataSnapshot, string=)} callback\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\n   * @param {Object=} context\n   * @return {!function(DataSnapshot, string=)}\n   */\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => any) | Object,\n    context?: Object\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      const callbacks: { [k: string]: typeof callback } = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n    return callback;\n  }\n\n  /**\n   * @param {!function(!DataSnapshot)} callback\n   * @param {?function(Error)} cancelCallback\n   * @param {?Object} context\n   * @protected\n   */\n  protected onValueEvent(\n    callback: (a: DataSnapshot) => void,\n    cancelCallback: ((a: Error) => void) | null,\n    context: Object | null\n  ) {\n    const container = new ValueEventRegistration(\n      callback,\n      cancelCallback || null,\n      context || null\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n   * @param {?function(Error)} cancelCallback\n   * @param {?Object} context\n   * @protected\n   */\n  onChildEvent(\n    callbacks: { [k: string]: SnapshotCallback },\n    cancelCallback: ((a: Error) => any) | null,\n    context: Object | null\n  ) {\n    const container = new ChildEventRegistration(\n      callbacks,\n      cancelCallback,\n      context\n    );\n    this.repo.addEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * @param {string=} eventType\n   * @param {(function(!DataSnapshot, ?string=))=} callback\n   * @param {Object=} context\n   */\n  off(eventType?: string, callback?: SnapshotCallback, context?: Object) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n\n    let container: EventRegistration | null = null;\n    let callbacks: { [k: string]: typeof callback } | null = null;\n    if (eventType === 'value') {\n      const valueCallback = callback || null;\n      container = new ValueEventRegistration(\n        valueCallback,\n        null,\n        context || null\n      );\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n    this.repo.removeEventCallbackForQuery(this, container);\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   * @param {!string} eventType\n   * @param {!function(!DataSnapshot, string=)} userCallback\n   * @param cancelOrContext\n   * @param context\n   * @return {!firebase.Promise}\n   */\n  once(\n    eventType: string,\n    userCallback?: SnapshotCallback,\n    cancelOrContext?: ((a: Error) => void) | Object,\n    context?: Object\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      cancelOrContext,\n      context\n    );\n\n    // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n    let firstCall = true;\n    const deferred = new Deferred();\n    attachDummyErrorHandler(deferred.promise);\n\n    const onceCallback = (snapshot: DataSnapshot) => {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n        this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(\n      eventType,\n      onceCallback,\n      /*cancel=*/ err => {\n        this.off(eventType, onceCallback);\n\n        if (ret.cancel) ret.cancel.bind(ret.context)(err);\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   * @param {!number} limit\n   * @return {!Query}\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToFirst: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToFirst: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      this.queryParams_.limitToFirst(limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   * @param {!number} limit\n   * @return {!Query}\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToLast: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToLast: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.repo,\n      this.path,\n      this.queryParams_.limitToLast(limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   * @param {!string} path\n   * @return {!Query}\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    if (path === '$key') {\n      throw new Error(\n        'Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.'\n      );\n    } else if (path === '$priority') {\n      throw new Error(\n        'Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.'\n      );\n    } else if (path === '$value') {\n      throw new Error(\n        'Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.'\n      );\n    }\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    const parsedPath = new Path(path);\n    if (parsedPath.isEmpty()) {\n      throw new Error(\n        'Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   * @return {!Query}\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    const newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   * @return {!Query}\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    const newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   * @return {!Query}\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    const newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n  }\n\n  /**\n   * @param {number|string|boolean|null} value\n   * @param {?string=} name\n   * @return {!Query}\n   */\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n\n    const newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAt: Starting point was already set (by another call to startAt ' +\n          'or equalTo).'\n      );\n    }\n\n    // Calling with no params tells us to start at the beginning.\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * @param {number|string|boolean|null} value\n   * @param {?string=} name\n   * @return {!Query}\n   */\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n\n    const newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endAt: Ending point was already set (by another call to endAt or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   * @param {number|string|boolean|null} value\n   * @param {string=} name\n   * @return {!Query}\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.equalTo: Starting point was already set (by another call to startAt or ' +\n          'equalTo).'\n      );\n    }\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.equalTo: Ending point was already set (by another call to endAt or ' +\n          'equalTo).'\n      );\n    }\n    return this.startAt(value, name).endAt(value, name);\n  }\n\n  /**\n   * @return {!string} URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   * @return {!Object}\n   */\n  queryObject(): Object {\n    return this.queryParams_.getQueryObject();\n  }\n\n  /**\n   * @return {!string}\n   */\n  queryIdentifier(): string {\n    const obj = this.queryObject();\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   * @param {Query} other\n   * @return {boolean}\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    const sameRepo = this.repo === other.repo;\n    const samePath = this.path.equals(other.path);\n    const sameQueryIdentifier =\n      this.queryIdentifier() === other.queryIdentifier();\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param {!string} fnName The function name (on or once)\n   * @param {(function(Error)|Object)=} cancelOrContext\n   * @param {Object=} context\n   * @return {{cancel: ?function(Error), context: ?Object}}\n   * @private\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | Object,\n    context?: Object\n  ): { cancel: ((a: Error) => void) | null; context: Object | null } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: Object | null;\n    } = { cancel: null, context: null };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 3, ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 3, true) +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/Query.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { doubleToIEEE754String } from '../util/util';\nimport { contains } from '../../../utils/obj';\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nexport const priorityHashText = function(priority: string | number): string {\n  if (typeof priority === 'number')\n    return 'number:' + doubleToIEEE754String(priority);\n  else return 'string:' + priority;\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nexport const validatePriorityNode = function(priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/snap.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from './Index';\nimport { NamedNode, Node } from '../Node';\nimport { nameCompare } from '../../util/util';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nexport class ValueIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return (NamedNode as any).MAX;\n  }\n\n  /**\n   * @param {*} indexValue\n   * @param {string} name\n   * @return {!NamedNode}\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @return {!string} String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/indexes/ValueIndex.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { buildChildSet } from './childSet';\nimport { contains, clone, map, safeGet } from '../../../utils/obj';\nimport { NamedNode, Node } from './Node';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { SortedMap } from '../util/SortedMap';\nimport { Index } from './indexes/Index';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\n/**\n *\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\n * @param {Object.<string, Index>} indexSet\n * @constructor\n */\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   * @type {!IndexMap}\n   * @const\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  /**\n   *\n   * @param {!string} indexKey\n   * @return {?SortedMap.<NamedNode, Node>}\n   */\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) throw new Error('No index defined for ' + indexKey);\n\n    if (sortedMap === fallbackObject) {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    } else {\n      return sortedMap;\n    }\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @return {boolean}\n   */\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  /**\n   * @param {!Index} indexDefinition\n   * @param {!SortedMap.<string, !Node>} existingChildren\n   * @return {!IndexMap}\n   */\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = clone(this.indexSet_);\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = clone(this.indexes_);\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   * @param {!NamedNode} namedNode\n   * @param {!SortedMap.<string, !Node>} existingChildren\n   * @return {!IndexMap}\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name != namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   * @param {!NamedNode} namedNode\n   * @param {!SortedMap.<string, !Node>} existingChildren\n   * @return {!IndexMap}\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(this.indexes_, function(\n      indexedChildren: SortedMap<NamedNode, Node>\n    ) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        const existingSnap = existingChildren.get(namedNode.name);\n        if (existingSnap) {\n          return indexedChildren.remove(\n            new NamedNode(namedNode.name, existingSnap)\n          );\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/IndexMap.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode } from '../util/SortedMap';\nimport { SortedMap } from '../util/SortedMap';\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\n/**\n * @constructor\n */\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  /**\n   * @param {number} length\n   */\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nexport const buildChildSet = function<K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function(\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length == 0) {\n      return null;\n    } else if (length == 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as any) as K;\n      return new LLRBNode(\n        key,\n        (namedNode.node as any) as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as any) as K;\n      return new LLRBNode(\n        key,\n        (namedNode.node as any) as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function(base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function(chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as any) as K;\n      attachPennant(\n        new LLRBNode(key, (namedNode.node as any) as V, color, null, childTree)\n      );\n    };\n\n    const attachPennant = function(pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/childSet.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/comparators.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../../utils/assert';\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { Index } from './Index';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\nimport { Path } from '../../util/Path';\n\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !indexPath_.isEmpty() && indexPath_.getFront() !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  /**\n   * @param {!Node} snap\n   * @return {!Node}\n   * @protected\n   */\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.indexPath_.slice().join('/');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/snap/indexes/PathIndex.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback } from '../../utils/validation';\nimport { validatePathString } from '../core/util/validation';\nimport { Path } from '../core/util/Path';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { Reference } from './Reference';\nimport { Index } from '../core/snap/indexes/Index';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot {\n  /**\n   * @param {!Node} node_ A SnapshotNode to wrap.\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\n   * @param {!Index} index_ The iteration order for this snapshot\n   */\n  constructor(\n    private readonly node_: Node,\n    private readonly ref_: Reference,\n    private readonly index_: Index\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): any {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): any {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): any {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param {!string} childPathString Path to a child.\n   * @return {!DataSnapshot} DataSnapshot for child node.\n   */\n  child(childPathString: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    const childRef = this.ref_.child(childPath);\n    return new DataSnapshot(\n      this.node_.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param {!string} childPathString Path to a child.\n   * @return {boolean} Whether the child exists.\n   */\n  hasChild(childPathString: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @return {string|number|null} The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this.node_.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param {function(!DataSnapshot)} action Callback function to be called\n   * for each child.\n   * @return {boolean} True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (d: DataSnapshot) => void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) return false;\n\n    const childrenNode = this.node_ as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this.index_, (key, node) => {\n      return action(\n        new DataSnapshot(node, this.ref_.child(key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) return false;\n    else return !this.node_.isEmpty();\n  }\n\n  get key() {\n    return this.ref_.getKey();\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @return {number} The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n\n    return this.node_.numChildren();\n  }\n\n  /**\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n\n    return this.ref_;\n  }\n\n  get ref() {\n    return this.getRef();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/DataSnapshot.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { Path } from './Path';\nimport { SparseSnapshotTree } from '../SparseSnapshotTree';\nimport { LeafNode } from '../snap/LeafNode';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { ChildrenNode } from '../snap/ChildrenNode';\n\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nexport const generateWithValues = function(values: {\n  [k: string]: any;\n} | null): { [k: string]: any } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nexport const resolveDeferredValue = function(\n  value: { [k: string]: any } | string | number | boolean,\n  serverValues: { [k: string]: any }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  } else {\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\n    return serverValues[value['.sv']];\n  }\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!SparseSnapshotTree} tree\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nexport const resolveDeferredValueTree = function(\n  tree: SparseSnapshotTree,\n  serverValues: Object\n): SparseSnapshotTree {\n  const resolvedTree = new SparseSnapshotTree();\n  tree.forEachTree(new Path(''), function(path, node) {\n    resolvedTree.remember(\n      path,\n      resolveDeferredValueSnapshot(node, serverValues)\n    );\n  });\n  return resolvedTree;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nexport const resolveDeferredValueSnapshot = function(\n  node: Node,\n  serverValues: Object\n): Node {\n  const rawPri = node.getPriority().val() as\n    | object\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredValue(rawPri, serverValues);\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredValue(leafNode.getValue(), serverValues);\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, function(childName, childNode) {\n      const newChildNode = resolveDeferredValueSnapshot(\n        childNode,\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/ServerValues.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from './util/Path';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { CountedSet } from './util/CountedSet';\nimport { Node } from './snap/Node';\n\n/**\n * Helper class to store a sparse set of snapshots.\n *\n * @constructor\n */\nexport class SparseSnapshotTree {\n  /**\n   * @private\n   * @type {Node}\n   */\n  private value_: Node | null = null;\n\n  /**\n   * @private\n   * @type {CountedSet}\n   */\n  private children_: CountedSet<string, SparseSnapshotTree> | null = null;\n\n  /**\n   * Gets the node stored at the given path if one exists.\n   *\n   * @param {!Path} path Path to look up snapshot for.\n   * @return {?Node} The retrieved node, or null.\n   */\n  find(path: Path): Node | null {\n    if (this.value_ != null) {\n      return this.value_.getChild(path);\n    } else if (!path.isEmpty() && this.children_ != null) {\n      const childKey = path.getFront();\n      path = path.popFront();\n      if (this.children_.contains(childKey)) {\n        const childTree = this.children_.get(childKey) as SparseSnapshotTree;\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Stores the given node at the specified path. If there is already a node\n   * at a shallower path, it merges the new data into that snapshot node.\n   *\n   * @param {!Path} path Path to look up snapshot for.\n   * @param {!Node} data The new data, or null.\n   */\n  remember(path: Path, data: Node) {\n    if (path.isEmpty()) {\n      this.value_ = data;\n      this.children_ = null;\n    } else if (this.value_ !== null) {\n      this.value_ = this.value_.updateChild(path, data);\n    } else {\n      if (this.children_ == null) {\n        this.children_ = new CountedSet<string, SparseSnapshotTree>();\n      }\n\n      const childKey = path.getFront();\n      if (!this.children_.contains(childKey)) {\n        this.children_.add(childKey, new SparseSnapshotTree());\n      }\n\n      const child = this.children_.get(childKey) as SparseSnapshotTree;\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  }\n\n  /**\n   * Purge the data at path from the cache.\n   *\n   * @param {!Path} path Path to look up snapshot for.\n   * @return {boolean} True if this node should now be removed.\n   */\n  forget(path: Path): boolean {\n    if (path.isEmpty()) {\n      this.value_ = null;\n      this.children_ = null;\n      return true;\n    } else {\n      if (this.value_ !== null) {\n        if (this.value_.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          const value = this.value_;\n          this.value_ = null;\n\n          const self = this;\n          value.forEachChild(PRIORITY_INDEX, function(key, tree) {\n            self.remember(new Path(key), tree);\n          });\n\n          return this.forget(path);\n        }\n      } else if (this.children_ !== null) {\n        const childKey = path.getFront();\n        path = path.popFront();\n        if (this.children_.contains(childKey)) {\n          const safeToRemove = (this.children_.get(\n            childKey\n          ) as SparseSnapshotTree).forget(path);\n          if (safeToRemove) {\n            this.children_.remove(childKey);\n          }\n        }\n\n        if (this.children_.isEmpty()) {\n          this.children_ = null;\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Recursively iterates through all of the stored tree and calls the\n   * callback on each one.\n   *\n   * @param {!Path} prefixPath Path to look up node for.\n   * @param {!Function} func The function to invoke for each tree.\n   */\n  forEachTree(prefixPath: Path, func: (a: Path, b: Node) => any) {\n    if (this.value_ !== null) {\n      func(prefixPath, this.value_);\n    } else {\n      this.forEachChild((key, tree) => {\n        const path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  }\n\n  /**\n   * Iterates through each immediate child and triggers the callback.\n   *\n   * @param {!Function} func The function to invoke for each child.\n   */\n  forEachChild(func: (a: string, b: SparseSnapshotTree) => void) {\n    if (this.children_ !== null) {\n      this.children_.each((key, tree) => {\n        func(key, tree);\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/SparseSnapshotTree.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isEmpty, getCount, forEach, contains } from '../../../utils/obj';\n\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nexport class CountedSet<K, V> {\n  set: { [k: string]: V } = {};\n\n  /**\n   * @param {!K} item\n   * @param {V} val\n   */\n  add(item: K, val: V) {\n    this.set[item as any] = val !== null ? val : true as any;\n  }\n\n  /**\n   * @param {!K} key\n   * @return {boolean}\n   */\n  contains(key: K) {\n    return contains(this.set, key);\n  }\n\n  /**\n   * @param {!K} item\n   * @return {V}\n   */\n  get(item: K): V | void {\n    return this.contains(item) ? this.set[item as any] : undefined;\n  }\n\n  /**\n   * @param {!K} item\n   */\n  remove(item: K) {\n    delete this.set[item as any];\n  }\n\n  /**\n   * Deletes everything in the set\n   */\n  clear() {\n    this.set = {};\n  }\n\n  /**\n   * True if there's nothing in the set\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return isEmpty(this.set);\n  }\n\n  /**\n   * @return {number} The number of items in the set\n   */\n  count(): number {\n    return getCount(this.set);\n  }\n\n  /**\n   * Run a function on each k,v pair in the set\n   * @param {function(K, V)} fn\n   */\n  each(fn: (k: K, v: V) => void) {\n    forEach(this.set, (k: K, v: V) => fn(k, v));\n  }\n\n  /**\n   * Mostly for debugging\n   * @return {Array.<K>} The keys present in this CountedSet\n   */\n  keys(): K[] {\n    const keys: K[] = [];\n    forEach(this.set, (k: K) => {\n      keys.push(k);\n    });\n    return keys;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/CountedSet.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  /**\n   * @param {!Node} node_\n   * @param {boolean} fullyInitialized_\n   * @param {boolean} filtered_\n   */\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   * @return {boolean}\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   * @return {boolean}\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  /**\n   * @param {!Path} path\n   * @return {boolean}\n   */\n  isCompleteForPath(path: Path): boolean {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  }\n\n  /**\n   * @param {!string} key\n   * @return {boolean}\n   */\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  /**\n   * @return {!Node}\n   */\n  getNode(): Node {\n    return this.node_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/CacheNode.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { Node } from '../snap/Node';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nexport class ViewCache {\n  /**\n   *\n   * @param {!CacheNode} eventCache_\n   * @param {!CacheNode} serverCache_\n   */\n  constructor(\n    private readonly eventCache_: CacheNode,\n    private readonly serverCache_: CacheNode\n  ) {}\n\n  /**\n   * @const\n   * @type {ViewCache}\n   */\n  static Empty = new ViewCache(\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    ),\n    new CacheNode(\n      ChildrenNode.EMPTY_NODE,\n      /*fullyInitialized=*/ false,\n      /*filtered=*/ false\n    )\n  );\n\n  /**\n   * @param {!Node} eventSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateEventSnap(\n    eventSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      new CacheNode(eventSnap, complete, filtered),\n      this.serverCache_\n    );\n  }\n\n  /**\n   * @param {!Node} serverSnap\n   * @param {boolean} complete\n   * @param {boolean} filtered\n   * @return {!ViewCache}\n   */\n  updateServerSnap(\n    serverSnap: Node,\n    complete: boolean,\n    filtered: boolean\n  ): ViewCache {\n    return new ViewCache(\n      this.eventCache_,\n      new CacheNode(serverSnap, complete, filtered)\n    );\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getEventCache(): CacheNode {\n    return this.eventCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteEventSnap(): Node | null {\n    return this.eventCache_.isFullyInitialized()\n      ? this.eventCache_.getNode()\n      : null;\n  }\n\n  /**\n   * @return {!CacheNode}\n   */\n  getServerCache(): CacheNode {\n    return this.serverCache_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getCompleteServerSnap(): Node | null {\n    return this.serverCache_.isFullyInitialized()\n      ? this.serverCache_.getNode()\n      : null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/ViewCache.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getValues, safeGet } from '../../../utils/obj';\nimport { Change } from './Change';\nimport { assert, assertionError } from '../../../utils/assert';\n\n/**\n * @constructor\n */\nexport class ChildChangeAccumulator {\n  private changeMap_: { [k: string]: Change } = {};\n\n  /**\n   * @param {!Change} change\n   */\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey /** @type {!string} */ = change.childName;\n    assert(\n      type == Change.CHILD_ADDED ||\n        type == Change.CHILD_CHANGED ||\n        type == Change.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = safeGet(this.changeMap_, childKey) as Change;\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\n        this.changeMap_[childKey] = Change.childChangedChange(\n          childKey,\n          change.snapshotNode,\n          oldChange.snapshotNode\n        );\n      } else if (\n        type == Change.CHILD_REMOVED &&\n        oldType == Change.CHILD_ADDED\n      ) {\n        delete this.changeMap_[childKey];\n      } else if (\n        type == Change.CHILD_REMOVED &&\n        oldType == Change.CHILD_CHANGED\n      ) {\n        this.changeMap_[childKey] = Change.childRemovedChange(\n          childKey,\n          oldChange.oldSnap\n        );\n      } else if (\n        type == Change.CHILD_CHANGED &&\n        oldType == Change.CHILD_ADDED\n      ) {\n        this.changeMap_[childKey] = Change.childAddedChange(\n          childKey,\n          change.snapshotNode\n        );\n      } else if (\n        type == Change.CHILD_CHANGED &&\n        oldType == Change.CHILD_CHANGED\n      ) {\n        this.changeMap_[childKey] = Change.childChangedChange(\n          childKey,\n          change.snapshotNode,\n          oldChange.oldSnap\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap_[childKey] = change;\n    }\n  }\n\n  /**\n   * @return {!Array.<!Change>}\n   */\n  getChanges(): Change[] {\n    return getValues(this.changeMap_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/ChildChangeAccumulator.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './CacheNode';\nimport { NamedNode, Node } from '../snap/Node';\nimport { Index } from '../snap/indexes/Index';\nimport { WriteTreeRef } from '../WriteTree';\nimport { ViewCache } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  /**\n   * @param {!string} childKey\n   * @return {?Node}\n   */\n  getCompleteChild(childKey: string): Node | null;\n\n  /**\n   * @param {!Index} index\n   * @param {!NamedNode} child\n   * @param {boolean} reverse\n   * @return {?NamedNode}\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  /**\n   * @param {!WriteTreeRef} writes_\n   * @param {!ViewCache} viewCache_\n   * @param {?Node} optCompleteServerCache_\n   */\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.getEventCache();\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : this.viewCache_.getCompleteServerSnap();\n    const nodes = this.writes_.calcIndexedSlice(\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/CompleteChildSource.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { assert, assertionError } from '../../../utils/assert';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport { Change } from './Change';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport { Path } from '../util/Path';\nimport {\n  WriteTreeCompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  CompleteChildSource\n} from './CompleteChildSource';\nimport { ViewCache } from './ViewCache';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { WriteTreeRef } from '../WriteTree';\nimport { Overwrite } from '../operation/Overwrite';\nimport { Merge } from '../operation/Merge';\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Node } from '../snap/Node';\n\n/**\n * @constructor\n * @struct\n */\nexport class ProcessorResult {\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Array.<!Change>} changes\n   */\n  constructor(\n    public readonly viewCache: ViewCache,\n    public readonly changes: Change[]\n  ) {}\n}\n\n/**\n * @constructor\n */\nexport class ViewProcessor {\n  /**\n   * @param {!NodeFilter} filter_\n   */\n  constructor(private readonly filter_: NodeFilter) {}\n\n  /**\n   * @param {!ViewCache} viewCache\n   */\n  assertIndexed(viewCache: ViewCache) {\n    assert(\n      viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Event snap not indexed'\n    );\n    assert(\n      viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()),\n      'Server snap not indexed'\n    );\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Operation} operation\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @return {!ProcessorResult}\n   */\n  applyOperation(\n    oldViewCache: ViewCache,\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null\n  ): ProcessorResult {\n    const accumulator = new ChildChangeAccumulator();\n    let newViewCache, filterServerNode;\n    if (operation.type === OperationType.OVERWRITE) {\n      const overwrite = operation as Overwrite;\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n        filterServerNode =\n          overwrite.source.tagged ||\n          (oldViewCache.getServerCache().isFiltered() &&\n            !overwrite.path.isEmpty());\n        newViewCache = this.applyServerOverwrite_(\n          oldViewCache,\n          overwrite.path,\n          overwrite.snap,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      const merge = operation as Merge;\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.');\n        // We filter the node if it's a tagged update or the node has been previously filtered\n        filterServerNode =\n          merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(\n          oldViewCache,\n          merge.path,\n          merge.children,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      const ackUserWrite = operation as AckUserWrite;\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          ackUserWrite.affectedTree,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      } else {\n        newViewCache = this.revertUserWrite_(\n          oldViewCache,\n          ackUserWrite.path,\n          writesCache,\n          completeCache,\n          accumulator\n        );\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(\n        oldViewCache,\n        operation.path,\n        writesCache,\n        accumulator\n      );\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n    const changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!ViewCache} newViewCache\n   * @param {!Array.<!Change>} accumulator\n   * @private\n   */\n  private static maybeAddValueEvent_(\n    oldViewCache: ViewCache,\n    newViewCache: ViewCache,\n    accumulator: Change[]\n  ) {\n    const eventSnap = newViewCache.getEventCache();\n    if (eventSnap.isFullyInitialized()) {\n      const isLeafOrEmpty =\n        eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      const oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n      if (\n        accumulator.length > 0 ||\n        !oldViewCache.getEventCache().isFullyInitialized() ||\n        (isLeafOrEmpty &&\n          !eventSnap.getNode().equals /** @type {!Node} */(oldCompleteSnap)) ||\n        !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n      ) {\n        accumulator.push(\n          Change.valueChange(\n            /** @type {!Node} */ newViewCache.getCompleteEventSnap()\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} changePath\n   * @param {!WriteTreeRef} writesCache\n   * @param {!CompleteChildSource} source\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private generateEventCacheAfterServerEvent_(\n    viewCache: ViewCache,\n    changePath: Path,\n    writesCache: WriteTreeRef,\n    source: CompleteChildSource,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = viewCache.getEventCache();\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      let newEventCache, serverNode;\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(\n          viewCache.getServerCache().isFullyInitialized(),\n          'If change path is empty, we must have complete server data'\n        );\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          const serverCache = viewCache.getCompleteServerSnap();\n          const completeChildren =\n            serverCache instanceof ChildrenNode\n              ? serverCache\n              : ChildrenNode.EMPTY_NODE;\n          const completeEventChildren = writesCache.calcCompleteEventChildren(\n            completeChildren\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeEventChildren,\n            accumulator\n          );\n        } else {\n          const completeNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          newEventCache = this.filter_.updateFullNode(\n            viewCache.getEventCache().getNode(),\n            completeNode,\n            accumulator\n          );\n        }\n      } else {\n        const childKey = changePath.getFront();\n        if (childKey == '.priority') {\n          assert(\n            changePath.getLength() == 1,\n            \"Can't have a priority with additional path components\"\n          );\n          const oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode();\n          // we might have overwrites for this priority\n          const updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(\n            changePath,\n            oldEventNode,\n            serverNode\n          );\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(\n              oldEventNode,\n              updatedPriority\n            );\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          const childChangePath = changePath.popFront();\n          // update child\n          let newEventChild;\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            const eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey)\n                .updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap\n                .getNode()\n                .getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(\n              childKey,\n              viewCache.getServerCache()\n            );\n          }\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(\n              oldEventSnap.getNode(),\n              childKey,\n              newEventChild,\n              childChangePath,\n              source,\n              accumulator\n            );\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n      return viewCache.updateEventSnap(\n        newEventCache,\n        oldEventSnap.isFullyInitialized() || changePath.isEmpty(),\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Path} changePath\n   * @param {!Node} changedSnap\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {boolean} filterServerNode\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  applyServerOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerSnap = oldViewCache.getServerCache();\n    let newServerCache;\n    const serverFilter = filterServerNode\n      ? this.filter_\n      : this.filter_.getIndexedFilter();\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        changedSnap,\n        null\n      );\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      const newServerNode = oldServerSnap\n        .getNode()\n        .updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(\n        oldServerSnap.getNode(),\n        newServerNode,\n        null\n      );\n    } else {\n      const childKey = changePath.getFront();\n      if (\n        !oldServerSnap.isCompleteForPath(changePath) &&\n        changePath.getLength() > 1\n      ) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n      const childChangePath = changePath.popFront();\n      const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n      if (childKey == '.priority') {\n        newServerCache = serverFilter.updatePriority(\n          oldServerSnap.getNode(),\n          newChildNode\n        );\n      } else {\n        newServerCache = serverFilter.updateChild(\n          oldServerSnap.getNode(),\n          childKey,\n          newChildNode,\n          childChangePath,\n          NO_COMPLETE_CHILD_SOURCE,\n          null\n        );\n      }\n    }\n    const newViewCache = oldViewCache.updateServerSnap(\n      newServerCache,\n      oldServerSnap.isFullyInitialized() || changePath.isEmpty(),\n      serverFilter.filtersNodes()\n    );\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      newViewCache,\n      completeCache\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      changePath,\n      writesCache,\n      source,\n      accumulator\n    );\n  }\n\n  /**\n   * @param {!ViewCache} oldViewCache\n   * @param {!Path} changePath\n   * @param {!Node} changedSnap\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  applyUserOverwrite_(\n    oldViewCache: ViewCache,\n    changePath: Path,\n    changedSnap: Node,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldEventSnap = oldViewCache.getEventCache();\n    let newViewCache, newEventCache;\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      oldViewCache,\n      completeCache\n    );\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(\n        oldViewCache.getEventCache().getNode(),\n        changedSnap,\n        accumulator\n      );\n      newViewCache = oldViewCache.updateEventSnap(\n        newEventCache,\n        true,\n        this.filter_.filtersNodes()\n      );\n    } else {\n      const childKey = changePath.getFront();\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(\n          oldViewCache.getEventCache().getNode(),\n          changedSnap\n        );\n        newViewCache = oldViewCache.updateEventSnap(\n          newEventCache,\n          oldEventSnap.isFullyInitialized(),\n          oldEventSnap.isFiltered()\n        );\n      } else {\n        const childChangePath = changePath.popFront();\n        const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        let newChild;\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          const childNode = source.getCompleteChild(childKey);\n          if (childNode != null) {\n            if (\n              childChangePath.getBack() === '.priority' &&\n              childNode.getChild(childChangePath.parent()).isEmpty()\n            ) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n        if (!oldChild.equals(newChild)) {\n          const newEventSnap = this.filter_.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n          newViewCache = oldViewCache.updateEventSnap(\n            newEventSnap,\n            oldEventSnap.isFullyInitialized(),\n            this.filter_.filtersNodes()\n          );\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n    return newViewCache;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {string} childKey\n   * @return {boolean}\n   * @private\n   */\n  private static cacheHasChild_(\n    viewCache: ViewCache,\n    childKey: string\n  ): boolean {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {ImmutableTree.<!Node>} changedChildren\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private applyUserMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = path.child(relativePath);\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    changedChildren.foreach((relativePath, childNode) => {\n      const writePath = path.child(relativePath);\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = this.applyUserOverwrite_(\n          curViewCache,\n          writePath,\n          childNode,\n          writesCache,\n          serverCache,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  /**\n   * @param {!Node} node\n   * @param {ImmutableTree.<!Node>} merge\n   * @return {!Node}\n   * @private\n   */\n  private applyMerge_(node: Node, merge: ImmutableTree<Node>): Node {\n    merge.foreach(function(relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!ImmutableTree.<!Node>} changedChildren\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache\n   * @param {boolean} filterServerNode\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private applyServerMerge_(\n    viewCache: ViewCache,\n    path: Path,\n    changedChildren: ImmutableTree<Node>,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    filterServerNode: boolean,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n    if (\n      viewCache.getServerCache().getNode().isEmpty() &&\n      !viewCache.getServerCache().isFullyInitialized()\n    ) {\n      return viewCache;\n    }\n\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n    let curViewCache = viewCache;\n    let viewMergeTree;\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n    const serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n      if (serverNode.hasChild(childKey)) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n      const isUnknownDeepMerge =\n        !viewCache.getServerCache().isCompleteForChild(childKey) &&\n        childMergeTree.value == null;\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        const serverChild = viewCache\n          .getServerCache()\n          .getNode()\n          .getImmediateChild(childKey);\n        const newChild = this.applyMerge_(serverChild, childMergeTree);\n        curViewCache = this.applyServerOverwrite_(\n          curViewCache,\n          new Path(childKey),\n          newChild,\n          writesCache,\n          serverCache,\n          filterServerNode,\n          accumulator\n        );\n      }\n    });\n\n    return curViewCache;\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} ackPath\n   * @param {!ImmutableTree<!boolean>} affectedTree\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private ackUserWrite_(\n    viewCache: ViewCache,\n    ackPath: Path,\n    affectedTree: ImmutableTree<boolean>,\n    writesCache: WriteTreeRef,\n    completeCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    }\n\n    // Only filter server node if it is currently filtered\n    const filterServerNode = viewCache.getServerCache().isFiltered();\n\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n    const serverCache = viewCache.getServerCache();\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (\n        (ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\n        serverCache.isCompleteForPath(ackPath)\n      ) {\n        return this.applyServerOverwrite_(\n          viewCache,\n          ackPath,\n          serverCache.getNode().getChild(ackPath),\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        let changedChildren = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function(name, node) {\n          changedChildren = changedChildren.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(\n          viewCache,\n          ackPath,\n          changedChildren,\n          writesCache,\n          completeCache,\n          filterServerNode,\n          accumulator\n        );\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      let changedChildren = ImmutableTree.Empty;\n      affectedTree.foreach(function(mergePath, value) {\n        const serverCachePath = ackPath.child(mergePath);\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren = changedChildren.set(\n            mergePath,\n            serverCache.getNode().getChild(serverCachePath)\n          );\n        }\n      });\n      return this.applyServerMerge_(\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!WriteTreeRef} writesCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private listenComplete_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    const oldServerNode = viewCache.getServerCache();\n    const newViewCache = viewCache.updateServerSnap(\n      oldServerNode.getNode(),\n      oldServerNode.isFullyInitialized() || path.isEmpty(),\n      oldServerNode.isFiltered()\n    );\n    return this.generateEventCacheAfterServerEvent_(\n      newViewCache,\n      path,\n      writesCache,\n      NO_COMPLETE_CHILD_SOURCE,\n      accumulator\n    );\n  }\n\n  /**\n   * @param {!ViewCache} viewCache\n   * @param {!Path} path\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeServerCache\n   * @param {!ChildChangeAccumulator} accumulator\n   * @return {!ViewCache}\n   * @private\n   */\n  private revertUserWrite_(\n    viewCache: ViewCache,\n    path: Path,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null,\n    accumulator: ChildChangeAccumulator\n  ): ViewCache {\n    let complete;\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      const source = new WriteTreeCompleteChildSource(\n        writesCache,\n        viewCache,\n        completeServerCache\n      );\n      const oldEventCache = viewCache.getEventCache().getNode();\n      let newEventCache;\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        let newNode;\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n        } else {\n          const serverChildren = viewCache.getServerCache().getNode();\n          assert(\n            serverChildren instanceof ChildrenNode,\n            'serverChildren would be complete if leaf node'\n          );\n          newNode = writesCache.calcCompleteEventChildren(\n            serverChildren as ChildrenNode\n          );\n        }\n        newNode = newNode as Node;\n        newEventCache = this.filter_.updateFullNode(\n          oldEventCache,\n          newNode,\n          accumulator\n        );\n      } else {\n        const childKey = path.getFront();\n        let newChild = writesCache.calcCompleteChild(\n          childKey,\n          viewCache.getServerCache()\n        );\n        if (\n          newChild == null &&\n          viewCache.getServerCache().isCompleteForChild(childKey)\n        ) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            newChild,\n            path.popFront(),\n            source,\n            accumulator\n          );\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(\n            oldEventCache,\n            childKey,\n            ChildrenNode.EMPTY_NODE,\n            path.popFront(),\n            source,\n            accumulator\n          );\n        } else {\n          newEventCache = oldEventCache;\n        }\n        if (\n          newEventCache.isEmpty() &&\n          viewCache.getServerCache().isFullyInitialized()\n        ) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(\n            viewCache.getCompleteServerSnap()\n          );\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(\n              newEventCache,\n              complete,\n              accumulator\n            );\n          }\n        }\n      }\n      complete =\n        viewCache.getServerCache().isFullyInitialized() ||\n        writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(\n        newEventCache,\n        complete,\n        this.filter_.filtersNodes()\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/ViewProcessor.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../snap/Node';\nimport { Change } from './Change';\nimport { assertionError } from '../../../utils/assert';\nimport { Query } from '../../api/Query';\nimport { Index } from '../snap/indexes/Index';\nimport { EventRegistration } from './EventRegistration';\nimport { Event } from './Event';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nexport class EventGenerator {\n  private index_: Index;\n\n  /**\n   *\n   * @param {!Query} query_\n   */\n  constructor(private query_: Query) {\n    /**\n     * @private\n     * @type {!Index}\n     */\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n\n  /**\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n   *\n   * Notes:\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\n   *    our index.\n   *  - prevName will be calculated based on the index ordering.\n   *\n   * @param {!Array.<!Change>} changes\n   * @param {!Node} eventCache\n   * @param {!Array.<!EventRegistration>} eventRegistrations\n   * @return {!Array.<!Event>}\n   */\n  generateEventsForChanges(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistrations: EventRegistration[]\n  ): Event[] {\n    const events: Event[] = [];\n    const moves: Change[] = [];\n\n    changes.forEach(change => {\n      if (\n        change.type === Change.CHILD_CHANGED &&\n        this.index_.indexedValueChanged(\n          change.oldSnap as Node,\n          change.snapshotNode\n        )\n      ) {\n        moves.push(\n          Change.childMovedChange(\n            change.childName as string,\n            change.snapshotNode\n          )\n        );\n      }\n    });\n\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_REMOVED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_ADDED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_MOVED,\n      moves,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.CHILD_CHANGED,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n    this.generateEventsForType_(\n      events,\n      Change.VALUE,\n      changes,\n      eventRegistrations,\n      eventCache\n    );\n\n    return events;\n  }\n\n  /**\n   * Given changes of a single change type, generate the corresponding events.\n   *\n   * @param {!Array.<!Event>} events\n   * @param {!string} eventType\n   * @param {!Array.<!Change>} changes\n   * @param {!Array.<!EventRegistration>} registrations\n   * @param {!Node} eventCache\n   * @private\n   */\n  private generateEventsForType_(\n    events: Event[],\n    eventType: string,\n    changes: Change[],\n    registrations: EventRegistration[],\n    eventCache: Node\n  ) {\n    const filteredChanges = changes.filter(change => change.type === eventType);\n\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(change => {\n      const materializedChange = this.materializeSingleChange_(\n        change,\n        eventCache\n      );\n      registrations.forEach(registration => {\n        if (registration.respondsTo(change.type)) {\n          events.push(\n            registration.createEvent(materializedChange, this.query_)\n          );\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {!Change} change\n   * @param {!Node} eventCache\n   * @return {!Change}\n   * @private\n   */\n  private materializeSingleChange_(change: Change, eventCache: Node): Change {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n        /** @type {!string} */\n        change.childName,\n        change.snapshotNode,\n        this.index_\n      );\n      return change;\n    }\n  }\n\n  /**\n   * @param {!Change} a\n   * @param {!Change} b\n   * @return {number}\n   * @private\n   */\n  private compareChanges_(a: Change, b: Change) {\n    if (a.childName == null || b.childName == null) {\n      throw assertionError('Should only compare child_ events.');\n    }\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/EventGenerator.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { ViewProcessor } from './ViewProcessor';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { CacheNode } from './CacheNode';\nimport { ViewCache } from './ViewCache';\nimport { EventGenerator } from './EventGenerator';\nimport { assert } from '../../../utils/assert';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Change } from './Change';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Query } from '../../api/Query';\nimport { EventRegistration } from './EventRegistration';\nimport { Node } from '../snap/Node';\nimport { Path } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\nimport { CancelEvent, Event } from './Event';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nexport class View {\n  private processor_: ViewProcessor;\n  private viewCache_: ViewCache;\n  private eventRegistrations_: EventRegistration[] = [];\n  private eventGenerator_: EventGenerator;\n\n  /**\n   *\n   * @param {!Query} query_\n   * @param {!ViewCache} initialViewCache\n   */\n  constructor(private query_: Query, initialViewCache: ViewCache) {\n    const params = this.query_.getQueryParams();\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = params.getNodeFilter();\n\n    /**\n     * @type {ViewProcessor}\n     * @private\n     */\n    this.processor_ = new ViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.getServerCache();\n    const initialEventCache = initialViewCache.getEventCache();\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    /**\n     * @type {!ViewCache}\n     * @private\n     */\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n\n    /**\n     * @type {!EventGenerator}\n     * @private\n     */\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  /**\n   * @return {!Query}\n   */\n  getQuery(): Query {\n    return this.query_;\n  }\n\n  /**\n   * @return {?Node}\n   */\n  getServerCache(): Node | null {\n    return this.viewCache_.getServerCache().getNode();\n  }\n\n  /**\n   * @param {!Path} path\n   * @return {?Node}\n   */\n  getCompleteServerCache(path: Path): Node | null {\n    const cache = this.viewCache_.getCompleteServerSnap();\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (\n        this.query_.getQueryParams().loadsAllData() ||\n        (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())\n      ) {\n        return cache.getChild(path);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return this.eventRegistrations_.length === 0;\n  }\n\n  /**\n   * @param {!EventRegistration} eventRegistration\n   */\n  addEventRegistration(eventRegistration: EventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  }\n\n  /**\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n   */\n  removeEventRegistration(\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): Event[] {\n    const cancelEvents: CancelEvent[] = [];\n    if (cancelError) {\n      assert(\n        eventRegistration == null,\n        'A cancel should cancel all event registrations.'\n      );\n      const path = this.query_.path;\n      this.eventRegistrations_.forEach(function(registration) {\n        cancelError /** @type {!Error} */ = cancelError;\n        const maybeEvent = registration.createCancelEvent(cancelError, path);\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      let remaining = [];\n      for (let i = 0; i < this.eventRegistrations_.length; ++i) {\n        const existing = this.eventRegistrations_[i];\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n    return cancelEvents;\n  }\n\n  /**\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\n   *\n   * @param {!Operation} operation\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} completeServerCache\n   * @return {!Array.<!Event>}\n   */\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    completeServerCache: Node | null\n  ): Event[] {\n    if (\n      operation.type === OperationType.MERGE &&\n      operation.source.queryId !== null\n    ) {\n      assert(\n        this.viewCache_.getCompleteServerSnap(),\n        'We should always have a full cache before handling merges'\n      );\n      assert(\n        this.viewCache_.getCompleteEventSnap(),\n        'Missing event cache, even though we have a server cache'\n      );\n    }\n\n    const oldViewCache = this.viewCache_;\n    const result = this.processor_.applyOperation(\n      oldViewCache,\n      operation,\n      writesCache,\n      completeServerCache\n    );\n    this.processor_.assertIndexed(result.viewCache);\n\n    assert(\n      result.viewCache.getServerCache().isFullyInitialized() ||\n        !oldViewCache.getServerCache().isFullyInitialized(),\n      'Once a server snap is complete, it should never go back'\n    );\n\n    this.viewCache_ = result.viewCache;\n\n    return this.generateEventsForChanges_(\n      result.changes,\n      result.viewCache.getEventCache().getNode(),\n      null\n    );\n  }\n\n  /**\n   * @param {!EventRegistration} registration\n   * @return {!Array.<!Event>}\n   */\n  getInitialEvents(registration: EventRegistration): Event[] {\n    const eventSnap = this.viewCache_.getEventCache();\n    const initialChanges: Change[] = [];\n    if (!eventSnap.getNode().isLeafNode()) {\n      const eventNode = eventSnap.getNode() as ChildrenNode;\n      eventNode.forEachChild(PRIORITY_INDEX, function(key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n    return this.generateEventsForChanges_(\n      initialChanges,\n      eventSnap.getNode(),\n      registration\n    );\n  }\n\n  /**\n   * @private\n   * @param {!Array.<!Change>} changes\n   * @param {!Node} eventCache\n   * @param {EventRegistration=} eventRegistration\n   * @return {!Array.<!Event>}\n   */\n  generateEventsForChanges_(\n    changes: Change[],\n    eventCache: Node,\n    eventRegistration?: EventRegistration\n  ): Event[] {\n    const registrations = eventRegistration\n      ? [eventRegistration]\n      : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(\n      changes,\n      eventCache,\n      registrations\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/view/View.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CacheNode } from './view/CacheNode';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { assert } from '../../utils/assert';\nimport { isEmpty, forEach, findValue, safeGet } from '../../utils/obj';\nimport { ViewCache } from './view/ViewCache';\nimport { View } from './view/View';\nimport { Operation } from './operation/Operation';\nimport { WriteTreeRef } from './WriteTree';\nimport { Query } from '../api/Query';\nimport { EventRegistration } from './view/EventRegistration';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { Event } from './view/Event';\nimport { Reference, ReferenceConstructor } from '../api/Reference';\n\nlet __referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  static set __referenceConstructor(val: ReferenceConstructor) {\n    assert(\n      !__referenceConstructor,\n      '__referenceConstructor has already been defined'\n    );\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   *\n   * @type {!Object.<!string, !View>}\n   * @private\n   */\n  private views_: { [k: string]: View } = {};\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty(): boolean {\n    return isEmpty(this.views_);\n  }\n\n  /**\n   *\n   * @param {!Operation} operation\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} optCompleteServerCache\n   * @return {!Array.<!Event>}\n   */\n  applyOperation(\n    operation: Operation,\n    writesCache: WriteTreeRef,\n    optCompleteServerCache: Node | null\n  ): Event[] {\n    const queryId = operation.source.queryId;\n    if (queryId !== null) {\n      const view = safeGet(this.views_, queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(\n        operation,\n        writesCache,\n        optCompleteServerCache\n      );\n    } else {\n      let events: Event[] = [];\n\n      forEach(this.views_, function(key: string, view: View) {\n        events = events.concat(\n          view.applyOperation(operation, writesCache, optCompleteServerCache)\n        );\n      });\n\n      return events;\n    }\n  }\n\n  /**\n   * Add an event callback for the specified query.\n   *\n   * @param {!Query} query\n   * @param {!EventRegistration} eventRegistration\n   * @param {!WriteTreeRef} writesCache\n   * @param {?Node} serverCache Complete server cache, if we have it.\n   * @param {boolean} serverCacheComplete\n   * @return {!Array.<!Event>} Events to raise.\n   */\n  addEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration,\n    writesCache: WriteTreeRef,\n    serverCache: Node | null,\n    serverCacheComplete: boolean\n  ): Event[] {\n    const queryId = query.queryIdentifier();\n    let view = safeGet(this.views_, queryId);\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      let eventCache = writesCache.calcCompleteEventCache(\n        serverCacheComplete ? serverCache : null\n      );\n      let eventCacheComplete = false;\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n      const viewCache = new ViewCache(\n        new CacheNode /** @type {!Node} */(\n          eventCache,\n          eventCacheComplete,\n          false\n        ),\n        new CacheNode /** @type {!Node} */(\n          serverCache,\n          serverCacheComplete,\n          false\n        )\n      );\n      view = new View(query, viewCache);\n      this.views_[queryId] = view;\n    }\n\n    // This is guaranteed to exist now, we just created anything that was missing\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  }\n\n  /**\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n   *\n   * If query is the default query, we'll check all views for the specified eventRegistration.\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n   *\n   * @param {!Query} query\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n   */\n  removeEventRegistration(\n    query: Query,\n    eventRegistration: EventRegistration | null,\n    cancelError?: Error\n  ): { removed: Query[]; events: Event[] } {\n    const queryId = query.queryIdentifier();\n    const removed: Query[] = [];\n    let cancelEvents: Event[] = [];\n    const hadCompleteView = this.hasCompleteView();\n    if (queryId === 'default') {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      const self = this;\n      forEach(this.views_, function(viewQueryId: string, view: View) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          delete self.views_[viewQueryId];\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      });\n    } else {\n      // remove the callback from the specific view.\n      const view = safeGet(this.views_, queryId);\n      if (view) {\n        cancelEvents = cancelEvents.concat(\n          view.removeEventRegistration(eventRegistration, cancelError)\n        );\n        if (view.isEmpty()) {\n          delete this.views_[queryId];\n\n          // We'll deal with complete views later.\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(\n        new SyncPoint.__referenceConstructor(query.repo, query.path)\n      );\n    }\n\n    return { removed: removed, events: cancelEvents };\n  }\n\n  /**\n   * @return {!Array.<!View>}\n   */\n  getQueryViews(): View[] {\n    const values = Object.keys(this.views_).map(key => this.views_[key]);\n    return values.filter(function(view) {\n      return !view.getQuery().getQueryParams().loadsAllData();\n    });\n  }\n\n  /**\n   *\n   * @param {!Path} path The path to the desired complete snapshot\n   * @return {?Node} A complete cache, if it exists\n   */\n  getCompleteServerCache(path: Path): Node | null {\n    let serverCache: Node | null = null;\n    forEach(this.views_, (key: string, view: View) => {\n      serverCache = serverCache || view.getCompleteServerCache(path);\n    });\n    return serverCache;\n  }\n\n  /**\n   * @param {!Query} query\n   * @return {?View}\n   */\n  viewForQuery(query: Query): View | null {\n    const params = query.getQueryParams();\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      const queryId = query.queryIdentifier();\n      return safeGet(this.views_, queryId);\n    }\n  }\n\n  /**\n   * @param {!Query} query\n   * @return {boolean}\n   */\n  viewExistsForQuery(query: Query): boolean {\n    return this.viewForQuery(query) != null;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasCompleteView(): boolean {\n    return this.getCompleteView() != null;\n  }\n\n  /**\n   * @return {?View}\n   */\n  getCompleteView(): View | null {\n    const completeView = findValue(this.views_, (view: View) =>\n      view.getQuery().getQueryParams().loadsAllData()\n    );\n    return completeView || null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/SyncPoint.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: any[]): void;\n      context: any;\n    }>;\n  } = {};\n\n  /**\n   * @param {!Array.<string>} allowedEvents_\n   */\n  constructor(private allowedEvents_: Array<string>) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @param {!string} eventType\n   * @return {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): any[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   * @param {!string} eventType\n   * @param {...*} var_args\n   */\n  protected trigger(eventType: string, ...var_args: any[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, var_args);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: any) => void, context: any) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: any) => void, context: any) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(function(et) {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/EventEmitter.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from './EventEmitter';\nimport { assert } from '../../../utils/assert';\n\ndeclare const document: any;\n\n/**\n * @extends {EventEmitter}\n */\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * @param {!string} eventType\n   * @return {Array.<boolean>}\n   */\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/VisibilityMonitor.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '../../../utils/assert';\nimport { EventEmitter } from './EventEmitter';\nimport { isMobileCordova } from '../../../utils/environment';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * @param {!string} eventType\n   * @return {Array.<boolean>}\n   */\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  /**\n   * @return {boolean}\n   */\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/util/OnlineMonitor.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from '../database/core/util/util';\nimport { jsonEval } from './json';\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nexport const decode = function(token) {\n  var header = {},\n    claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    var parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '');\n    claims = jsonEval(base64Decode(parts[1]) || '');\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header: header,\n    claims: claims,\n    data: data,\n    signature: signature\n  };\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexport const isValidTimestamp = function(token) {\n  var claims = decode(token).claims,\n    now = Math.floor(new Date().getTime() / 1000),\n    validSince,\n    validUntil;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'];\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'];\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'];\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    now && validSince && validUntil && now >= validSince && now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nexport const issuedAtTime = function(token) {\n  var claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'];\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexport const isValidFormat = function(token) {\n  var decoded = decode(token),\n    claims = decoded.claims;\n\n  return (\n    !!decoded.signature &&\n    !!claims &&\n    typeof claims === 'object' &&\n    claims.hasOwnProperty('iat')\n  );\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexport const isAdmin = function(token) {\n  var claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/jwt.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '../../app';\nimport { forEach, contains, isEmpty, getCount, safeGet } from '../../utils/obj';\nimport { stringify } from '../../utils/json';\nimport { assert } from '../../utils/assert';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { Path } from './util/Path';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { isAdmin, isValidFormat } from '../../utils/jwt';\nimport { Connection } from '../realtime/Connection';\nimport { CONSTANTS } from '../../utils/constants';\nimport {\n  isMobileCordova,\n  isReactNative,\n  isNodeSdk\n} from '../../utils/environment';\nimport { ServerActions } from './ServerActions';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { Query } from '../api/Query';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_AUTH_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: any): void;\n\n  hashFn(): string;\n\n  query: Query;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: any;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: Object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  /** @private {Object} */\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private listens_: { [path: string]: { [queryId: string]: ListenSpec } } = {};\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingPutCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: Object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  /** @private {number|null} */\n  private establishConnectionTimer_: number | null = null;\n\n  /** @private {boolean} */\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: any) => void } = {};\n  private requestNumber_ = 0;\n\n  /** @private {?{\n   *   sendRequest(Object),\n   *   close()\n   * }} */\n  private realtime_: {\n    sendRequest(a: Object): void;\n    close(): void;\n  } | null = null;\n\n  /** @private {string|null} */\n  private authToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  /**\n   * @private\n   */\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   * @type {number}\n   * @private\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @implements {ServerActions}\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n   * @param onConnectStatus_\n   * @param onServerInfoUpdate_\n   * @param authTokenProvider_\n   * @param authOverride_\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: any,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: any) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private authOverride_?: Object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n    this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  /**\n   * @param {!string} action\n   * @param {*} body\n   * @param {function(*)=} onResponse\n   * @protected\n   */\n  protected sendRequest(\n    action: string,\n    body: any,\n    onResponse?: (a: any) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: any) => void\n  ) {\n    const queryId = query.queryIdentifier();\n    const pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    this.listens_[pathString] = this.listens_[pathString] || {};\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens_[pathString][queryId],\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens_[pathString][queryId] = listenSpec;\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  /**\n   * @param {!{onComplete(),\n   *           hashFn():!string,\n   *           query: !Query,\n   *           tag: ?number}} listenSpec\n   * @private\n   */\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: any } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: any }) => {\n      const payload: any = message[/*data*/ 'd'];\n      const status: string = message[/*status*/ 's'];\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens_[pathString] && this.listens_[pathString][queryId];\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {*} payload\n   * @param {!Query} query\n   * @private\n   */\n  private static warnOnListenWarnings_(payload: any, query: Query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      const warnings = safeGet(payload, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        const indexPath = query.path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  /**\n   * @param {!string} credential\n   * @private\n   */\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: any } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(authMethod, requestData, (res: { [k: string]: any }) => {\n        const status: string = res[/*status*/ 's'];\n        const data: string = res[/*data*/ 'd'] || 'error';\n\n        if (this.authToken_ === token) {\n          if (status === 'ok') {\n            this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: Query, tag: number | null) {\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: Object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: any } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: any,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: any }) => {\n      if (onComplete) {\n        setTimeout(function() {\n          onComplete(response[/*status*/ 's'], response[/* data */ 'd']);\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  put(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  merge(\n    pathString: string,\n    data: any,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: any,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    const request: { [k: string]: any } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) request[/*hash*/ 'h'] = hash;\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: any }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete)\n        onComplete(message[/*status*/ 's'], message[/* data */ 'd']);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  reportStats(stats: { [k: string]: any }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {*} message\n   * @private\n   */\n  private onDataMessage_(message: { [k: string]: any }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'];\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: any }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd')\n      this.onDataUpdate_(\n        body[/*path*/ 'p'],\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t']\n      );\n    else if (action === 'm')\n      this.onDataUpdate_(\n        body[/*path*/ 'p'],\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t']\n      );\n    else if (action === 'c')\n      this.onListenRevoked_(body[/*path*/ 'p'], body[/*query*/ 'q']);\n    else if (action === 'ac')\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'],\n        body[/* explanation */ 'd']\n      );\n    else if (action === 'sd') this.onSecurityDebugPacket_(body);\n    else\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n    }, Math.floor(timeout)) as any;\n  }\n\n  /**\n   * @param {boolean} visible\n   * @private\n   */\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const self = this;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function() {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function(msg: Object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      // First fetch auth token, and establish connection after fetching the token was successful\n      this.authTokenProvider_\n        .getToken(forceRefresh)\n        .then(function(result) {\n          if (!canceled) {\n            log('getToken() completed. Creating connection.');\n            self.authToken_ = result && result.accessToken;\n            connection = new Connection(\n              connId,\n              self.repoInfo_,\n              onDataMessage,\n              onReady,\n              onDisconnect,\n              /* onKill= */ function(reason) {\n                warn(reason + ' (' + self.repoInfo_.toString() + ')');\n                self.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              },\n              lastSessionId\n            );\n          } else {\n            log('getToken() completed but was canceled');\n          }\n        })\n        .then(null, function(error) {\n          self.log_('Failed to get token: ' + error);\n          if (!canceled) {\n            if (CONSTANTS.NODE_ADMIN) {\n              // This may be a critical error for the Admin Node.js SDK, so log a warning.\n              // But getToken() may also just have temporarily failed, so we still want to\n              // continue retrying.\n              warn(error);\n            }\n            closeFn();\n          }\n        });\n    }\n  }\n\n  /**\n   * @param {string} reason\n   */\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  /**\n   * @param {string} reason\n   */\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) put.onComplete('disconnect');\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];\n  }\n\n  /**\n   * @param {!string} pathString\n   * @param {Array.<*>=} query\n   * @private\n   */\n  private onListenRevoked_(pathString: string, query?: any[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) listen.onComplete('permission_denied');\n  }\n\n  /**\n   * @param {!string} pathString\n   * @param {!string} queryId\n   * @return {{queries:Array.<Query>, onComplete:function(string)}}\n   * @private\n   */\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens_[normalizedPathString] !== undefined) {\n      listen = this.listens_[normalizedPathString][queryId];\n      delete this.listens_[normalizedPathString][queryId];\n      if (getCount(this.listens_[normalizedPathString]) === 0) {\n        delete this.listens_[normalizedPathString];\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: any }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body && typeof console !== 'undefined') {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    forEach(this.listens_, (pathString: string, queries: Object) => {\n      forEach(queries, (key: string, listenSpec: ListenSpec) => {\n        this.sendListen_(listenSpec);\n      });\n    });\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) this.sendPut_(i);\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   * @private\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (CONSTANTS.NODE_ADMIN) {\n      clientName = 'admin_node';\n    } else if (CONSTANTS.NODE_CLIENT) {\n      clientName = 'node';\n    }\n\n    stats[\n      'sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')\n    ] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/PersistentConnection.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { WebSocketConnection } from './WebSocketConnection';\nimport { warn, each } from '../core/util/util';\nimport { TransportConstructor } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  /**\n   * @const\n   * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n   */\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  /**\n   * @param {!RepoInfo} repoInfo\n   * @private\n   */\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable)\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      each(\n        TransportManager.ALL_TRANSPORTS,\n        (i: number, transport: TransportConstructor) => {\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n   * initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n   * transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/TransportManager.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { PROTOCOL_VERSION } from './Constants';\nimport { TransportManager } from './TransportManager';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Transport, TransportConstructor } from './Transport';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: any[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: any[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param {!string} id - an id for this connection\n   * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n   * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private onMessage_: (a: Object) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   * @private\n   */\n  private start_() {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      undefined,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeout_ms = conn['healthyTimeout'] || 0;\n    if (healthyTimeout_ms > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n      }, Math.floor(healthyTimeout_ms)) as any;\n    }\n  }\n\n  /**\n   * @return {!string}\n   * @private\n   */\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: object) => {\n      if (this.state_ != RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   *\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: any }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: object) {\n    const layer: string = requireKey('t', parsedData);\n    const data: any = requireKey('d', parsedData);\n    if (layer == 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer == 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: any }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData);\n    const data: any = requireKey('d', parsedData);\n    if (layer == 'c') {\n      this.onControl_(data);\n    } else if (layer == 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: any) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: any }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData);\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {Object} handshake The handshake data returned from the server\n   * @private\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }) {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host);\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ == RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host);\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   *\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   * @private\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  /**\n   *\n   * @param {string} reason\n   * @private\n   */\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   *\n   * @private\n   */\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/Connection.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nexport class PacketReceiver {\n  pendingResponses: any[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: Object) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   * @param {number} requestNum\n   * @param {Array} data\n   */\n  handleResponse(requestNum: number, data: any[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[this.currentResponseNum];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/polling/PacketReceiver.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  base64Encode,\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\nimport { CountedSet } from '../core/util/CountedSet';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport {\n  FORGE_DOMAIN,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { stringify } from '../../utils/json';\nimport { isNodeSdk } from '../../utils/environment';\nimport { Transport } from './Transport';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: any[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param {string} connId An identifier for this connection, used for logging\n   * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n   * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\n   *                                         transport session\n   * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n   *                                     connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) =>\n      repoInfo.connectionURL(LONG_POLLING, params);\n  }\n\n  /**\n   *\n   * @param {function(Object)} onMessage Callback when messages arrive\n   * @param {function()} onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: Object) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) return;\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) return; // we closed the connection.\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command == FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1;\n            this.password = arg2;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN, data);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier)\n        urlParams[\n          FIREBASE_LONGPOLL_CALLBACK_ID_PARAM\n        ] = this.scriptTagHolder.uniqueCallbackIdentifier;\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (\n        !isNodeSdk() &&\n        typeof location !== 'undefined' &&\n        location.href &&\n        location.href.indexOf(FORGE_DOMAIN) !== -1\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n    // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n    return (\n      BrowserPollConnection.forceAllow_ ||\n      (!BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp() &&\n        !isNodeSdk())\n    );\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   * @private\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   * @private\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param {!Object} data The JSON data to transmit.\n   */\n  send(data: Object) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   * @param {!string} id\n   * @param {!string} pw\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) return;\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   * @param {*} args\n   * @private\n   */\n  private incrementIncomingBytes_(args: any) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  /**\n   * @type {CountedSet.<number, number>}\n   */\n  outstandingRequests = new CountedSet<number, number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: { seg: number; ts: number; d: any }[] = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: any[]) => void;\n  onMessageCB: (...args: any[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: any[]) => void,\n    onMessageCB: (...args: any[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      (window as any)[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      (window as any)[\n        FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier\n      ] = onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   * @private\n   * @return {Element}\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      (iframe as any).doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      (iframe as any).doc = iframe.contentWindow.document; // Internet Explorer\n    } else if ((iframe as any).document) {\n      (iframe as any).doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    if (isNodeSdk() && this.myID) {\n      const urlParams: { [k: string]: string } = {};\n      urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      const theURL = this.urlFn(urlParams);\n      (FirebaseIFrameScriptHolder as any).nodeRestRequest(theURL);\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param {!string} id - The ID of this connection\n   * @param {!string} pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: any) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param {!string} url - The URL of the script tag.\n   * @param {!number} serial - The serial number of the request.\n   * @private\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial, 1);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.remove(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param {!string} url - The URL for the script tag source.\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) return;\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          newScript.onload = (newScript as any).onreadystatechange = function() {\n            const rstate = (newScript as any).readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              newScript.onload = (newScript as any).onreadystatechange = null;\n              if (newScript.parentNode) {\n                newScript.parentNode.removeChild(newScript);\n              }\n              loadCB();\n            }\n          };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/BrowserPollConnection.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\n\ndeclare const MozWebSocket: any;\n\nimport firebase from '../../app';\nimport { assert } from '../../utils/assert';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { StatsManager } from '../core/stats/StatsManager';\nimport {\n  FORGE_DOMAIN,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { CONSTANTS as ENV_CONSTANTS } from '../../utils/constants';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { jsonEval, stringify } from '../../utils/json';\nimport { isNodeSdk } from '../../utils/environment';\nimport { Transport } from './Transport';\nimport { StatsCollection } from '../core/stats/StatsCollection';\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: Object) => void;\n  mySock: any | null;\n  private log_: (...a: any[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n\n  /**\n   * @param {string} connId identifier for this transport\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId\n    );\n  }\n\n  /**\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n   * @return {string} connection url\n   * @private\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.href &&\n      location.href.indexOf(FORGE_DOMAIN) !== -1\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  }\n\n  /**\n   *\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: Object) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = ENV_CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${firebase.SDK_VERSION}/${process.platform}/${device}`\n          }\n        };\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') == 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        this.mySock = new WebSocketImpl(this.connURL);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = (m: object) => {\n      this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = (e: any) => {\n      this.log_('WebSocket error.  Closing connection.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: Boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   * @type {number}\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   * @type {number}\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   * @return {boolean}\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length == this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess);\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param {number} frameCount The number of frames we are expecting from the server\n   * @private\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @param {!String} data\n   * @return {?String} Any remaining data to be process, or null if there is none\n   * @private\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: any }) {\n    if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param {Object} data The JSON object to transmit\n   */\n  send(data: Object) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param {string} str String to send.\n   * @private\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/realtime/WebSocketConnection.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../api/Query';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  /**\n   * @param {!Query} query\n   * @param {function():string} currentHashFn\n   * @param {?number} tag\n   * @param {function(string, *)} onComplete\n   */\n  abstract listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: any) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   *\n   * @param {!Query} query\n   * @param {?number} tag\n   */\n  abstract unlisten(query: Query, tag: number | null): void;\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   * @param {string=} hash\n   */\n  put(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, ?string)} onComplete\n   * @param {string=} hash\n   */\n  merge(\n    pathString: string,\n    data: any,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param {string} token The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {*} data\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: any,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {string} pathString\n   * @param {function(string, string)=} onComplete\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  /**\n   * @param {Object.<string, *>} stats\n   */\n  reportStats(stats: { [k: string]: any }) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/core/ServerActions.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from './app';\nimport { FirebaseApp, FirebaseNamespace } from './app/firebase_app';\nimport { Database } from './database/api/Database';\nimport { Query } from './database/api/Query';\nimport { Reference } from './database/api/Reference';\nimport { enableLogging } from './database/core/util/util';\nimport { RepoManager } from './database/core/RepoManager';\nimport * as INTERNAL from './database/api/internal';\nimport * as TEST_ACCESS from './database/api/test_access';\nimport { isNodeSdk } from './utils/environment';\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // Register the Database Service with the 'firebase' namespace.\n  const namespace = instance.INTERNAL.registerService(\n    'database',\n    (app, unused, url) => RepoManager.getInstance().databaseFromApp(app, url),\n    // firebase.database namespace properties\n    {\n      Reference,\n      Query,\n      Database,\n      enableLogging,\n      INTERNAL,\n      ServerValue: Database.ServerValue,\n      TEST_ACCESS\n    },\n    null,\n    true\n  );\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\n/**\n * Extensions to the FirebaseApp and FirebaseNamespaces interfaces\n */\ndeclare module './app/firebase_app' {\n  interface FirebaseApp {\n    database?(): Database;\n  }\n}\n\ndeclare module './app/firebase_app' {\n  interface FirebaseNamespace {\n    database?: {\n      (app?: FirebaseApp): Database;\n      Database;\n      enableLogging;\n      INTERNAL;\n      Query;\n      Reference;\n      ServerValue;\n    };\n  }\n}\n\nregisterDatabase(firebase);\n\n\n\n// WEBPACK FOOTER //\n// ./src/database.ts","module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = 63\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\n\nexport const forceLongPolling = function() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function() {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function(): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function(\n  ref: Reference,\n  callback: (a: Object) => void\n) {\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function(ref: Reference, showDelta?: boolean) {\n  ref.repo.stats(showDelta);\n};\n\nexport const statsIncrementCounter = function(ref: Reference, metric: string) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nexport const dataUpdateCount = function(ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function(\n  ref: Reference,\n  callback: ((a: string, b: any) => void) | null\n) {\n  return ref.repo.interceptServerData_(callback);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/internal.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoManager } from '../core/RepoManager';\nimport { Connection } from '../realtime/Connection';\nimport { Query } from './Query';\n\nexport const DataConnection = PersistentConnection;\n\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\n(PersistentConnection.prototype as any).simpleListen = function(\n  pathString: string,\n  onComplete: (a: any) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\n(PersistentConnection.prototype as any).echo = function(\n  data: any,\n  onEcho: (a: any) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nexport const hijackHash = function(newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function(\n    pathString,\n    data,\n    opt_onComplete,\n    opt_hash\n  ) {\n    if (opt_hash !== undefined) {\n      opt_hash = newHash();\n    }\n    oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n  };\n  return function() {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * @param {!Query} query\n * @return {!string}\n */\nexport const queryIdentifier = function(query: Query) {\n  return query.queryIdentifier();\n};\n\n/**\n * @param {!Query} firebaseRef\n * @return {!Object}\n */\nexport const listens = function(firebaseRef: Query) {\n  return (firebaseRef.repo.persistentConnection_ as any).listens_;\n};\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nexport const forceRestClient = function(forceRestClient: boolean) {\n  RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/api/test_access.ts","try {\n          webpackJsonpFirebase([3],{\n\n/***/ 61:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./src/app/errors.ts\nvar errors = __webpack_require__(24);\n\n// CONCATENATED MODULE: ./src/messaging/models/errors.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar CODES = {\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\n    AVAILABLE_IN_SW: 'only-available-in-sw',\n    SHOULD_BE_INHERITED: 'should-be-overriden',\n    BAD_SENDER_ID: 'bad-sender-id',\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\n    PERMISSION_DEFAULT: 'permission-default',\n    PERMISSION_BLOCKED: 'permission-blocked',\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\n    NO_SW_IN_REG: 'no-sw-in-reg',\n    BAD_SCOPE: 'bad-scope',\n    BAD_VAPID_KEY: 'bad-vapid-key',\n    BAD_SUBSCRIPTION: 'bad-subscription',\n    BAD_TOKEN: 'bad-token',\n    BAD_PUSH_SET: 'bad-push-set',\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key'\n};\nvar ERROR_MAP = (_a = {}, _a[CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" + 'correctly in the options passed into firebase.initializeApp().', _a[CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" + 'required to use the firebase SDK.', _a[CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' + 'default service worker. {$browserErrorMessage}', _a[CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' + 'any existing Push Subscriptions.', _a[CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[CODES.USE_SW_BEFORE_GET_TOKEN] = 'You must call useServiceWorker() before ' + 'calling getToken() to ensure your service worker is used.', _a[CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' + 'deleteToken(), i.e. the token from getToken().', _a[CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' + 'be performed as the token was not found.', _a[CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' + 'scope could not be performed as the scope was not found.', _a[CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' + 'the FCM token for push messaging. Will have to resubscribe the ' + 'user on next visit. {$message}', _a[CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' + 'and as a result, unable to resubscribe. Will have to resubscribe the ' + 'user on next visit.', _a[CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' + 'successful, there was a problem accessing the service worker itself.', _a[CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" + \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\", _a[CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' + 'least one character.', _a[CODES.BAD_VAPID_KEY] = 'The public VAPID key must be a string with at ' + 'least one character.', _a[CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' + 'a valid token string.', _a[CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' + 'not a valid push set string.', _a[CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a);\n/* harmony default export */ var models_errors = ({\n    codes: CODES,\n    map: ERROR_MAP\n});\nvar _a;\n// CONCATENATED MODULE: ./src/messaging/helpers/array-buffer-to-base64.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction toBase64(arrayBuffer) {\n    var uint8Version = new Uint8Array(arrayBuffer);\n    return window.btoa(String.fromCharCode.apply(null, uint8Version));\n}\n/* harmony default export */ var array_buffer_to_base64 = (function (arrayBuffer) {\n    var base64String = toBase64(arrayBuffer);\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n});;\n// CONCATENATED MODULE: ./src/messaging/models/fcm-details.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FCM_APPLICATION_SERVER_KEY = [0x04, 0x33, 0x94, 0xf7, 0xdf, 0xa1, 0xeb, 0xb1, 0xdc, 0x03, 0xa2, 0x5e, 0x15, 0x71, 0xdb, 0x48, 0xd3, 0x2e, 0xed, 0xed, 0xb2, 0x34, 0xdb, 0xb7, 0x47, 0x3a, 0x0c, 0x8f, 0xc4, 0xcc, 0xe1, 0x6f, 0x3c, 0x8c, 0x84, 0xdf, 0xab, 0xb6, 0x66, 0x3e, 0xf2, 0x0c, 0xd4, 0x8b, 0xfe, 0xe3, 0xf9, 0x76, 0x2f, 0x14, 0x1c, 0x63, 0x08, 0x6a, 0x6f, 0x2d, 0xb1, 0x1a, 0x95, 0xb0, 0xce, 0x37, 0xc0, 0x9c, 0x6e];\nvar SUBSCRIPTION_DETAILS = {\n    userVisibleOnly: true,\n    applicationServerKey: new Uint8Array(FCM_APPLICATION_SERVER_KEY)\n};\n/* harmony default export */ var fcm_details = ({\n    ENDPOINT: 'https://fcm.googleapis.com',\n    APPLICATION_SERVER_KEY: FCM_APPLICATION_SERVER_KEY,\n    SUBSCRIPTION_OPTIONS: SUBSCRIPTION_DETAILS\n});\n// CONCATENATED MODULE: ./src/messaging/models/token-manager.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\nvar FCM_TOKEN_DETAILS_DB = 'fcm_token_details_db';\nvar FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';\nvar FCM_TOKEN_DETAILS_DB_VERSION = 1;\nvar token_manager_TokenManager = /** @class */function () {\n    function TokenManager() {\n        this.errorFactory_ = new errors[\"a\" /* ErrorFactory */]('messaging', 'Messaging', models_errors.map);\n        this.openDbPromise_ = null;\n    }\n    /**\r\n     * Get the indexedDB as a promsie.\r\n     * @private\r\n     * @return {Promise<IDBDatabase>} The IndexedDB database\r\n     */\n    TokenManager.prototype.openDatabase_ = function () {\n        if (this.openDbPromise_) {\n            return this.openDbPromise_;\n        }\n        this.openDbPromise_ = new Promise(function (resolve, reject) {\n            var request = indexedDB.open(FCM_TOKEN_DETAILS_DB, FCM_TOKEN_DETAILS_DB_VERSION);\n            request.onerror = function (event) {\n                reject(event.target.error);\n            };\n            request.onsuccess = function (event) {\n                resolve(event.target.result);\n            };\n            request.onupgradeneeded = function (event) {\n                var db = event.target.result;\n                var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {\n                    keyPath: 'swScope'\n                });\n                // Make sure the sender ID can be searched\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n                    unique: false\n                });\n                objectStore.createIndex('fcmToken', 'fcmToken', {\n                    unique: true\n                });\n            };\n        });\n        return this.openDbPromise_;\n    };\n    /**\r\n     * Close the currently open database.\r\n     * @return {Promise<?>} Returns the result of the promise chain.\r\n     */\n    TokenManager.prototype.closeDatabase = function () {\n        var _this = this;\n        if (this.openDbPromise_) {\n            return this.openDbPromise_.then(function (db) {\n                db.close();\n                _this.openDbPromise_ = null;\n            });\n        }\n        return Promise.resolve();\n    };\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     * @public\r\n     * @param {string} fcmToken\r\n     * @return {Promise<Object>} The details associated with that token.\r\n     */\n    TokenManager.prototype.getTokenDetailsFromToken = function (fcmToken) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var index = objectStore.index('fcmToken');\n                var request = index.get(fcmToken);\n                request.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                request.onsuccess = function (event) {\n                    resolve(event.target.result);\n                };\n            });\n        });\n    };\n    TokenManager.prototype.getTokenDetailsFromSWScope_ = function (swScope) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var scopeRequest = objectStore.get(swScope);\n                scopeRequest.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                scopeRequest.onsuccess = function (event) {\n                    resolve(event.target.result);\n                };\n            });\n        });\n    };\n    TokenManager.prototype.getAllTokenDetailsForSenderId_ = function (senderId) {\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var senderIdTokens = [];\n                var cursorRequest = objectStore.openCursor();\n                cursorRequest.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                cursorRequest.onsuccess = function (event) {\n                    var cursor = event.target.result;\n                    if (cursor) {\n                        if (cursor.value['fcmSenderId'] === senderId) {\n                            senderIdTokens.push(cursor.value);\n                        }\n                        cursor.continue();\n                    } else {\n                        resolve(senderIdTokens);\n                    }\n                };\n            });\n        });\n    };\n    /**\r\n     * Given a PushSubscription and messagingSenderId, get an FCM token.\r\n     * @public\r\n     * @param  {string} senderId The 'messagingSenderId' to tie the token to.\r\n     * @param  {PushSubscription} subscription The PushSusbcription to \"federate\".\r\n     * @param  {string=} pushSet If defined this will swap the subscription for\r\n     * matching FCM token.\r\n     * @return {Promise<!Object>} Returns the FCM token to be used in place\r\n     * of the PushSubscription.\r\n     */\n    TokenManager.prototype.subscribeToFCM = function (senderId, subscription, pushSet) {\n        var _this = this;\n        var p256dh = array_buffer_to_base64(subscription['getKey']('p256dh'));\n        var auth = array_buffer_to_base64(subscription['getKey']('auth'));\n        var fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" + (\"endpoint=\" + subscription.endpoint + \"&\") + (\"encryption_key=\" + p256dh + \"&\") + (\"encryption_auth=\" + auth);\n        if (pushSet) {\n            fcmSubscribeBody += \"&pushSet=\" + pushSet;\n        }\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        var subscribeOptions = {\n            method: 'POST',\n            headers: headers,\n            body: fcmSubscribeBody\n        };\n        return fetch(fcm_details.ENDPOINT + '/fcm/connect/subscribe', subscribeOptions).then(function (response) {\n            return response.json();\n        }).then(function (response) {\n            var fcmTokenResponse = response;\n            if (fcmTokenResponse['error']) {\n                var message = fcmTokenResponse['error']['message'];\n                throw _this.errorFactory_.create(models_errors.codes.TOKEN_SUBSCRIBE_FAILED, {\n                    message: message\n                });\n            }\n            if (!fcmTokenResponse['token']) {\n                throw _this.errorFactory_.create(models_errors.codes.TOKEN_SUBSCRIBE_NO_TOKEN);\n            }\n            if (!fcmTokenResponse['pushSet']) {\n                throw _this.errorFactory_.create(models_errors.codes.TOKEN_SUBSCRIBE_NO_PUSH_SET);\n            }\n            return {\n                token: fcmTokenResponse['token'],\n                pushSet: fcmTokenResponse['pushSet']\n            };\n        });\n    };\n    /**\r\n     * Checks the that fields in the PushSubscription are equivalent to the\r\n     * details stores in the masterTokenDetails.\r\n     * @private\r\n     * @param  {PushSubscription} subscription The push subscription we expect\r\n     * the master token to match.\r\n     * @param  {Object}  masterTokenDetails The saved details we wish to compare\r\n     * with the PushSubscription\r\n     * @return {boolean} true if the subscription and token details are\r\n     * equivalent.\r\n     */\n    TokenManager.prototype.isSameSubscription_ = function (subscription, masterTokenDetails) {\n        // getKey() isn't defined in the PushSubscription externs file, hence\n        // subscription['getKey']('<key name>').\n        return subscription.endpoint === masterTokenDetails['endpoint'] && array_buffer_to_base64(subscription['getKey']('auth')) === masterTokenDetails['auth'] && array_buffer_to_base64(subscription['getKey']('p256dh')) === masterTokenDetails['p256dh'];\n    };\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @private\r\n     * @param  {string} senderId The 'messagingSenderId' used for this project\r\n     * @param  {ServiceWorkerRegistration} swRegistration The service worker\r\n     * used to subscribe the user for web push\r\n     * @param  {PushSubscription} subscription The push subscription passed to\r\n     * FCM for the current token.\r\n     * @param  {string} fcmToken The FCM token currently used on this\r\n     * device.\r\n     * @param  {string} fcmPushSet The FCM push tied to the fcm token.\r\n     * @return {Promise<void>}\r\n     */\n    TokenManager.prototype.saveTokenDetails_ = function (senderId, swRegistration, subscription, fcmToken, fcmPushSet) {\n        var details = {\n            swScope: swRegistration.scope,\n            endpoint: subscription.endpoint,\n            auth: array_buffer_to_base64(subscription['getKey']('auth')),\n            p256dh: array_buffer_to_base64(subscription['getKey']('p256dh')),\n            fcmToken: fcmToken,\n            fcmPushSet: fcmPushSet,\n            fcmSenderId: senderId\n        };\n        return this.openDatabase_().then(function (db) {\n            return new Promise(function (resolve, reject) {\n                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');\n                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                var request = objectStore.put(details);\n                request.onerror = function (event) {\n                    reject(event.target.error);\n                };\n                request.onsuccess = function (event) {\n                    resolve();\n                };\n            });\n        });\n    };\n    /**\r\n     * Returns the saved FCM Token if one is available and still valid,\r\n     * otherwise `null` is returned.\r\n     * @param {string} senderId This should be the sender ID associated with the\r\n     * FCM Token being retrieved.\r\n     * @param {ServiceWorkerRegistration} swRegistration Registration to be used\r\n     * to subscribe the user to push.\r\n     * @return {Promise<string> | Promise} Returns the saved FCM Token if\r\n     * avilable and valid.\r\n     * @export\r\n     */\n    TokenManager.prototype.getSavedToken = function (senderId, swRegistration) {\n        var _this = this;\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.SW_REGISTRATION_EXPECTED));\n        }\n        if (typeof senderId !== 'string' || senderId.length === 0) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.BAD_SENDER_ID));\n        }\n        return this.getAllTokenDetailsForSenderId_(senderId).then(function (allTokenDetails) {\n            if (allTokenDetails.length === 0) {\n                return;\n            }\n            var index = allTokenDetails.findIndex(function (tokenDetails) {\n                return swRegistration.scope === tokenDetails['swScope'] && senderId === tokenDetails['fcmSenderId'];\n            });\n            if (index === -1) {\n                return;\n            }\n            return allTokenDetails[index];\n        }).then(function (tokenDetails) {\n            if (!tokenDetails) {\n                return;\n            }\n            return swRegistration.pushManager.getSubscription().catch(function (err) {\n                throw _this.errorFactory_.create(models_errors.codes.GET_SUBSCRIPTION_FAILED);\n            }).then(function (subscription) {\n                if (subscription && _this.isSameSubscription_(subscription, tokenDetails)) {\n                    return tokenDetails['fcmToken'];\n                }\n            });\n        });\n    };\n    /**\r\n     * Creates a new FCM token.\r\n     */\n    TokenManager.prototype.createToken = function (senderId, swRegistration) {\n        var _this = this;\n        if (typeof senderId !== 'string' || senderId.length === 0) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.BAD_SENDER_ID));\n        }\n        if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.SW_REGISTRATION_EXPECTED));\n        }\n        // Check for existing subscription first\n        var subscription;\n        var fcmTokenDetails;\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\n            if (subscription) {\n                return subscription;\n            }\n            return swRegistration.pushManager.subscribe(fcm_details.SUBSCRIPTION_OPTIONS);\n        }).then(function (sub) {\n            subscription = sub;\n            return _this.subscribeToFCM(senderId, subscription);\n        }).then(function (tokenDetails) {\n            fcmTokenDetails = tokenDetails;\n            return _this.saveTokenDetails_(senderId, swRegistration, subscription, fcmTokenDetails['token'], fcmTokenDetails['pushSet']);\n        }).then(function () {\n            return fcmTokenDetails['token'];\n        });\n    };\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     * @param {string} token Token to be deleted\r\n     * @return {Promise<Object>} Resolves once the FCM token details have been\r\n     * deleted and returns the deleted details.\r\n     */\n    TokenManager.prototype.deleteToken = function (token) {\n        var _this = this;\n        if (typeof token !== 'string' || token.length === 0) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.INVALID_DELETE_TOKEN));\n        }\n        return this.getTokenDetailsFromToken(token).then(function (details) {\n            if (!details) {\n                throw _this.errorFactory_.create(models_errors.codes.DELETE_TOKEN_NOT_FOUND);\n            }\n            return _this.openDatabase_().then(function (db) {\n                return new Promise(function (resolve, reject) {\n                    var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');\n                    var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n                    var request = objectStore.delete(details['swScope']);\n                    request.onerror = function (event) {\n                        reject(event.target.error);\n                    };\n                    request.onsuccess = function (event) {\n                        if (event.target.result === 0) {\n                            reject(_this.errorFactory_.create(models_errors.codes.FAILED_TO_DELETE_TOKEN));\n                            return;\n                        }\n                        resolve(details);\n                    };\n                });\n            });\n        });\n    };\n    return TokenManager;\n}();\n/* harmony default export */ var token_manager = (token_manager_TokenManager);\n// CONCATENATED MODULE: ./src/messaging/models/notification-permission.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/* harmony default export */ var notification_permission = ({\n  granted: 'granted',\n  default: 'default',\n  denied: 'denied'\n});\n// CONCATENATED MODULE: ./src/messaging/controllers/controller-interface.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\nvar controller_interface_ControllerInterface = /** @class */function () {\n    /**\r\n     * An interface of the Messaging Service API\r\n     * @param {!firebase.app.App} app\r\n     */\n    function ControllerInterface(app) {\n        var _this = this;\n        this.errorFactory_ = new errors[\"a\" /* ErrorFactory */]('messaging', 'Messaging', models_errors.map);\n        if (!app.options[SENDER_ID_OPTION_NAME] || typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\n            throw this.errorFactory_.create(models_errors.codes.BAD_SENDER_ID);\n        }\n        this.messagingSenderId_ = app.options[SENDER_ID_OPTION_NAME];\n        this.tokenManager_ = new token_manager();\n        this.app = app;\n        this.INTERNAL = {};\n        this.INTERNAL.delete = function () {\n            return _this.delete;\n        };\n    }\n    /**\r\n     * @export\r\n     * @return {Promise<string> | Promise<null>} Returns a promise that\r\n     * resolves to an FCM token.\r\n     */\n    ControllerInterface.prototype.getToken = function () {\n        var _this = this;\n        // Check with permissions\n        var currentPermission = this.getNotificationPermission_();\n        if (currentPermission !== notification_permission.granted) {\n            if (currentPermission === notification_permission.denied) {\n                return Promise.reject(this.errorFactory_.create(models_errors.codes.NOTIFICATIONS_BLOCKED));\n            }\n            // We must wait for permission to be granted\n            return Promise.resolve(null);\n        }\n        return this.getSWRegistration_().then(function (registration) {\n            return _this.tokenManager_.getSavedToken(_this.messagingSenderId_, registration).then(function (token) {\n                if (token) {\n                    return token;\n                }\n                return _this.tokenManager_.createToken(_this.messagingSenderId_, registration);\n            });\n        });\n    };\n    /**\r\n     * This method deletes tokens that the token manager looks after and then\r\n     * unregisters the push subscription if it exists.\r\n     * @export\r\n     * @param {string} token\r\n     * @return {Promise<void>}\r\n     */\n    ControllerInterface.prototype.deleteToken = function (token) {\n        var _this = this;\n        return this.tokenManager_.deleteToken(token).then(function () {\n            return _this.getSWRegistration_().then(function (registration) {\n                if (registration) {\n                    return registration.pushManager.getSubscription();\n                }\n            }).then(function (subscription) {\n                if (subscription) {\n                    return subscription.unsubscribe();\n                }\n            });\n        });\n    };\n    ControllerInterface.prototype.getSWRegistration_ = function () {\n        throw this.errorFactory_.create(models_errors.codes.SHOULD_BE_INHERITED);\n    };\n    //\n    // The following methods should only be available in the window.\n    //\n    ControllerInterface.prototype.requestPermission = function () {\n        throw this.errorFactory_.create(models_errors.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\r\n     * @export\r\n     * @param {!ServiceWorkerRegistration} registration\r\n     */\n    ControllerInterface.prototype.useServiceWorker = function (registration) {\n        throw this.errorFactory_.create(models_errors.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\r\n     * @export\r\n     * @param {!firebase.Observer|function(*)} nextOrObserver\r\n     * @param {function(!Error)=} optError\r\n     * @param {function()=} optCompleted\r\n     * @return {!function()}\r\n     */\n    ControllerInterface.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {\n        throw this.errorFactory_.create(models_errors.codes.AVAILABLE_IN_WINDOW);\n    };\n    /**\r\n     * @export\r\n     * @param {!firebase.Observer|function()} nextOrObserver An observer object\r\n     * or a function triggered on token refresh.\r\n     * @param {function(!Error)=} optError Optional A function\r\n     * triggered on token refresh error.\r\n     * @param {function()=} optCompleted Optional function triggered when the\r\n     * observer is removed.\r\n     * @return {!function()} The unsubscribe function for the observer.\r\n     */\n    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {\n        throw this.errorFactory_.create(models_errors.codes.AVAILABLE_IN_WINDOW);\n    };\n    //\n    // The following methods are used by the service worker only.\n    //\n    /**\r\n     * @export\r\n     * @param {function(Object)} callback\r\n     */\n    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {\n        throw this.errorFactory_.create(models_errors.codes.AVAILABLE_IN_SW);\n    };\n    //\n    // The following methods are used by the service themselves and not exposed\n    // publicly or not expected to be used by developers.\n    //\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\n    ControllerInterface.prototype.delete = function () {\n        this.tokenManager_.closeDatabase();\n    };\n    /**\r\n     * Returns the current Notification Permission state.\r\n     * @private\r\n     * @return {string} The currenct permission state.\r\n     */\n    ControllerInterface.prototype.getNotificationPermission_ = function () {\n        return Notification.permission;\n    };\n    /**\r\n     * @protected\r\n     * @returns {TokenManager}\r\n     */\n    ControllerInterface.prototype.getTokenManager = function () {\n        return this.tokenManager_;\n    };\n    return ControllerInterface;\n}();\n/* harmony default export */ var controller_interface = (controller_interface_ControllerInterface);\n// CONCATENATED MODULE: ./src/messaging/models/worker-page-message.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n// These fields are strings to prevent closure from thinking goog.getMsg\n// should be used to initialise the values\n\nvar PARAMS = {\n    TYPE_OF_MSG: 'firebase-messaging-msg-type',\n    DATA: 'firebase-messaging-msg-data'\n};\n// This value isn't using the TYPE_OF_MSG short hand as closure\n// expects the variable to be defined via goog.getMsg\nvar msgType = {\n    PUSH_MSG_RECEIVED: 'push-msg-received',\n    NOTIFICATION_CLICKED: 'notification-clicked'\n};\nvar createNewMsg = function createNewMsg(msgType, msgData) {\n    var message = (_a = {}, _a[PARAMS.TYPE_OF_MSG] = msgType, _a[PARAMS.DATA] = msgData, _a);\n    return message;\n    var _a;\n};\n/* harmony default export */ var worker_page_message = ({\n    PARAMS: PARAMS,\n    TYPES_OF_MSG: msgType,\n    createNewMsg: createNewMsg\n});\n// CONCATENATED MODULE: ./src/messaging/models/default-sw.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/* harmony default export */ var default_sw = ({\n  path: '/firebase-messaging-sw.js',\n  scope: '/firebase-cloud-messaging-push-scope'\n});\n// EXTERNAL MODULE: ./src/app/subscribe.ts\nvar subscribe = __webpack_require__(31);\n\n// CONCATENATED MODULE: ./src/messaging/controllers/window-controller.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\n\n\nvar window_controller_WindowController = /** @class */function (_super) {\n    __extends(WindowController, _super);\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     * @param {!firebase.app.App} app\r\n     */\n    function WindowController(app) {\n        var _this = _super.call(this, app) || this;\n        /**\r\n         * @private\r\n         * @type {ServiceWorkerRegistration}\r\n         */\n        _this.registrationToUse_;\n        /**\r\n         * @private\r\n         * @type {Promise}\r\n         */\n        _this.manifestCheckPromise_;\n        /**\r\n         * @private\r\n         * @type {firebase.Observer}\r\n         */\n        _this.messageObserver_ = null;\n        /**\r\n         * @private {!firebase.Subscribe} The subscribe function to the onMessage\r\n         * observer.\r\n         */\n        _this.onMessage_ = Object(subscribe[\"a\" /* createSubscribe */])(function (observer) {\n            _this.messageObserver_ = observer;\n        });\n        /**\r\n         * @private\r\n         * @type {firebase.Observer}\r\n         */\n        _this.tokenRefreshObserver_ = null;\n        _this.onTokenRefresh_ = Object(subscribe[\"a\" /* createSubscribe */])(function (observer) {\n            _this.tokenRefreshObserver_ = observer;\n        });\n        _this.setupSWMessageListener_();\n        return _this;\n    }\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     * @export\r\n     * @return {Promise<string> | Promise<null>} Returns a promise the\r\n     * resolves to an FCM token or null if permission isn't granted.\r\n     */\n    WindowController.prototype.getToken = function () {\n        var _this = this;\n        // Check that the required API's are available\n        if (!this.isSupported_()) {\n            return Promise.reject(this.errorFactory_.create(models_errors.codes.UNSUPPORTED_BROWSER));\n        }\n        return this.manifestCheck_().then(function () {\n            return _super.prototype.getToken.call(_this);\n        });\n    };\n    /**\r\n     * The method checks that a manifest is defined and has the correct GCM\r\n     * sender ID.\r\n     * @private\r\n     * @return {Promise} Returns a promise that resolves if the manifest matches\r\n     * our required sender ID\r\n     */\n    WindowController.prototype.manifestCheck_ = function () {\n        var _this = this;\n        if (this.manifestCheckPromise_) {\n            return this.manifestCheckPromise_;\n        }\n        var manifestTag = document.querySelector('link[rel=\"manifest\"]');\n        if (!manifestTag) {\n            this.manifestCheckPromise_ = Promise.resolve();\n        } else {\n            this.manifestCheckPromise_ = fetch(manifestTag.href).then(function (response) {\n                return response.json();\n            }).catch(function () {\n                // If the download or parsing fails allow check.\n                // We only want to error if we KNOW that the gcm_sender_id is incorrect.\n                return Promise.resolve();\n            }).then(function (manifestContent) {\n                if (!manifestContent) {\n                    return;\n                }\n                if (!manifestContent['gcm_sender_id']) {\n                    return;\n                }\n                if (manifestContent['gcm_sender_id'] !== '103953800507') {\n                    throw _this.errorFactory_.create(models_errors.codes.INCORRECT_GCM_SENDER_ID);\n                }\n            });\n        }\n        return this.manifestCheckPromise_;\n    };\n    /**\r\n     * Request permission if it is not currently granted\r\n     * @export\r\n     * @returns {Promise} Resolves if the permission was granted, otherwise\r\n     * rejects\r\n     */\n    WindowController.prototype.requestPermission = function () {\n        var _this = this;\n        if (Notification.permission === notification_permission.granted) {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var managePermissionResult = function managePermissionResult(result) {\n                if (result === notification_permission.granted) {\n                    return resolve();\n                } else if (result === notification_permission.denied) {\n                    return reject(_this.errorFactory_.create(models_errors.codes.PERMISSION_BLOCKED));\n                } else {\n                    return reject(_this.errorFactory_.create(models_errors.codes.PERMISSION_DEFAULT));\n                }\n            };\n            // The Notification.requestPermission API was changed to\n            // return a promise so now have to handle both in case\n            // browsers stop support callbacks for promised version\n            var permissionPromise = Notification.requestPermission(function (result) {\n                if (permissionPromise) {\n                    // Let the promise manage this\n                    return;\n                }\n                managePermissionResult(result);\n            });\n            if (permissionPromise) {\n                // Prefer the promise version as it's the future API.\n                permissionPromise.then(managePermissionResult);\n            }\n        });\n    };\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     * @export\r\n     * @param {!ServiceWorkerRegistration} registration The service worker\r\n     * registration that should be used to receive the push messages.\r\n     */\n    WindowController.prototype.useServiceWorker = function (registration) {\n        if (!(registration instanceof ServiceWorkerRegistration)) {\n            throw this.errorFactory_.create(models_errors.codes.SW_REGISTRATION_EXPECTED);\n        }\n        if (typeof this.registrationToUse_ !== 'undefined') {\n            throw this.errorFactory_.create(models_errors.codes.USE_SW_BEFORE_GET_TOKEN);\n        }\n        this.registrationToUse_ = registration;\n    };\n    /**\r\n     * @export\r\n     * @param {!firebase.Observer|function(*)} nextOrObserver An observer object\r\n     * or a function triggered on message.\r\n     * @param {function(!Error)=} optError Optional A function triggered on\r\n     * message error.\r\n     * @param {function()=} optCompleted Optional function triggered when the\r\n     * observer is removed.\r\n     * @return {!function()} The unsubscribe function for the observer.\r\n     */\n    WindowController.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {\n        return this.onMessage_(nextOrObserver, optError, optCompleted);\n    };\n    /**\r\n     * @export\r\n     * @param {!firebase.Observer|function()} nextOrObserver An observer object\r\n     * or a function triggered on token refresh.\r\n     * @param {function(!Error)=} optError Optional A function\r\n     * triggered on token refresh error.\r\n     * @param {function()=} optCompleted Optional function triggered when the\r\n     * observer is removed.\r\n     * @return {!function()} The unsubscribe function for the observer.\r\n     */\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {\n        return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);\n    };\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @private\r\n     * @param  {ServiceWorkerRegistration} registration Registration to wait\r\n     * for service worker to become active\r\n     * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker\r\n     * registration to become active\r\n     */\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\n        var _this = this;\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\n        return new Promise(function (resolve, reject) {\n            if (!serviceWorker) {\n                // This is a rare scenario but has occured in firefox\n                reject(_this.errorFactory_.create(models_errors.codes.NO_SW_IN_REG));\n                return;\n            }\n            // Because the Promise function is called on next tick there is a\n            // small chance that the worker became active or redundant already.\n            if (serviceWorker.state === 'activated') {\n                resolve(registration);\n                return;\n            }\n            if (serviceWorker.state === 'redundant') {\n                reject(_this.errorFactory_.create(models_errors.codes.SW_REG_REDUNDANT));\n                return;\n            }\n            var stateChangeListener = function stateChangeListener() {\n                if (serviceWorker.state === 'activated') {\n                    resolve(registration);\n                } else if (serviceWorker.state === 'redundant') {\n                    reject(_this.errorFactory_.create(models_errors.codes.SW_REG_REDUNDANT));\n                } else {\n                    // Return early and wait to next state change\n                    return;\n                }\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\n            };\n            serviceWorker.addEventListener('statechange', stateChangeListener);\n        });\n    };\n    /**\r\n     * This will regiater the default service worker and return the registration\r\n     * @private\r\n     * @return {Promise<!ServiceWorkerRegistration>} The service worker\r\n     * registration to be used for the push service.\r\n     */\n    WindowController.prototype.getSWRegistration_ = function () {\n        var _this = this;\n        if (this.registrationToUse_) {\n            return this.waitForRegistrationToActivate_(this.registrationToUse_);\n        }\n        // Make the registration null so we know useServiceWorker will not\n        // use a new service worker as registrationToUse_ is no longer undefined\n        this.registrationToUse_ = null;\n        return navigator.serviceWorker.register(default_sw.path, {\n            scope: default_sw.scope\n        }).catch(function (err) {\n            throw _this.errorFactory_.create(models_errors.codes.FAILED_DEFAULT_REGISTRATION, {\n                browserErrorMessage: err.message\n            });\n        }).then(function (registration) {\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\n                _this.registrationToUse_ = registration;\n                // We update after activation due to an issue with Firefox v49 where\n                // a race condition occassionally causes the service work to not\n                // install\n                registration.update();\n                return registration;\n            });\n        });\n    };\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     *\r\n     * @private\r\n     */\n    WindowController.prototype.setupSWMessageListener_ = function () {\n        var _this = this;\n        if (!('serviceWorker' in navigator)) {\n            return;\n        }\n        navigator.serviceWorker.addEventListener('message', function (event) {\n            if (!event.data || !event.data[worker_page_message.PARAMS.TYPE_OF_MSG]) {\n                // Not a message from FCM\n                return;\n            }\n            var workerPageMessage = event.data;\n            switch (workerPageMessage[worker_page_message.PARAMS.TYPE_OF_MSG]) {\n                case worker_page_message.TYPES_OF_MSG.PUSH_MSG_RECEIVED:\n                case worker_page_message.TYPES_OF_MSG.NOTIFICATION_CLICKED:\n                    var pushMessage = workerPageMessage[worker_page_message.PARAMS.DATA];\n                    _this.messageObserver_.next(pushMessage);\n                    break;\n                default:\n                    // Noop.\n                    break;\n            }\n        }, false);\n    };\n    /**\r\n     * Checks to see if the required API's are valid or not.\r\n     * @private\r\n     * @return {boolean} Returns true if the desired APIs are available.\r\n     */\n    WindowController.prototype.isSupported_ = function () {\n        return 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n    };\n    return WindowController;\n}(controller_interface);\n/* harmony default export */ var window_controller = (window_controller_WindowController);\n// CONCATENATED MODULE: ./src/messaging/controllers/sw-controller.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar sw_controller___extends = this && this.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) {\n            if (b.hasOwnProperty(p)) d[p] = b[p];\n        }\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\n\n\n\nvar FCM_MSG = 'FCM_MSG';\nvar sw_controller_SWController = /** @class */function (_super) {\n    sw_controller___extends(SWController, _super);\n    function SWController(app) {\n        var _this = _super.call(this, app) || this;\n        self.addEventListener('push', function (e) {\n            return _this.onPush_(e);\n        }, false);\n        self.addEventListener('pushsubscriptionchange', function (e) {\n            return _this.onSubChange_(e);\n        }, false);\n        self.addEventListener('notificationclick', function (e) {\n            return _this.onNotificationClick_(e);\n        }, false);\n        /**\r\n         * @private\r\n         * @type {function(Object)|null}\r\n         */\n        _this.bgMessageHandler_ = null;\n        return _this;\n    }\n    /**\r\n    * A handler for push events that shows notifications based on the content of\r\n    * the payload.\r\n    *\r\n    * The payload must be a JSON-encoded Object with a `notification` key. The\r\n    * value of the `notification` property will be used as the NotificationOptions\r\n    * object passed to showNotification. Additionally, the `title` property of the\r\n    * notification object will be used as the title.\r\n    *\r\n    * If there is no notification data in the payload then no notification will be\r\n    * shown.\r\n    * @private\r\n    */\n    SWController.prototype.onPush_ = function (event) {\n        var _this = this;\n        var msgPayload;\n        try {\n            msgPayload = event.data.json();\n        } catch (err) {\n            // Not JSON so not an FCM message\n            return;\n        }\n        var handleMsgPromise = this.hasVisibleClients_().then(function (hasVisibleClients) {\n            if (hasVisibleClients) {\n                // Do not need to show a notification.\n                if (msgPayload.notification || _this.bgMessageHandler_) {\n                    // Send to page\n                    return _this.sendMessageToWindowClients_(msgPayload);\n                }\n                return;\n            }\n            var notificationDetails = _this.getNotificationData_(msgPayload);\n            if (notificationDetails) {\n                var notificationTitle = notificationDetails.title || '';\n                return self.registration.showNotification(notificationTitle, notificationDetails);\n            } else if (_this.bgMessageHandler_) {\n                return _this.bgMessageHandler_(msgPayload);\n            }\n        });\n        event.waitUntil(handleMsgPromise);\n    };\n    /**\r\n    * @private\r\n    */\n    SWController.prototype.onSubChange_ = function (event) {\n        var _this = this;\n        var promiseChain = this.getToken().then(function (token) {\n            if (!token) {\n                // We can't resubscribe if we don't have an FCM token for this scope.\n                throw _this.errorFactory_.create(models_errors.codes.NO_FCM_TOKEN_FOR_RESUBSCRIBE);\n            }\n            var tokenDetails = null;\n            var tokenManager = _this.getTokenManager();\n            return tokenManager.getTokenDetailsFromToken(token).then(function (details) {\n                tokenDetails = details;\n                if (!tokenDetails) {\n                    throw _this.errorFactory_.create(models_errors.codes.INVALID_SAVED_TOKEN);\n                }\n                // Attempt to get a new subscription\n                return self.registration.pushManager.subscribe(fcm_details.SUBSCRIPTION_OPTIONS);\n            }).then(function (newSubscription) {\n                // Send new subscription to FCM.\n                return tokenManager.subscribeToFCM(tokenDetails.fcmSenderId, newSubscription, tokenDetails.fcmPushSet);\n            }).catch(function (err) {\n                // The best thing we can do is log this to the terminal so\n                // developers might notice the error.\n                return tokenManager.deleteToken(tokenDetails.fcmToken).then(function () {\n                    throw _this.errorFactory_.create(models_errors.codes.UNABLE_TO_RESUBSCRIBE, {\n                        message: err\n                    });\n                });\n            });\n        });\n        event.waitUntil(promiseChain);\n    };\n    /**\r\n    * @private\r\n    */\n    SWController.prototype.onNotificationClick_ = function (event) {\n        var _this = this;\n        if (!(event.notification && event.notification.data && event.notification.data[FCM_MSG])) {\n            // Not an FCM notification, do nothing.\n            return;\n        }\n        // Prevent other listeners from receiving the event\n        event.stopImmediatePropagation();\n        event.notification.close();\n        var msgPayload = event.notification.data[FCM_MSG];\n        var clickAction = msgPayload['notification']['click_action'];\n        if (!clickAction) {\n            // Nothing to do.\n            return;\n        }\n        var promiseChain = this.getWindowClient_(clickAction).then(function (windowClient) {\n            if (!windowClient) {\n                // Unable to find window client so need to open one.\n                return self.clients.openWindow(clickAction);\n            }\n            return windowClient;\n        }).then(function (windowClient) {\n            if (!windowClient) {\n                // Window Client will not be returned if it's for a third party origin.\n                return;\n            }\n            // Delete notification data from payload before sending to the page.\n            var notificationData = msgPayload['notification'];\n            delete msgPayload['notification'];\n            var internalMsg = worker_page_message.createNewMsg(worker_page_message.TYPES_OF_MSG.NOTIFICATION_CLICKED, msgPayload);\n            // Attempt to send a message to the client to handle the data\n            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\n            return _this.attemptToMessageClient_(windowClient, internalMsg);\n        });\n        event.waitUntil(promiseChain);\n    };\n    /**\r\n     * @private\r\n     * @param {Object} msgPayload\r\n     * @return {NotificationOptions|undefined}\r\n     */\n    SWController.prototype.getNotificationData_ = function (msgPayload) {\n        if (!msgPayload) {\n            return;\n        }\n        if (_typeof(msgPayload.notification) !== 'object') {\n            return;\n        }\n        var notificationInformation = Object.assign({}, msgPayload.notification);\n        // Put the message payload under FCM_MSG name so we can identify the\n        // notification as being an FCM notification vs a notification from\n        // somewhere else (i.e. normal web push or developer generated\n        // notification).\n        notificationInformation['data'] = (_a = {}, _a[FCM_MSG] = msgPayload, _a);\n        return notificationInformation;\n        var _a;\n    };\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     * @export\r\n     * @param {function(Object)} callback The callback to be called when a push\r\n     * message is received and a notification must be shown. The callback will\r\n     * be given the data from the push message.\r\n     */\n    SWController.prototype.setBackgroundMessageHandler = function (callback) {\n        if (callback && typeof callback !== 'function') {\n            throw this.errorFactory_.create(models_errors.codes.BG_HANDLER_FUNCTION_EXPECTED);\n        }\n        this.bgMessageHandler_ = callback;\n    };\n    /**\r\n     * @private\r\n     * @param {string} url The URL to look for when focusing a client.\r\n     * @return {Object} Returns an existing window client or a newly opened\r\n     * WindowClient.\r\n     */\n    SWController.prototype.getWindowClient_ = function (url) {\n        // Use URL to normalize the URL when comparing to windowClients.\n        // This at least handles whether to include trailing slashes or not\n        var parsedURL = new URL(url).href;\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            var suitableClient = null;\n            for (var i = 0; i < clientList.length; i++) {\n                var parsedClientUrl = new URL(clientList[i].url).href;\n                if (parsedClientUrl === parsedURL) {\n                    suitableClient = clientList[i];\n                    break;\n                }\n            }\n            if (suitableClient) {\n                suitableClient.focus();\n                return suitableClient;\n            }\n        });\n    };\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @private\r\n     * @param {Object} client The WindowClient to send the message to.\r\n     * @param {Object} message The message to send to the client.\r\n     * @returns {Promise} Returns a promise that resolves after sending the\r\n     * message. This does not guarantee that the message was successfully\r\n     * received.\r\n     */\n    SWController.prototype.attemptToMessageClient_ = function (client, message) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!client) {\n                return reject(_this.errorFactory_.create(models_errors.codes.NO_WINDOW_CLIENT_TO_MSG));\n            }\n            client.postMessage(message);\n            resolve();\n        });\n    };\n    /**\r\n     * @private\r\n     * @returns {Promise<boolean>} If there is currently a visible WindowClient,\r\n     * this method will resolve to true, otherwise false.\r\n     */\n    SWController.prototype.hasVisibleClients_ = function () {\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            return clientList.some(function (client) {\n                return client.visibilityState === 'visible';\n            });\n        });\n    };\n    /**\r\n     * @private\r\n     * @param {Object} msgPayload The data from the push event that should be sent\r\n     * to all available pages.\r\n     * @returns {Promise} Returns a promise that resolves once the message\r\n     * has been sent to all WindowClients.\r\n     */\n    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\n        var _this = this;\n        return self.clients.matchAll({\n            type: 'window',\n            includeUncontrolled: true\n        }).then(function (clientList) {\n            var internalMsg = worker_page_message.createNewMsg(worker_page_message.TYPES_OF_MSG.PUSH_MSG_RECEIVED, msgPayload);\n            return Promise.all(clientList.map(function (client) {\n                return _this.attemptToMessageClient_(client, internalMsg);\n            }));\n        });\n    };\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @private\r\n     * @return {Promise<!ServiceWorkerRegistration>} The service worker\r\n     * registration to be used for the push service.\r\n     */\n    SWController.prototype.getSWRegistration_ = function () {\n        return Promise.resolve(self.registration);\n    };\n    return SWController;\n}(controller_interface);\n/* harmony default export */ var sw_controller = (sw_controller_SWController);\n// EXTERNAL MODULE: ./src/app.ts + 1 modules\nvar src_app = __webpack_require__(9);\n\n// CONCATENATED MODULE: ./src/messaging.ts\n/* harmony export (immutable) */ __webpack_exports__[\"registerMessaging\"] = registerMessaging;\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\nfunction registerMessaging(instance) {\n    var messagingName = 'messaging';\n    var factoryMethod = function factoryMethod(app) {\n        if (self && 'ServiceWorkerGlobalScope' in self) {\n            return new sw_controller(app);\n        }\n        // Assume we are in the window context.\n        return new window_controller(app);\n    };\n    var namespaceExports = {\n        // no-inline\n        Messaging: window_controller\n    };\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\n}\nregisterMessaging(src_app[\"default\"]);\n\n/***/ })\n\n},[61]);\n          } catch(error) {\n            throw new Error(\n              'Cannot instantiate firebase-messaging.js - ' +\n              'be sure to load firebase-app.js first.'\n            )\n          }\n\n\n// WEBPACK FOOTER //\n// firebase-messaging.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction toBase64(arrayBuffer) {\n  const uint8Version = new Uint8Array(arrayBuffer);\n  return window.btoa(String.fromCharCode.apply(null, uint8Version));\n}\n\nexport default arrayBuffer => {\n  const base64String = toBase64(arrayBuffer);\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/helpers/array-buffer-to-base64.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport WindowController from './messaging/controllers/window-controller';\nimport SWController from './messaging/controllers/sw-controller';\nimport firebase from './app';\n\nexport function registerMessaging(instance) {\n  const messagingName = 'messaging';\n  const factoryMethod = app => {\n    if (self && 'ServiceWorkerGlobalScope' in self) {\n      return new SWController(app);\n    }\n\n    // Assume we are in the window context.\n    return new WindowController(app);\n  };\n\n  const namespaceExports = {\n    // no-inline\n    Messaging: WindowController\n  };\n\n  instance.INTERNAL.registerService(\n    messagingName,\n    factoryMethod,\n    namespaceExports\n  );\n}\n\nregisterMessaging(firebase);\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst CODES = {\n  AVAILABLE_IN_WINDOW: 'only-available-in-window',\n  AVAILABLE_IN_SW: 'only-available-in-sw',\n  SHOULD_BE_INHERITED: 'should-be-overriden',\n  BAD_SENDER_ID: 'bad-sender-id',\n  INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\n  PERMISSION_DEFAULT: 'permission-default',\n  PERMISSION_BLOCKED: 'permission-blocked',\n  UNSUPPORTED_BROWSER: 'unsupported-browser',\n  NOTIFICATIONS_BLOCKED: 'notifications-blocked',\n  FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\n  SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\n  GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\n  INVALID_SAVED_TOKEN: 'invalid-saved-token',\n  SW_REG_REDUNDANT: 'sw-reg-redundant',\n  TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\n  TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\n  USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\n  INVALID_DELETE_TOKEN: 'invalid-delete-token',\n  DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\n  DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\n  BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\n  NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\n  UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\n  NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\n  FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\n  NO_SW_IN_REG: 'no-sw-in-reg',\n  BAD_SCOPE: 'bad-scope',\n  BAD_VAPID_KEY: 'bad-vapid-key',\n  BAD_SUBSCRIPTION: 'bad-subscription',\n  BAD_TOKEN: 'bad-token',\n  BAD_PUSH_SET: 'bad-push-set',\n  FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key'\n};\n\nconst ERROR_MAP = {\n  [CODES.AVAILABLE_IN_WINDOW]: 'This method is available in a Window context.',\n  [CODES.AVAILABLE_IN_SW]:\n    'This method is available in a service worker ' + 'context.',\n  [CODES.SHOULD_BE_INHERITED]:\n    'This method should be overriden by ' + 'extended classes.',\n  [CODES.BAD_SENDER_ID]:\n    \"Please ensure that 'messagingSenderId' is set \" +\n    'correctly in the options passed into firebase.initializeApp().',\n  [CODES.PERMISSION_DEFAULT]:\n    'The required permissions were not granted and ' + 'dismissed instead.',\n  [CODES.PERMISSION_BLOCKED]:\n    'The required permissions were not granted and ' + 'blocked instead.',\n  [CODES.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's \" +\n    'required to use the firebase SDK.',\n  [CODES.NOTIFICATIONS_BLOCKED]: 'Notifications have been blocked.',\n  [CODES.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the ' +\n    'default service worker. {$browserErrorMessage}',\n  [CODES.SW_REGISTRATION_EXPECTED]:\n    'A service worker registration was the ' + 'expected input.',\n  [CODES.GET_SUBSCRIPTION_FAILED]:\n    'There was an error when trying to get ' +\n    'any existing Push Subscriptions.',\n  [CODES.INVALID_SAVED_TOKEN]: 'Unable to access details of the saved token.',\n  [CODES.SW_REG_REDUNDANT]:\n    'The service worker being used for push was made ' + 'redundant.',\n  [CODES.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occured while subscribing the ' + 'user to FCM: {$message}',\n  [CODES.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing ' + 'the user to push.',\n  [CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET]:\n    'FCM returned an invalid response ' + 'when getting an FCM token.',\n  [CODES.USE_SW_BEFORE_GET_TOKEN]:\n    'You must call useServiceWorker() before ' +\n    'calling getToken() to ensure your service worker is used.',\n  [CODES.INVALID_DELETE_TOKEN]:\n    'You must pass a valid token into ' +\n    'deleteToken(), i.e. the token from getToken().',\n  [CODES.DELETE_TOKEN_NOT_FOUND]:\n    'The deletion attempt for token could not ' +\n    'be performed as the token was not found.',\n  [CODES.DELETE_SCOPE_NOT_FOUND]:\n    'The deletion attempt for service worker ' +\n    'scope could not be performed as the scope was not found.',\n  [CODES.BG_HANDLER_FUNCTION_EXPECTED]:\n    'The input to ' + 'setBackgroundMessageHandler() must be a function.',\n  [CODES.NO_WINDOW_CLIENT_TO_MSG]:\n    'An attempt was made to message a ' + 'non-existant window client.',\n  [CODES.UNABLE_TO_RESUBSCRIBE]:\n    'There was an error while re-subscribing ' +\n    'the FCM token for push messaging. Will have to resubscribe the ' +\n    'user on next visit. {$message}',\n  [CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE]:\n    'Could not find an FCM token ' +\n    'and as a result, unable to resubscribe. Will have to resubscribe the ' +\n    'user on next visit.',\n  [CODES.FAILED_TO_DELETE_TOKEN]: 'Unable to delete the currently saved token.',\n  [CODES.NO_SW_IN_REG]:\n    'Even though the service worker registration was ' +\n    'successful, there was a problem accessing the service worker itself.',\n  [CODES.INCORRECT_GCM_SENDER_ID]:\n    \"Please change your web app manifest's \" +\n    \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\",\n  [CODES.BAD_SCOPE]:\n    'The service worker scope must be a string with at ' +\n    'least one character.',\n  [CODES.BAD_VAPID_KEY]:\n    'The public VAPID key must be a string with at ' + 'least one character.',\n  [CODES.BAD_SUBSCRIPTION]:\n    'The subscription must be a valid ' + 'PushSubscription.',\n  [CODES.BAD_TOKEN]:\n    'The FCM Token used for storage / lookup was not ' +\n    'a valid token string.',\n  [CODES.BAD_PUSH_SET]:\n    'The FCM push set used for storage / lookup was not ' +\n    'not a valid push set string.',\n  [CODES.FAILED_DELETE_VAPID_KEY]: 'The VAPID key could not be deleted.'\n};\n\nexport default {\n  codes: CODES,\n  map: ERROR_MAP\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/models/errors.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst FCM_APPLICATION_SERVER_KEY = [\n  0x04,\n  0x33,\n  0x94,\n  0xf7,\n  0xdf,\n  0xa1,\n  0xeb,\n  0xb1,\n  0xdc,\n  0x03,\n  0xa2,\n  0x5e,\n  0x15,\n  0x71,\n  0xdb,\n  0x48,\n  0xd3,\n  0x2e,\n  0xed,\n  0xed,\n  0xb2,\n  0x34,\n  0xdb,\n  0xb7,\n  0x47,\n  0x3a,\n  0x0c,\n  0x8f,\n  0xc4,\n  0xcc,\n  0xe1,\n  0x6f,\n  0x3c,\n  0x8c,\n  0x84,\n  0xdf,\n  0xab,\n  0xb6,\n  0x66,\n  0x3e,\n  0xf2,\n  0x0c,\n  0xd4,\n  0x8b,\n  0xfe,\n  0xe3,\n  0xf9,\n  0x76,\n  0x2f,\n  0x14,\n  0x1c,\n  0x63,\n  0x08,\n  0x6a,\n  0x6f,\n  0x2d,\n  0xb1,\n  0x1a,\n  0x95,\n  0xb0,\n  0xce,\n  0x37,\n  0xc0,\n  0x9c,\n  0x6e\n];\n\nconst SUBSCRIPTION_DETAILS = {\n  userVisibleOnly: true,\n  applicationServerKey: new Uint8Array(FCM_APPLICATION_SERVER_KEY)\n};\n\nexport default {\n  ENDPOINT: 'https://fcm.googleapis.com',\n  APPLICATION_SERVER_KEY: FCM_APPLICATION_SERVER_KEY,\n  SUBSCRIPTION_OPTIONS: SUBSCRIPTION_DETAILS\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/models/fcm-details.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport { ErrorFactory } from '../../app/errors';\n\nimport Errors from './errors';\nimport arrayBufferToBase64 from '../helpers/array-buffer-to-base64';\nimport FCMDetails from './fcm-details';\n\nconst FCM_TOKEN_DETAILS_DB = 'fcm_token_details_db';\nconst FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';\nconst FCM_TOKEN_DETAILS_DB_VERSION = 1;\n\nexport default class TokenManager {\n  private errorFactory_: ErrorFactory<string>;\n  private openDbPromise_: Promise<IDBDatabase>;\n\n  constructor() {\n    this.errorFactory_ = new ErrorFactory('messaging', 'Messaging', Errors.map);\n    this.openDbPromise_ = null;\n  }\n\n  /**\n   * Get the indexedDB as a promsie.\n   * @private\n   * @return {Promise<IDBDatabase>} The IndexedDB database\n   */\n  openDatabase_() {\n    if (this.openDbPromise_) {\n      return this.openDbPromise_;\n    }\n\n    this.openDbPromise_ = new Promise((resolve, reject) => {\n      const request = indexedDB.open(\n        FCM_TOKEN_DETAILS_DB,\n        FCM_TOKEN_DETAILS_DB_VERSION\n      );\n      request.onerror = event => {\n        reject((<IDBRequest>event.target).error);\n      };\n      request.onsuccess = event => {\n        resolve((<IDBRequest>event.target).result);\n      };\n      request.onupgradeneeded = event => {\n        var db = (<IDBRequest>event.target).result;\n\n        var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {\n          keyPath: 'swScope'\n        });\n\n        // Make sure the sender ID can be searched\n        objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\n          unique: false\n        });\n\n        objectStore.createIndex('fcmToken', 'fcmToken', {\n          unique: true\n        });\n      };\n    });\n\n    return this.openDbPromise_;\n  }\n\n  /**\n   * Close the currently open database.\n   * @return {Promise<?>} Returns the result of the promise chain.\n   */\n  closeDatabase() {\n    if (this.openDbPromise_) {\n      return this.openDbPromise_.then(db => {\n        db.close();\n        this.openDbPromise_ = null;\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Given a token, this method will look up the details in indexedDB.\n   * @public\n   * @param {string} fcmToken\n   * @return {Promise<Object>} The details associated with that token.\n   */\n  getTokenDetailsFromToken(fcmToken) {\n    return this.openDatabase_().then(db => {\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n        const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n        const index = objectStore.index('fcmToken');\n        const request = index.get(fcmToken);\n        request.onerror = function(event) {\n          reject((<IDBRequest>event.target).error);\n        };\n        request.onsuccess = function(event) {\n          resolve((<IDBRequest>event.target).result);\n        };\n      });\n    });\n  }\n\n  getTokenDetailsFromSWScope_(swScope) {\n    return this.openDatabase_().then(db => {\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n        const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n        const scopeRequest = objectStore.get(swScope);\n        scopeRequest.onerror = event => {\n          reject((<IDBRequest>event.target).error);\n        };\n\n        scopeRequest.onsuccess = event => {\n          resolve((<IDBRequest>event.target).result);\n        };\n      });\n    });\n  }\n\n  getAllTokenDetailsForSenderId_(senderId): Promise<Array<Object>> {\n    return this.openDatabase_().then(db => {\n      return new Promise<Array<Object>>((resolve, reject) => {\n        const transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);\n        const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n\n        const senderIdTokens = [];\n\n        const cursorRequest = objectStore.openCursor();\n        cursorRequest.onerror = event => {\n          reject((<IDBRequest>event.target).error);\n        };\n\n        cursorRequest.onsuccess = event => {\n          const cursor = (<IDBRequest>event.target).result;\n          if (cursor) {\n            if (cursor.value['fcmSenderId'] === senderId) {\n              senderIdTokens.push(cursor.value);\n            }\n            cursor.continue();\n          } else {\n            resolve(senderIdTokens);\n          }\n        };\n      });\n    });\n  }\n\n  /**\n   * Given a PushSubscription and messagingSenderId, get an FCM token.\n   * @public\n   * @param  {string} senderId The 'messagingSenderId' to tie the token to.\n   * @param  {PushSubscription} subscription The PushSusbcription to \"federate\".\n   * @param  {string=} pushSet If defined this will swap the subscription for\n   * matching FCM token.\n   * @return {Promise<!Object>} Returns the FCM token to be used in place\n   * of the PushSubscription.\n   */\n  subscribeToFCM(senderId, subscription, pushSet?): Promise<Object> {\n    const p256dh = arrayBufferToBase64(subscription['getKey']('p256dh'));\n    const auth = arrayBufferToBase64(subscription['getKey']('auth'));\n\n    let fcmSubscribeBody =\n      `authorized_entity=${senderId}&` +\n      `endpoint=${subscription.endpoint}&` +\n      `encryption_key=${p256dh}&` +\n      `encryption_auth=${auth}`;\n\n    if (pushSet) {\n      fcmSubscribeBody += `&pushSet=${pushSet}`;\n    }\n\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    const subscribeOptions = {\n      method: 'POST',\n      headers: headers,\n      body: fcmSubscribeBody\n    };\n\n    return fetch(\n      FCMDetails.ENDPOINT + '/fcm/connect/subscribe',\n      subscribeOptions\n    )\n      .then(response => response.json())\n      .then(response => {\n        const fcmTokenResponse = response;\n        if (fcmTokenResponse['error']) {\n          const message = fcmTokenResponse['error']['message'];\n          throw this.errorFactory_.create(Errors.codes.TOKEN_SUBSCRIBE_FAILED, {\n            message: message\n          });\n        }\n\n        if (!fcmTokenResponse['token']) {\n          throw this.errorFactory_.create(\n            Errors.codes.TOKEN_SUBSCRIBE_NO_TOKEN\n          );\n        }\n\n        if (!fcmTokenResponse['pushSet']) {\n          throw this.errorFactory_.create(\n            Errors.codes.TOKEN_SUBSCRIBE_NO_PUSH_SET\n          );\n        }\n\n        return {\n          token: fcmTokenResponse['token'],\n          pushSet: fcmTokenResponse['pushSet']\n        };\n      });\n  }\n\n  /**\n   * Checks the that fields in the PushSubscription are equivalent to the\n   * details stores in the masterTokenDetails.\n   * @private\n   * @param  {PushSubscription} subscription The push subscription we expect\n   * the master token to match.\n   * @param  {Object}  masterTokenDetails The saved details we wish to compare\n   * with the PushSubscription\n   * @return {boolean} true if the subscription and token details are\n   * equivalent.\n   */\n  isSameSubscription_(subscription, masterTokenDetails) {\n    // getKey() isn't defined in the PushSubscription externs file, hence\n    // subscription['getKey']('<key name>').\n    return (\n      subscription.endpoint === masterTokenDetails['endpoint'] &&\n      arrayBufferToBase64(subscription['getKey']('auth')) ===\n        masterTokenDetails['auth'] &&\n      arrayBufferToBase64(subscription['getKey']('p256dh')) ===\n        masterTokenDetails['p256dh']\n    );\n  }\n\n  /**\n   * Save the details for the fcm token for re-use at a later date.\n   * @private\n   * @param  {string} senderId The 'messagingSenderId' used for this project\n   * @param  {ServiceWorkerRegistration} swRegistration The service worker\n   * used to subscribe the user for web push\n   * @param  {PushSubscription} subscription The push subscription passed to\n   * FCM for the current token.\n   * @param  {string} fcmToken The FCM token currently used on this\n   * device.\n   * @param  {string} fcmPushSet The FCM push tied to the fcm token.\n   * @return {Promise<void>}\n   */\n  saveTokenDetails_(\n    senderId,\n    swRegistration,\n    subscription,\n    fcmToken,\n    fcmPushSet\n  ) {\n    const details = {\n      swScope: swRegistration.scope,\n      endpoint: subscription.endpoint,\n      auth: arrayBufferToBase64(subscription['getKey']('auth')),\n      p256dh: arrayBufferToBase64(subscription['getKey']('p256dh')),\n      fcmToken: fcmToken,\n      fcmPushSet: fcmPushSet,\n      fcmSenderId: senderId\n    };\n\n    return this.openDatabase_().then(db => {\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');\n        const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n        const request = objectStore.put(details);\n        request.onerror = event => {\n          reject((<IDBRequest>event.target).error);\n        };\n        request.onsuccess = event => {\n          resolve();\n        };\n      });\n    });\n  }\n\n  /**\n   * Returns the saved FCM Token if one is available and still valid,\n   * otherwise `null` is returned.\n   * @param {string} senderId This should be the sender ID associated with the\n   * FCM Token being retrieved.\n   * @param {ServiceWorkerRegistration} swRegistration Registration to be used\n   * to subscribe the user to push.\n   * @return {Promise<string> | Promise} Returns the saved FCM Token if\n   * avilable and valid.\n   * @export\n   */\n  getSavedToken(senderId, swRegistration) {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.SW_REGISTRATION_EXPECTED)\n      );\n    }\n\n    if (typeof senderId !== 'string' || senderId.length === 0) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_SENDER_ID)\n      );\n    }\n\n    return this.getAllTokenDetailsForSenderId_(senderId)\n      .then(allTokenDetails => {\n        if (allTokenDetails.length === 0) {\n          return;\n        }\n\n        const index = allTokenDetails.findIndex(tokenDetails => {\n          return (\n            swRegistration.scope === tokenDetails['swScope'] &&\n            senderId === tokenDetails['fcmSenderId']\n          );\n        });\n\n        if (index === -1) {\n          return;\n        }\n\n        return allTokenDetails[index];\n      })\n      .then(tokenDetails => {\n        if (!tokenDetails) {\n          return;\n        }\n\n        return swRegistration.pushManager\n          .getSubscription()\n          .catch(err => {\n            throw this.errorFactory_.create(\n              Errors.codes.GET_SUBSCRIPTION_FAILED\n            );\n          })\n          .then(subscription => {\n            if (\n              subscription &&\n              this.isSameSubscription_(subscription, tokenDetails)\n            ) {\n              return tokenDetails['fcmToken'];\n            }\n          });\n      });\n  }\n\n  /**\n   * Creates a new FCM token.\n   */\n  createToken(senderId, swRegistration): Promise<String> {\n    if (typeof senderId !== 'string' || senderId.length === 0) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.BAD_SENDER_ID)\n      );\n    }\n\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.SW_REGISTRATION_EXPECTED)\n      );\n    }\n\n    // Check for existing subscription first\n    let subscription;\n    let fcmTokenDetails;\n    return swRegistration.pushManager\n      .getSubscription()\n      .then(subscription => {\n        if (subscription) {\n          return subscription;\n        }\n\n        return swRegistration.pushManager.subscribe(\n          FCMDetails.SUBSCRIPTION_OPTIONS\n        );\n      })\n      .then(sub => {\n        subscription = sub;\n        return this.subscribeToFCM(senderId, subscription);\n      })\n      .then(tokenDetails => {\n        fcmTokenDetails = tokenDetails;\n        return this.saveTokenDetails_(\n          senderId,\n          swRegistration,\n          subscription,\n          fcmTokenDetails['token'],\n          fcmTokenDetails['pushSet']\n        );\n      })\n      .then(() => fcmTokenDetails['token']);\n  }\n\n  /**\n   * This method deletes details of the current FCM token.\n   * It's returning a promise in case we need to move to an async\n   * method for deleting at a later date.\n   * @param {string} token Token to be deleted\n   * @return {Promise<Object>} Resolves once the FCM token details have been\n   * deleted and returns the deleted details.\n   */\n  deleteToken(token) {\n    if (typeof token !== 'string' || token.length === 0) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.INVALID_DELETE_TOKEN)\n      );\n    }\n\n    return this.getTokenDetailsFromToken(token).then(details => {\n      if (!details) {\n        throw this.errorFactory_.create(Errors.codes.DELETE_TOKEN_NOT_FOUND);\n      }\n\n      return this.openDatabase_().then(db => {\n        return new Promise((resolve, reject) => {\n          const transaction = db.transaction(\n            [FCM_TOKEN_OBJ_STORE],\n            'readwrite'\n          );\n          const objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);\n          const request = objectStore.delete(details['swScope']);\n          request.onerror = event => {\n            reject((<IDBRequest>event.target).error);\n          };\n          request.onsuccess = event => {\n            if ((<IDBRequest>event.target).result === 0) {\n              reject(\n                this.errorFactory_.create(Errors.codes.FAILED_TO_DELETE_TOKEN)\n              );\n              return;\n            }\n\n            resolve(details);\n          };\n        });\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/models/token-manager.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport { ErrorFactory } from '../../app/errors';\nimport Errors from '../models/errors';\nimport TokenManager from '../models/token-manager';\nimport NOTIFICATION_PERMISSION from '../models/notification-permission';\n\nconst SENDER_ID_OPTION_NAME = 'messagingSenderId';\n\nexport default class ControllerInterface {\n  public app;\n  public INTERNAL;\n  protected errorFactory_;\n  private messagingSenderId_: string;\n  private tokenManager_: TokenManager;\n\n  /**\n   * An interface of the Messaging Service API\n   * @param {!firebase.app.App} app\n   */\n  constructor(app) {\n    this.errorFactory_ = new ErrorFactory('messaging', 'Messaging', Errors.map);\n\n    if (\n      !app.options[SENDER_ID_OPTION_NAME] ||\n      typeof app.options[SENDER_ID_OPTION_NAME] !== 'string'\n    ) {\n      throw this.errorFactory_.create(Errors.codes.BAD_SENDER_ID);\n    }\n\n    this.messagingSenderId_ = app.options[SENDER_ID_OPTION_NAME];\n\n    this.tokenManager_ = new TokenManager();\n\n    this.app = app;\n    this.INTERNAL = {};\n    this.INTERNAL.delete = () => this.delete;\n  }\n\n  /**\n   * @export\n   * @return {Promise<string> | Promise<null>} Returns a promise that\n   * resolves to an FCM token.\n   */\n  getToken() {\n    // Check with permissions\n    const currentPermission = this.getNotificationPermission_();\n    if (currentPermission !== NOTIFICATION_PERMISSION.granted) {\n      if (currentPermission === NOTIFICATION_PERMISSION.denied) {\n        return Promise.reject(\n          this.errorFactory_.create(Errors.codes.NOTIFICATIONS_BLOCKED)\n        );\n      }\n\n      // We must wait for permission to be granted\n      return Promise.resolve(null);\n    }\n\n    return this.getSWRegistration_().then(registration => {\n      return this.tokenManager_\n        .getSavedToken(this.messagingSenderId_, registration)\n        .then(token => {\n          if (token) {\n            return token;\n          }\n\n          return this.tokenManager_.createToken(\n            this.messagingSenderId_,\n            registration\n          );\n        });\n    });\n  }\n\n  /**\n   * This method deletes tokens that the token manager looks after and then\n   * unregisters the push subscription if it exists.\n   * @export\n   * @param {string} token\n   * @return {Promise<void>}\n   */\n  deleteToken(token) {\n    return this.tokenManager_.deleteToken(token).then(() => {\n      return this.getSWRegistration_()\n        .then(registration => {\n          if (registration) {\n            return registration.pushManager.getSubscription();\n          }\n        })\n        .then(subscription => {\n          if (subscription) {\n            return subscription.unsubscribe();\n          }\n        });\n    });\n  }\n\n  getSWRegistration_(): Promise<ServiceWorkerRegistration> {\n    throw this.errorFactory_.create(Errors.codes.SHOULD_BE_INHERITED);\n  }\n\n  //\n  // The following methods should only be available in the window.\n  //\n\n  requestPermission() {\n    throw this.errorFactory_.create(Errors.codes.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * @export\n   * @param {!ServiceWorkerRegistration} registration\n   */\n  useServiceWorker(registration) {\n    throw this.errorFactory_.create(Errors.codes.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function(*)} nextOrObserver\n   * @param {function(!Error)=} optError\n   * @param {function()=} optCompleted\n   * @return {!function()}\n   */\n  onMessage(nextOrObserver, optError, optCompleted) {\n    throw this.errorFactory_.create(Errors.codes.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function()} nextOrObserver An observer object\n   * or a function triggered on token refresh.\n   * @param {function(!Error)=} optError Optional A function\n   * triggered on token refresh error.\n   * @param {function()=} optCompleted Optional function triggered when the\n   * observer is removed.\n   * @return {!function()} The unsubscribe function for the observer.\n   */\n  onTokenRefresh(nextOrObserver, optError, optCompleted) {\n    throw this.errorFactory_.create(Errors.codes.AVAILABLE_IN_WINDOW);\n  }\n\n  //\n  // The following methods are used by the service worker only.\n  //\n\n  /**\n   * @export\n   * @param {function(Object)} callback\n   */\n  setBackgroundMessageHandler(callback) {\n    throw this.errorFactory_.create(Errors.codes.AVAILABLE_IN_SW);\n  }\n\n  //\n  // The following methods are used by the service themselves and not exposed\n  // publicly or not expected to be used by developers.\n  //\n\n  /**\n   * This method is required to adhere to the Firebase interface.\n   * It closes any currently open indexdb database connections.\n   */\n  delete() {\n    this.tokenManager_.closeDatabase();\n  }\n\n  /**\n   * Returns the current Notification Permission state.\n   * @private\n   * @return {string} The currenct permission state.\n   */\n  getNotificationPermission_() {\n    return (Notification as any).permission;\n  }\n\n  /**\n   * @protected\n   * @returns {TokenManager}\n   */\n  getTokenManager() {\n    return this.tokenManager_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/controllers/controller-interface.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n// These fields are strings to prevent closure from thinking goog.getMsg\n// should be used to initialise the values\nconst PARAMS = {\n  TYPE_OF_MSG: 'firebase-messaging-msg-type',\n  DATA: 'firebase-messaging-msg-data'\n};\n\n// This value isn't using the TYPE_OF_MSG short hand as closure\n// expects the variable to be defined via goog.getMsg\nconst msgType = {\n  PUSH_MSG_RECEIVED: 'push-msg-received',\n  NOTIFICATION_CLICKED: 'notification-clicked'\n};\n\nconst createNewMsg = (msgType, msgData) => {\n  const message = {\n    [PARAMS.TYPE_OF_MSG]: msgType,\n    [PARAMS.DATA]: msgData\n  };\n  return message;\n};\n\nexport default {\n  PARAMS,\n  TYPES_OF_MSG: msgType,\n  createNewMsg\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/models/worker-page-message.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nexport default {\n  path: '/firebase-messaging-sw.js',\n  scope: '/firebase-cloud-messaging-push-scope'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/models/default-sw.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport ControllerInterface from './controller-interface';\nimport Errors from '../models/errors';\nimport WorkerPageMessage from '../models/worker-page-message';\nimport DefaultSW from '../models/default-sw';\nimport NOTIFICATION_PERMISSION from '../models/notification-permission';\nimport { createSubscribe } from '../../app/subscribe';\n\ndeclare const firebase: any;\n\nexport default class WindowController extends ControllerInterface {\n  private registrationToUse_;\n  private manifestCheckPromise_;\n  private messageObserver_;\n  private onMessage_;\n  private tokenRefreshObserver_;\n  private onTokenRefresh_;\n\n  /**\n   * A service that provides a MessagingService instance.\n   * @param {!firebase.app.App} app\n   */\n  constructor(app) {\n    super(app);\n\n    /**\n     * @private\n     * @type {ServiceWorkerRegistration}\n     */\n    this.registrationToUse_;\n\n    /**\n     * @private\n     * @type {Promise}\n     */\n    this.manifestCheckPromise_;\n\n    /**\n     * @private\n     * @type {firebase.Observer}\n     */\n    this.messageObserver_ = null;\n    /**\n     * @private {!firebase.Subscribe} The subscribe function to the onMessage\n     * observer.\n     */\n    this.onMessage_ = createSubscribe(observer => {\n      this.messageObserver_ = observer;\n    });\n\n    /**\n     * @private\n     * @type {firebase.Observer}\n     */\n    this.tokenRefreshObserver_ = null;\n    this.onTokenRefresh_ = createSubscribe(observer => {\n      this.tokenRefreshObserver_ = observer;\n    });\n\n    this.setupSWMessageListener_();\n  }\n\n  /**\n   * This method returns an FCM token if it can be generated.\n   * The return promise will reject if the browser doesn't support\n   * FCM, if permission is denied for notifications or it's not\n   * possible to generate a token.\n   * @export\n   * @return {Promise<string> | Promise<null>} Returns a promise the\n   * resolves to an FCM token or null if permission isn't granted.\n   */\n  getToken() {\n    // Check that the required API's are available\n    if (!this.isSupported_()) {\n      return Promise.reject(\n        this.errorFactory_.create(Errors.codes.UNSUPPORTED_BROWSER)\n      );\n    }\n\n    return this.manifestCheck_().then(() => {\n      return super.getToken();\n    });\n  }\n\n  /**\n   * The method checks that a manifest is defined and has the correct GCM\n   * sender ID.\n   * @private\n   * @return {Promise} Returns a promise that resolves if the manifest matches\n   * our required sender ID\n   */\n  manifestCheck_() {\n    if (this.manifestCheckPromise_) {\n      return this.manifestCheckPromise_;\n    }\n\n    const manifestTag = <HTMLAnchorElement>document.querySelector(\n      'link[rel=\"manifest\"]'\n    );\n    if (!manifestTag) {\n      this.manifestCheckPromise_ = Promise.resolve();\n    } else {\n      this.manifestCheckPromise_ = fetch(manifestTag.href)\n        .then(response => {\n          return response.json();\n        })\n        .catch(() => {\n          // If the download or parsing fails allow check.\n          // We only want to error if we KNOW that the gcm_sender_id is incorrect.\n          return Promise.resolve();\n        })\n        .then(manifestContent => {\n          if (!manifestContent) {\n            return;\n          }\n\n          if (!manifestContent['gcm_sender_id']) {\n            return;\n          }\n\n          if (manifestContent['gcm_sender_id'] !== '103953800507') {\n            throw this.errorFactory_.create(\n              Errors.codes.INCORRECT_GCM_SENDER_ID\n            );\n          }\n        });\n    }\n\n    return this.manifestCheckPromise_;\n  }\n\n  /**\n   * Request permission if it is not currently granted\n   * @export\n   * @returns {Promise} Resolves if the permission was granted, otherwise\n   * rejects\n   */\n  requestPermission() {\n    if ((Notification as any).permission === NOTIFICATION_PERMISSION.granted) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve, reject) => {\n      const managePermissionResult = result => {\n        if (result === NOTIFICATION_PERMISSION.granted) {\n          return resolve();\n        } else if (result === NOTIFICATION_PERMISSION.denied) {\n          return reject(\n            this.errorFactory_.create(Errors.codes.PERMISSION_BLOCKED)\n          );\n        } else {\n          return reject(\n            this.errorFactory_.create(Errors.codes.PERMISSION_DEFAULT)\n          );\n        }\n      };\n\n      // The Notification.requestPermission API was changed to\n      // return a promise so now have to handle both in case\n      // browsers stop support callbacks for promised version\n      const permissionPromise = Notification.requestPermission(result => {\n        if (permissionPromise) {\n          // Let the promise manage this\n          return;\n        }\n\n        managePermissionResult(result);\n      });\n\n      if (permissionPromise) {\n        // Prefer the promise version as it's the future API.\n        permissionPromise.then(managePermissionResult);\n      }\n    });\n  }\n\n  /**\n   * This method allows a developer to override the default service worker and\n   * instead use a custom service worker.\n   * @export\n   * @param {!ServiceWorkerRegistration} registration The service worker\n   * registration that should be used to receive the push messages.\n   */\n  useServiceWorker(registration) {\n    if (!(registration instanceof ServiceWorkerRegistration)) {\n      throw this.errorFactory_.create(Errors.codes.SW_REGISTRATION_EXPECTED);\n    }\n\n    if (typeof this.registrationToUse_ !== 'undefined') {\n      throw this.errorFactory_.create(Errors.codes.USE_SW_BEFORE_GET_TOKEN);\n    }\n\n    this.registrationToUse_ = registration;\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function(*)} nextOrObserver An observer object\n   * or a function triggered on message.\n   * @param {function(!Error)=} optError Optional A function triggered on\n   * message error.\n   * @param {function()=} optCompleted Optional function triggered when the\n   * observer is removed.\n   * @return {!function()} The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver, optError, optCompleted) {\n    return this.onMessage_(nextOrObserver, optError, optCompleted);\n  }\n\n  /**\n   * @export\n   * @param {!firebase.Observer|function()} nextOrObserver An observer object\n   * or a function triggered on token refresh.\n   * @param {function(!Error)=} optError Optional A function\n   * triggered on token refresh error.\n   * @param {function()=} optCompleted Optional function triggered when the\n   * observer is removed.\n   * @return {!function()} The unsubscribe function for the observer.\n   */\n  onTokenRefresh(nextOrObserver, optError, optCompleted) {\n    return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);\n  }\n\n  /**\n   * Given a registration, wait for the service worker it relates to\n   * become activer\n   * @private\n   * @param  {ServiceWorkerRegistration} registration Registration to wait\n   * for service worker to become active\n   * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker\n   * registration to become active\n   */\n  waitForRegistrationToActivate_(registration) {\n    const serviceWorker =\n      registration.installing || registration.waiting || registration.active;\n\n    return new Promise<ServiceWorkerRegistration>((resolve, reject) => {\n      if (!serviceWorker) {\n        // This is a rare scenario but has occured in firefox\n        reject(this.errorFactory_.create(Errors.codes.NO_SW_IN_REG));\n        return;\n      }\n      // Because the Promise function is called on next tick there is a\n      // small chance that the worker became active or redundant already.\n      if (serviceWorker.state === 'activated') {\n        resolve(registration);\n        return;\n      }\n\n      if (serviceWorker.state === 'redundant') {\n        reject(this.errorFactory_.create(Errors.codes.SW_REG_REDUNDANT));\n        return;\n      }\n\n      let stateChangeListener = () => {\n        if (serviceWorker.state === 'activated') {\n          resolve(registration);\n        } else if (serviceWorker.state === 'redundant') {\n          reject(this.errorFactory_.create(Errors.codes.SW_REG_REDUNDANT));\n        } else {\n          // Return early and wait to next state change\n          return;\n        }\n        serviceWorker.removeEventListener('statechange', stateChangeListener);\n      };\n      serviceWorker.addEventListener('statechange', stateChangeListener);\n    });\n  }\n\n  /**\n   * This will regiater the default service worker and return the registration\n   * @private\n   * @return {Promise<!ServiceWorkerRegistration>} The service worker\n   * registration to be used for the push service.\n   */\n  getSWRegistration_() {\n    if (this.registrationToUse_) {\n      return this.waitForRegistrationToActivate_(this.registrationToUse_);\n    }\n\n    // Make the registration null so we know useServiceWorker will not\n    // use a new service worker as registrationToUse_ is no longer undefined\n    this.registrationToUse_ = null;\n\n    return navigator.serviceWorker\n      .register(DefaultSW.path, {\n        scope: DefaultSW.scope\n      })\n      .catch(err => {\n        throw this.errorFactory_.create(\n          Errors.codes.FAILED_DEFAULT_REGISTRATION,\n          {\n            browserErrorMessage: err.message\n          }\n        );\n      })\n      .then(registration => {\n        return this.waitForRegistrationToActivate_(registration).then(() => {\n          this.registrationToUse_ = registration;\n\n          // We update after activation due to an issue with Firefox v49 where\n          // a race condition occassionally causes the service work to not\n          // install\n          registration.update();\n\n          return registration;\n        });\n      });\n  }\n\n  /**\n   * This method will set up a message listener to handle\n   * events from the service worker that should trigger\n   * events in the page.\n   *\n   * @private\n   */\n  setupSWMessageListener_() {\n    if (!('serviceWorker' in navigator)) {\n      return;\n    }\n\n    navigator.serviceWorker.addEventListener(\n      'message',\n      event => {\n        if (!event.data || !event.data[WorkerPageMessage.PARAMS.TYPE_OF_MSG]) {\n          // Not a message from FCM\n          return;\n        }\n\n        const workerPageMessage = event.data;\n        switch (workerPageMessage[WorkerPageMessage.PARAMS.TYPE_OF_MSG]) {\n          case WorkerPageMessage.TYPES_OF_MSG.PUSH_MSG_RECEIVED:\n          case WorkerPageMessage.TYPES_OF_MSG.NOTIFICATION_CLICKED:\n            const pushMessage =\n              workerPageMessage[WorkerPageMessage.PARAMS.DATA];\n            this.messageObserver_.next(pushMessage);\n            break;\n          default:\n            // Noop.\n            break;\n        }\n      },\n      false\n    );\n  }\n\n  /**\n   * Checks to see if the required API's are valid or not.\n   * @private\n   * @return {boolean} Returns true if the desired APIs are available.\n   */\n  isSupported_() {\n    return (\n      'serviceWorker' in navigator &&\n      'PushManager' in window &&\n      'Notification' in window &&\n      'fetch' in window &&\n      ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n      PushSubscription.prototype.hasOwnProperty('getKey')\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/controllers/window-controller.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nimport ControllerInterface from './controller-interface';\nimport Errors from '../models/errors';\nimport WorkerPageMessage from '../models/worker-page-message';\nimport FCMDetails from '../models/fcm-details';\n\nconst FCM_MSG = 'FCM_MSG';\n\nexport default class SWController extends ControllerInterface {\n  private bgMessageHandler_: (input: Object) => Promise<any>;\n\n  constructor(app) {\n    super(app);\n\n    self.addEventListener('push', e => this.onPush_(e), false);\n    self.addEventListener(\n      'pushsubscriptionchange',\n      e => this.onSubChange_(e),\n      false\n    );\n    self.addEventListener(\n      'notificationclick',\n      e => this.onNotificationClick_(e),\n      false\n    );\n\n    /**\n     * @private\n     * @type {function(Object)|null}\n     */\n    this.bgMessageHandler_ = null;\n  }\n\n  /**\n  * A handler for push events that shows notifications based on the content of\n  * the payload.\n  *\n  * The payload must be a JSON-encoded Object with a `notification` key. The\n  * value of the `notification` property will be used as the NotificationOptions\n  * object passed to showNotification. Additionally, the `title` property of the\n  * notification object will be used as the title.\n  *\n  * If there is no notification data in the payload then no notification will be\n  * shown.\n  * @private\n  */\n  onPush_(event) {\n    let msgPayload;\n    try {\n      msgPayload = event.data.json();\n    } catch (err) {\n      // Not JSON so not an FCM message\n      return;\n    }\n\n    const handleMsgPromise = this.hasVisibleClients_().then(\n      hasVisibleClients => {\n        if (hasVisibleClients) {\n          // Do not need to show a notification.\n          if (msgPayload.notification || this.bgMessageHandler_) {\n            // Send to page\n            return this.sendMessageToWindowClients_(msgPayload);\n          }\n          return;\n        }\n\n        const notificationDetails = this.getNotificationData_(msgPayload);\n        if (notificationDetails) {\n          const notificationTitle = notificationDetails.title || '';\n          return (self as any).registration.showNotification(\n            notificationTitle,\n            notificationDetails\n          );\n        } else if (this.bgMessageHandler_) {\n          return this.bgMessageHandler_(msgPayload);\n        }\n      }\n    );\n\n    event.waitUntil(handleMsgPromise);\n  }\n\n  /**\n  * @private\n  */\n  onSubChange_(event) {\n    const promiseChain = this.getToken().then(token => {\n      if (!token) {\n        // We can't resubscribe if we don't have an FCM token for this scope.\n        throw this.errorFactory_.create(\n          Errors.codes.NO_FCM_TOKEN_FOR_RESUBSCRIBE\n        );\n      }\n\n      let tokenDetails = null;\n      const tokenManager = this.getTokenManager();\n      return tokenManager\n        .getTokenDetailsFromToken(token)\n        .then(details => {\n          tokenDetails = details;\n          if (!tokenDetails) {\n            throw this.errorFactory_.create(Errors.codes.INVALID_SAVED_TOKEN);\n          }\n\n          // Attempt to get a new subscription\n          return (self as any).registration.pushManager.subscribe(\n            FCMDetails.SUBSCRIPTION_OPTIONS\n          );\n        })\n        .then(newSubscription => {\n          // Send new subscription to FCM.\n          return tokenManager.subscribeToFCM(\n            tokenDetails.fcmSenderId,\n            newSubscription,\n            tokenDetails.fcmPushSet\n          );\n        })\n        .catch(err => {\n          // The best thing we can do is log this to the terminal so\n          // developers might notice the error.\n          return tokenManager.deleteToken(tokenDetails.fcmToken).then(() => {\n            throw this.errorFactory_.create(\n              Errors.codes.UNABLE_TO_RESUBSCRIBE,\n              {\n                message: err\n              }\n            );\n          });\n        });\n    });\n\n    event.waitUntil(promiseChain);\n  }\n\n  /**\n  * @private\n  */\n  onNotificationClick_(event) {\n    if (\n      !(\n        event.notification &&\n        event.notification.data &&\n        event.notification.data[FCM_MSG]\n      )\n    ) {\n      // Not an FCM notification, do nothing.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n\n    event.notification.close();\n\n    const msgPayload = event.notification.data[FCM_MSG];\n    const clickAction = msgPayload['notification']['click_action'];\n    if (!clickAction) {\n      // Nothing to do.\n      return;\n    }\n\n    const promiseChain = this.getWindowClient_(clickAction)\n      .then(windowClient => {\n        if (!windowClient) {\n          // Unable to find window client so need to open one.\n          return (self as any).clients.openWindow(clickAction);\n        }\n        return windowClient;\n      })\n      .then(windowClient => {\n        if (!windowClient) {\n          // Window Client will not be returned if it's for a third party origin.\n          return;\n        }\n\n        // Delete notification data from payload before sending to the page.\n        const notificationData = msgPayload['notification'];\n        delete msgPayload['notification'];\n\n        const internalMsg = WorkerPageMessage.createNewMsg(\n          WorkerPageMessage.TYPES_OF_MSG.NOTIFICATION_CLICKED,\n          msgPayload\n        );\n        // Attempt to send a message to the client to handle the data\n        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\n        return this.attemptToMessageClient_(windowClient, internalMsg);\n      });\n\n    event.waitUntil(promiseChain);\n  }\n\n  /**\n   * @private\n   * @param {Object} msgPayload\n   * @return {NotificationOptions|undefined}\n   */\n  getNotificationData_(msgPayload) {\n    if (!msgPayload) {\n      return;\n    }\n\n    if (typeof msgPayload.notification !== 'object') {\n      return;\n    }\n\n    const notificationInformation = Object.assign({}, msgPayload.notification);\n    // Put the message payload under FCM_MSG name so we can identify the\n    // notification as being an FCM notification vs a notification from\n    // somewhere else (i.e. normal web push or developer generated\n    // notification).\n    notificationInformation['data'] = {\n      [FCM_MSG]: msgPayload\n    };\n\n    return notificationInformation;\n  }\n\n  /**\n   * Calling setBackgroundMessageHandler will opt in to some specific\n   * behaviours.\n   * 1.) If a notification doesn't need to be shown due to a window already\n   * being visible, then push messages will be sent to the page.\n   * 2.) If a notification needs to be shown, and the message contains no\n   * notification data this method will be called\n   * and the promise it returns will be passed to event.waitUntil.\n   * If you do not set this callback then all push messages will let and the\n   * developer can handle them in a their own 'push' event callback\n   * @export\n   * @param {function(Object)} callback The callback to be called when a push\n   * message is received and a notification must be shown. The callback will\n   * be given the data from the push message.\n   */\n  setBackgroundMessageHandler(callback) {\n    if (callback && typeof callback !== 'function') {\n      throw this.errorFactory_.create(\n        Errors.codes.BG_HANDLER_FUNCTION_EXPECTED\n      );\n    }\n\n    this.bgMessageHandler_ = callback;\n  }\n\n  /**\n   * @private\n   * @param {string} url The URL to look for when focusing a client.\n   * @return {Object} Returns an existing window client or a newly opened\n   * WindowClient.\n   */\n  getWindowClient_(url) {\n    // Use URL to normalize the URL when comparing to windowClients.\n    // This at least handles whether to include trailing slashes or not\n    const parsedURL = new URL(url).href;\n\n    return (self as any).clients\n      .matchAll({\n        type: 'window',\n        includeUncontrolled: true\n      })\n      .then(clientList => {\n        let suitableClient = null;\n        for (let i = 0; i < clientList.length; i++) {\n          const parsedClientUrl = new URL(clientList[i].url).href;\n          if (parsedClientUrl === parsedURL) {\n            suitableClient = clientList[i];\n            break;\n          }\n        }\n\n        if (suitableClient) {\n          suitableClient.focus();\n          return suitableClient;\n        }\n      });\n  }\n\n  /**\n   * This message will attempt to send the message to a window client.\n   * @private\n   * @param {Object} client The WindowClient to send the message to.\n   * @param {Object} message The message to send to the client.\n   * @returns {Promise} Returns a promise that resolves after sending the\n   * message. This does not guarantee that the message was successfully\n   * received.\n   */\n  attemptToMessageClient_(client, message) {\n    return new Promise((resolve, reject) => {\n      if (!client) {\n        return reject(\n          this.errorFactory_.create(Errors.codes.NO_WINDOW_CLIENT_TO_MSG)\n        );\n      }\n\n      client.postMessage(message);\n      resolve();\n    });\n  }\n\n  /**\n   * @private\n   * @returns {Promise<boolean>} If there is currently a visible WindowClient,\n   * this method will resolve to true, otherwise false.\n   */\n  hasVisibleClients_() {\n    return (self as any).clients\n      .matchAll({\n        type: 'window',\n        includeUncontrolled: true\n      })\n      .then(clientList => {\n        return clientList.some(client => client.visibilityState === 'visible');\n      });\n  }\n\n  /**\n   * @private\n   * @param {Object} msgPayload The data from the push event that should be sent\n   * to all available pages.\n   * @returns {Promise} Returns a promise that resolves once the message\n   * has been sent to all WindowClients.\n   */\n  sendMessageToWindowClients_(msgPayload) {\n    return (self as any).clients\n      .matchAll({\n        type: 'window',\n        includeUncontrolled: true\n      })\n      .then(clientList => {\n        const internalMsg = WorkerPageMessage.createNewMsg(\n          WorkerPageMessage.TYPES_OF_MSG.PUSH_MSG_RECEIVED,\n          msgPayload\n        );\n\n        return Promise.all(\n          clientList.map(client => {\n            return this.attemptToMessageClient_(client, internalMsg);\n          })\n        );\n      });\n  }\n\n  /**\n   * This will register the default service worker and return the registration.\n   * @private\n   * @return {Promise<!ServiceWorkerRegistration>} The service worker\n   * registration to be used for the push service.\n   */\n  getSWRegistration_() {\n    return Promise.resolve((self as any).registration);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/messaging/controllers/sw-controller.ts","try {\n          webpackJsonpFirebase([2],{\n\n/***/ 60:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./src/storage/implementation/constants.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n/**\r\n * Domain and scheme for API calls.\r\n */\nvar domainBase = 'https://firebasestorage.googleapis.com';\n/**\r\n * Domain and scheme for object downloads.\r\n */\nvar downloadBase = 'https://firebasestorage.googleapis.com';\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\nvar apiBaseUrl = '/v0';\n/**\r\n * Base URL for upload calls to the API.\r\n */\nvar apiUploadBaseUrl = '/v0';\nfunction setDomainBase(domainBase) {\n  domainBase = domainBase;\n}\nvar configOption = 'storageBucket';\n/**\r\n * 1 minute\r\n */\nvar shortMaxOperationRetryTime = 1 * 60 * 1000;\n/**\r\n * 2 minutes\r\n */\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n */\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\nvar minSafeInteger = -9007199254740991;\n// CONCATENATED MODULE: ./src/storage/implementation/error.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError = /** @class */function () {\n    function FirebaseStorageError(code, message) {\n        this.code_ = prependCode(code);\n        this.message_ = 'Firebase Storage: ' + message;\n        this.serverResponse_ = null;\n        this.name_ = 'FirebaseError';\n    }\n    FirebaseStorageError.prototype.codeProp = function () {\n        return this.code;\n    };\n    FirebaseStorageError.prototype.codeEquals = function (code) {\n        return prependCode(code) === this.codeProp();\n    };\n    FirebaseStorageError.prototype.serverResponseProp = function () {\n        return this.serverResponse_;\n    };\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n        this.serverResponse_ = serverResponse;\n    };\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n        get: function get() {\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n        get: function get() {\n            return this.code_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n        get: function get() {\n            return this.message_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n        get: function get() {\n            return this.serverResponse_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FirebaseStorageError;\n}();\n\nvar errors = {};\nvar Code = {\n    // Shared between all platforms\n    UNKNOWN: 'unknown',\n    OBJECT_NOT_FOUND: 'object-not-found',\n    BUCKET_NOT_FOUND: 'bucket-not-found',\n    PROJECT_NOT_FOUND: 'project-not-found',\n    QUOTA_EXCEEDED: 'quota-exceeded',\n    UNAUTHENTICATED: 'unauthenticated',\n    UNAUTHORIZED: 'unauthorized',\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n    INVALID_CHECKSUM: 'invalid-checksum',\n    CANCELED: 'canceled',\n    // JS specific\n    INVALID_EVENT_NAME: 'invalid-event-name',\n    INVALID_URL: 'invalid-url',\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n    NO_DOWNLOAD_URL: 'no-download-url',\n    INVALID_ARGUMENT: 'invalid-argument',\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n    APP_DELETED: 'app-deleted',\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\n    INVALID_FORMAT: 'invalid-format',\n    INTERNAL_ERROR: 'internal-error'\n};\nfunction prependCode(code) {\n    return 'storage/' + code;\n}\nfunction unknown() {\n    var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n    return new FirebaseStorageError(Code.UNKNOWN, message);\n}\nfunction objectNotFound(path) {\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\nfunction bucketNotFound(bucket) {\n    return new FirebaseStorageError(Code.BUCKET_NOT_FOUND, \"Bucket '\" + bucket + \"' does not exist.\");\n}\nfunction projectNotFound(project) {\n    return new FirebaseStorageError(Code.PROJECT_NOT_FOUND, \"Project '\" + project + \"' does not exist.\");\n}\nfunction quotaExceeded(bucket) {\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\nfunction unauthenticated() {\n    var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\nfunction unauthorized(path) {\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\nfunction retryLimitExceeded() {\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\nfunction invalidChecksum(path, checksum, calculated) {\n    return new FirebaseStorageError(Code.INVALID_CHECKSUM, \"Uploaded/downloaded object '\" + path + \"' has checksum '\" + checksum + \"' which does not match '\" + calculated + \"'. Please retry the upload/download.\");\n}\nfunction error_canceled() {\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\nfunction invalidEventName(name) {\n    return new FirebaseStorageError(Code.INVALID_EVENT_NAME, \"Invalid event name '\" + name + \"'.\");\n}\nfunction invalidUrl(url) {\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\nfunction invalidDefaultBucket(bucket) {\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\nfunction noDefaultBucket() {\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + configOption + \"' property when initializing the app?\");\n}\nfunction cannotSliceBlob() {\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\nfunction serverFileWrongSize() {\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\nfunction noDownloadURL() {\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\nfunction invalidArgument(index, fnName, message) {\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n    var countPart;\n    var plural;\n    if (argMin === argMax) {\n        countPart = argMin;\n        plural = argMin === 1 ? 'argument' : 'arguments';\n    } else {\n        countPart = 'between ' + argMin + ' and ' + argMax;\n        plural = 'arguments';\n    }\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\nfunction appDeleted() {\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\nfunction invalidRootOperation(name) {\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\nfunction invalidFormat(format, message) {\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\nfunction internalError(message) {\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n// CONCATENATED MODULE: ./src/storage/implementation/string.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar StringFormat = {\n    RAW: 'raw',\n    BASE64: 'base64',\n    BASE64URL: 'base64url',\n    DATA_URL: 'data_url'\n};\nfunction formatValidator(stringFormat) {\n    switch (stringFormat) {\n        case StringFormat.RAW:\n        case StringFormat.BASE64:\n        case StringFormat.BASE64URL:\n        case StringFormat.DATA_URL:\n            return;\n        default:\n            throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n    }\n}\n/**\r\n * @struct\r\n */\nvar StringData = /** @class */function () {\n    function StringData(data, opt_contentType) {\n        this.data = data;\n        this.contentType = opt_contentType || null;\n    }\n    return StringData;\n}();\n\nfunction dataFromString(format, string) {\n    switch (format) {\n        case StringFormat.RAW:\n            return new StringData(utf8Bytes_(string));\n        case StringFormat.BASE64:\n        case StringFormat.BASE64URL:\n            return new StringData(base64Bytes_(format, string));\n        case StringFormat.DATA_URL:\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\n    }\n    // assert(false);\n    throw unknown();\n}\nfunction utf8Bytes_(string) {\n    var b = [];\n    for (var i = 0; i < string.length; i++) {\n        var c = string.charCodeAt(i);\n        if (c <= 127) {\n            b.push(c);\n        } else {\n            if (c <= 2047) {\n                b.push(192 | c >> 6, 128 | c & 63);\n            } else {\n                if ((c & 64512) == 55296) {\n                    // The start of a surrogate pair.\n                    var valid = i < string.length - 1 && (string.charCodeAt(i + 1) & 64512) == 56320;\n                    if (!valid) {\n                        // The second surrogate wasn't there.\n                        b.push(239, 191, 189);\n                    } else {\n                        var hi = c;\n                        var lo = string.charCodeAt(++i);\n                        c = 65536 | (hi & 1023) << 10 | lo & 1023;\n                        b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n                    }\n                } else {\n                    if ((c & 64512) == 56320) {\n                        // Invalid low surrogate.\n                        b.push(239, 191, 189);\n                    } else {\n                        b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n                    }\n                }\n            }\n        }\n    }\n    return new Uint8Array(b);\n}\nfunction percentEncodedBytes_(string) {\n    var decoded;\n    try {\n        decoded = decodeURIComponent(string);\n    } catch (e) {\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n    }\n    return utf8Bytes_(decoded);\n}\nfunction base64Bytes_(format, string) {\n    switch (format) {\n        case StringFormat.BASE64:\n            {\n                var hasMinus = string.indexOf('-') !== -1;\n                var hasUnder = string.indexOf('_') !== -1;\n                if (hasMinus || hasUnder) {\n                    var invalidChar = hasMinus ? '-' : '_';\n                    throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n                }\n                break;\n            }\n        case StringFormat.BASE64URL:\n            {\n                var hasPlus = string.indexOf('+') !== -1;\n                var hasSlash = string.indexOf('/') !== -1;\n                if (hasPlus || hasSlash) {\n                    var invalidChar = hasPlus ? '+' : '/';\n                    throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n                }\n                string = string.replace(/-/g, '+').replace(/_/g, '/');\n                break;\n            }\n    }\n    var bytes;\n    try {\n        bytes = atob(string);\n    } catch (e) {\n        throw invalidFormat(format, 'Invalid character found');\n    }\n    var array = new Uint8Array(bytes.length);\n    for (var i = 0; i < bytes.length; i++) {\n        array[i] = bytes.charCodeAt(i);\n    }\n    return array;\n}\n/**\r\n * @struct\r\n */\nvar string_DataURLParts = /** @class */function () {\n    function DataURLParts(dataURL) {\n        this.base64 = false;\n        this.contentType = null;\n        var matches = dataURL.match(/^data:([^,]+)?,/);\n        if (matches === null) {\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n        }\n        var middle = matches[1] || null;\n        if (middle != null) {\n            this.base64 = endsWith(middle, ';base64');\n            this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n        }\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n    }\n    return DataURLParts;\n}();\nfunction dataURLBytes_(string) {\n    var parts = new string_DataURLParts(string);\n    if (parts.base64) {\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\n    } else {\n        return percentEncodedBytes_(parts.rest);\n    }\n}\nfunction dataURLContentType_(string) {\n    var parts = new string_DataURLParts(string);\n    return parts.contentType;\n}\nfunction endsWith(s, end) {\n    var longEnough = s.length >= end.length;\n    if (!longEnough) {\n        return false;\n    }\n    return s.substring(s.length - end.length) === end;\n}\n// CONCATENATED MODULE: ./src/storage/implementation/taskenums.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TaskEvent = {\n    /** Triggered whenever the task changes or progress is updated. */\n    STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n    RUNNING: 'running',\n    PAUSING: 'pausing',\n    PAUSED: 'paused',\n    SUCCESS: 'success',\n    CANCELING: 'canceling',\n    CANCELED: 'canceled',\n    ERROR: 'error'\n};\nvar TaskState = {\n    /** The task is currently transferring data. */\n    RUNNING: 'running',\n    /** The task was paused by the user. */\n    PAUSED: 'paused',\n    /** The task completed successfully. */\n    SUCCESS: 'success',\n    /** The task was canceled. */\n    CANCELED: 'canceled',\n    /** The task failed with an error. */\n    ERROR: 'error'\n};\nfunction taskStateFromInternalTaskState(state) {\n    switch (state) {\n        case InternalTaskState.RUNNING:\n        case InternalTaskState.PAUSING:\n        case InternalTaskState.CANCELING:\n            return TaskState.RUNNING;\n        case InternalTaskState.PAUSED:\n            return TaskState.PAUSED;\n        case InternalTaskState.SUCCESS:\n            return TaskState.SUCCESS;\n        case InternalTaskState.CANCELED:\n            return TaskState.CANCELED;\n        case InternalTaskState.ERROR:\n            return TaskState.ERROR;\n        default:\n            // TODO(andysoto): assert(false);\n            return TaskState.ERROR;\n    }\n}\n// CONCATENATED MODULE: ./src/storage/implementation/object.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\nfunction contains(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction forEach(obj, f) {\n    for (var key in obj) {\n        if (contains(obj, key)) {\n            f(key, obj[key]);\n        }\n    }\n}\nfunction clone(obj) {\n    if (obj == null) {\n        return {};\n    }\n    var c = {};\n    forEach(obj, function (key, val) {\n        c[key] = val;\n    });\n    return c;\n}\n// EXTERNAL MODULE: ./src/utils/promise.ts\nvar promise = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/storage/implementation/promise_external.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\n\nfunction make(resolver) {\n  return new promise[\"b\" /* PromiseImpl */](resolver);\n}\n/**\r\n * @template T\r\n */\nfunction promise_external_resolve(value) {\n  return promise[\"b\" /* PromiseImpl */].resolve(value);\n}\nfunction promise_external_reject(error) {\n  return promise[\"b\" /* PromiseImpl */].reject(error);\n}\n// CONCATENATED MODULE: ./src/storage/implementation/type.ts\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\nfunction isDef(p) {\n    return p != null;\n}\nfunction isJustDef(p) {\n    return p !== void 0;\n}\nfunction isFunction(p) {\n    return typeof p === 'function';\n}\nfunction isObject(p) {\n    return (typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object';\n}\nfunction isNonNullObject(p) {\n    return isObject(p) && p !== null;\n}\nfunction isNonArrayObject(p) {\n    return isObject(p) && !Array.isArray(p);\n}\nfunction isString(p) {\n    return typeof p === 'string' || p instanceof String;\n}\nfunction isNumber(p) {\n    return typeof p === 'number' || p instanceof Number;\n}\nfunction isNativeBlob(p) {\n    return isNativeBlobDefined() && p instanceof Blob;\n}\nfunction isNativeBlobDefined() {\n    return typeof Blob !== 'undefined';\n}\n// CONCATENATED MODULE: ./src/storage/implementation/xhrio.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @enum{number}\r\n */\nvar ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n// CONCATENATED MODULE: ./src/storage/implementation/xhrio_network.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\nvar xhrio_network_NetworkXhrIo = /** @class */function () {\n    function NetworkXhrIo() {\n        var _this = this;\n        this.sent_ = false;\n        this.xhr_ = new XMLHttpRequest();\n        this.errorCode_ = ErrorCode.NO_ERROR;\n        this.sendPromise_ = make(function (resolve, reject) {\n            _this.xhr_.addEventListener('abort', function (event) {\n                _this.errorCode_ = ErrorCode.ABORT;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('error', function (event) {\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('load', function (event) {\n                resolve(_this);\n            });\n        });\n    }\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\n        var _this = this;\n        if (this.sent_) {\n            throw internalError('cannot .send() more than once');\n        }\n        this.sent_ = true;\n        this.xhr_.open(method, url, true);\n        if (isDef(opt_headers)) {\n            var headers = opt_headers;\n            forEach(headers, function (key, val) {\n                _this.xhr_.setRequestHeader(key, val.toString());\n            });\n        }\n        if (isDef(opt_body)) {\n            this.xhr_.send(opt_body);\n        } else {\n            this.xhr_.send();\n        }\n        return this.sendPromise_;\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.getErrorCode = function () {\n        if (!this.sent_) {\n            throw internalError('cannot .getErrorCode() before sending');\n        }\n        return this.errorCode_;\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.getStatus = function () {\n        if (!this.sent_) {\n            throw internalError('cannot .getStatus() before sending');\n        }\n        try {\n            return this.xhr_.status;\n        } catch (e) {\n            return -1;\n        }\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.getResponseText = function () {\n        if (!this.sent_) {\n            throw internalError('cannot .getResponseText() before sending');\n        }\n        return this.xhr_.responseText;\n    };\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.abort = function () {\n        this.xhr_.abort();\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\n        return this.xhr_.getResponseHeader(header);\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n        if (isDef(this.xhr_.upload)) {\n            this.xhr_.upload.addEventListener('progress', listener);\n        }\n    };\n    /**\r\n     * @override\r\n     */\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n        if (isDef(this.xhr_.upload)) {\n            this.xhr_.upload.removeEventListener('progress', listener);\n        }\n    };\n    return NetworkXhrIo;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/xhriopool.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\nvar xhriopool_XhrIoPool = /** @class */function () {\n  function XhrIoPool() {}\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new xhrio_network_NetworkXhrIo();\n  };\n  return XhrIoPool;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/json.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\nfunction jsonObjectOrNull(s) {\n    var obj;\n    try {\n        obj = JSON.parse(s);\n    } catch (e) {\n        return null;\n    }\n    if (isNonArrayObject(obj)) {\n        return obj;\n    } else {\n        return null;\n    }\n}\n// CONCATENATED MODULE: ./src/storage/implementation/location.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Functionality related to the parsing/composition of bucket/\r\n * object location.\r\n */\n\n/**\r\n * @struct\r\n */\nvar location_Location = /** @class */function () {\n    function Location(bucket, path) {\n        this.bucket = bucket;\n        this.path_ = path;\n    }\n    Object.defineProperty(Location.prototype, \"path\", {\n        get: function get() {\n            return this.path_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Location.prototype.fullServerUrl = function () {\n        var encode = encodeURIComponent;\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n    };\n    Location.prototype.bucketOnlyServerUrl = function () {\n        var encode = encodeURIComponent;\n        return '/b/' + encode(this.bucket) + '/o';\n    };\n    Location.makeFromBucketSpec = function (bucketString) {\n        var bucketLocation;\n        try {\n            bucketLocation = Location.makeFromUrl(bucketString);\n        } catch (e) {\n            // Not valid URL, use as-is. This lets you put bare bucket names in\n            // config.\n            return new Location(bucketString, '');\n        }\n        if (bucketLocation.path === '') {\n            return bucketLocation;\n        } else {\n            throw invalidDefaultBucket(bucketString);\n        }\n    };\n    Location.makeFromUrl = function (url) {\n        var location = null;\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n        function gsModify(loc) {\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\n                loc.path_ = loc.path_.slice(0, -1);\n            }\n        }\n        var gsPath = '(/(.*))?$';\n        var path = '(/([^?#]*).*)?$';\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n        var gsIndices = { bucket: 1, path: 3 };\n        function httpModify(loc) {\n            loc.path_ = decodeURIComponent(loc.path);\n        }\n        var version = 'v[A-Za-z0-9_]+';\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' + version + '/b/' + bucketDomain + '/o' + path, 'i');\n        var httpIndices = { bucket: 1, path: 3 };\n        var groups = [{ regex: gsRegex, indices: gsIndices, postModify: gsModify }, { regex: httpRegex, indices: httpIndices, postModify: httpModify }];\n        for (var i = 0; i < groups.length; i++) {\n            var group = groups[i];\n            var captures = group.regex.exec(url);\n            if (captures) {\n                var bucketValue = captures[group.indices.bucket];\n                var pathValue = captures[group.indices.path];\n                if (!pathValue) {\n                    pathValue = '';\n                }\n                location = new Location(bucketValue, pathValue);\n                group.postModify(location);\n                break;\n            }\n        }\n        if (location == null) {\n            throw invalidUrl(url);\n        }\n        return location;\n    };\n    return Location;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/path.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n/**\r\n * @return Null if the path is already at the root.\r\n */\nfunction path_parent(path) {\n    if (path.length == 0) {\n        return null;\n    }\n    var index = path.lastIndexOf('/');\n    if (index === -1) {\n        return '';\n    }\n    var newPath = path.slice(0, index);\n    return newPath;\n}\nfunction child(path, childPath) {\n    var canonicalChildPath = childPath.split('/').filter(function (component) {\n        return component.length > 0;\n    }).join('/');\n    if (path.length === 0) {\n        return canonicalChildPath;\n    } else {\n        return path + '/' + canonicalChildPath;\n    }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\nfunction lastComponent(path) {\n    var index = path.lastIndexOf('/', path.length - 2);\n    if (index === -1) {\n        return path;\n    } else {\n        return path.slice(index + 1);\n    }\n}\n// CONCATENATED MODULE: ./src/storage/implementation/url.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Functions to create and manipulate URLs for the server API.\r\n */\n\n\nfunction makeNormalUrl(urlPart) {\n    return domainBase + apiBaseUrl + urlPart;\n}\nfunction makeDownloadUrl(urlPart) {\n    return downloadBase + apiBaseUrl + urlPart;\n}\nfunction makeUploadUrl(urlPart) {\n    return domainBase + apiUploadBaseUrl + urlPart;\n}\nfunction makeQueryString(params) {\n    var encode = encodeURIComponent;\n    var queryPart = '?';\n    forEach(params, function (key, val) {\n        var nextPart = encode(key) + '=' + encode(val);\n        queryPart = queryPart + nextPart + '&';\n    });\n    // Chop off the extra '&' or '?' on the end\n    queryPart = queryPart.slice(0, -1);\n    return queryPart;\n}\n// CONCATENATED MODULE: ./src/storage/implementation/metadata.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\nfunction noXform_(metadata, value) {\n    return value;\n}\n/**\r\n * @struct\r\n */\nvar Mapping = /** @class */function () {\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\n        this.server = server;\n        this.local = opt_local || server;\n        this.writable = !!opt_writable;\n        this.xform = opt_xform || noXform_;\n    }\n    return Mapping;\n}();\n\nvar mappings_ = null;\nfunction xformPath(fullPath) {\n    var valid = isString(fullPath);\n    if (!valid || fullPath.length < 2) {\n        return fullPath;\n    } else {\n        fullPath = fullPath;\n        return lastComponent(fullPath);\n    }\n}\nfunction getMappings() {\n    if (mappings_) {\n        return mappings_;\n    }\n    var mappings = [];\n    mappings.push(new Mapping('bucket'));\n    mappings.push(new Mapping('generation'));\n    mappings.push(new Mapping('metageneration'));\n    mappings.push(new Mapping('name', 'fullPath', true));\n    function mappingsXformPath(metadata, fullPath) {\n        return xformPath(fullPath);\n    }\n    var nameMapping = new Mapping('name');\n    nameMapping.xform = mappingsXformPath;\n    mappings.push(nameMapping);\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\n    function xformSize(metadata, size) {\n        if (isDef(size)) {\n            return +size;\n        } else {\n            return size;\n        }\n    }\n    var sizeMapping = new Mapping('size');\n    sizeMapping.xform = xformSize;\n    mappings.push(sizeMapping);\n    mappings.push(new Mapping('timeCreated'));\n    mappings.push(new Mapping('updated'));\n    mappings.push(new Mapping('md5Hash', null, true));\n    mappings.push(new Mapping('cacheControl', null, true));\n    mappings.push(new Mapping('contentDisposition', null, true));\n    mappings.push(new Mapping('contentEncoding', null, true));\n    mappings.push(new Mapping('contentLanguage', null, true));\n    mappings.push(new Mapping('contentType', null, true));\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\n    /**\r\n     * Transforms a comma-separated string of tokens into a list of download\r\n     * URLs.\r\n     */\n    function xformTokens(metadata, tokens) {\n        var valid = isString(tokens) && tokens.length > 0;\n        if (!valid) {\n            // This can happen if objects are uploaded through GCS and retrieved\n            // through list, so we don't want to throw an Error.\n            return [];\n        }\n        var encode = encodeURIComponent;\n        var tokensList = tokens.split(',');\n        var urls = tokensList.map(function (token) {\n            var bucket = metadata['bucket'];\n            var path = metadata['fullPath'];\n            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n            var base = makeDownloadUrl(urlPart);\n            var queryString = makeQueryString({\n                alt: 'media',\n                token: token\n            });\n            return base + queryString;\n        });\n        return urls;\n    }\n    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));\n    mappings_ = mappings;\n    return mappings_;\n}\nfunction addRef(metadata, authWrapper) {\n    function generateRef() {\n        var bucket = metadata['bucket'];\n        var path = metadata['fullPath'];\n        var loc = new location_Location(bucket, path);\n        return authWrapper.makeStorageReference(loc);\n    }\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\nfunction fromResource(authWrapper, resource, mappings) {\n    var metadata = {};\n    metadata['type'] = 'file';\n    var len = mappings.length;\n    for (var i = 0; i < len; i++) {\n        var mapping = mappings[i];\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n    }\n    addRef(metadata, authWrapper);\n    return metadata;\n}\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n    var obj = jsonObjectOrNull(resourceString);\n    if (obj === null) {\n        return null;\n    }\n    var resource = obj;\n    return fromResource(authWrapper, resource, mappings);\n}\nfunction toResourceString(metadata, mappings) {\n    var resource = {};\n    var len = mappings.length;\n    for (var i = 0; i < len; i++) {\n        var mapping = mappings[i];\n        if (mapping.writable) {\n            resource[mapping.server] = metadata[mapping.local];\n        }\n    }\n    return JSON.stringify(resource);\n}\nfunction metadataValidator(p) {\n    var validType = p && isObject(p);\n    if (!validType) {\n        throw 'Expected Metadata object.';\n    }\n    for (var key in p) {\n        var val = p[key];\n        if (key === 'customMetadata') {\n            if (!isObject(val)) {\n                throw 'Expected object for \\'customMetadata\\' mapping.';\n            }\n        } else {\n            if (isNonNullObject(val)) {\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\n            }\n        }\n    }\n}\n// CONCATENATED MODULE: ./src/storage/implementation/args.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\nfunction validate(name, specs, passed) {\n    var minArgs = specs.length;\n    var maxArgs = specs.length;\n    for (var i = 0; i < specs.length; i++) {\n        if (specs[i].optional) {\n            minArgs = i;\n            break;\n        }\n    }\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n    if (!validLength) {\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n    }\n    for (var i = 0; i < passed.length; i++) {\n        try {\n            specs[i].validator(passed[i]);\n        } catch (e) {\n            if (e instanceof Error) {\n                throw invalidArgument(i, name, e.message);\n            } else {\n                throw invalidArgument(i, name, e);\n            }\n        }\n    }\n}\n/**\r\n * @struct\r\n */\nvar args_ArgSpec = /** @class */function () {\n    function ArgSpec(validator, opt_optional) {\n        var self = this;\n        this.validator = function (p) {\n            if (self.optional && !isJustDef(p)) {\n                return;\n            }\n            validator(p);\n        };\n        this.optional = !!opt_optional;\n    }\n    return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n    return function (p) {\n        v1(p);\n        v2(p);\n    };\n}\nfunction stringSpec(opt_validator, opt_optional) {\n    function stringValidator(p) {\n        if (!isString(p)) {\n            throw 'Expected string.';\n        }\n    }\n    var validator;\n    if (opt_validator) {\n        validator = and_(stringValidator, opt_validator);\n    } else {\n        validator = stringValidator;\n    }\n    return new args_ArgSpec(validator, opt_optional);\n}\nfunction uploadDataSpec() {\n    function validator(p) {\n        var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n        if (!valid) {\n            throw 'Expected Blob or File.';\n        }\n    }\n    return new args_ArgSpec(validator);\n}\nfunction metadataSpec(opt_optional) {\n    return new args_ArgSpec(metadataValidator, opt_optional);\n}\nfunction nonNegativeNumberSpec() {\n    function validator(p) {\n        var valid = isNumber(p) && p >= 0;\n        if (!valid) {\n            throw 'Expected a number 0 or greater.';\n        }\n    }\n    return new args_ArgSpec(validator);\n}\nfunction looseObjectSpec(opt_validator, opt_optional) {\n    function validator(p) {\n        var isLooseObject = p === null || isDef(p) && p instanceof Object;\n        if (!isLooseObject) {\n            throw 'Expected an Object.';\n        }\n        if (opt_validator !== undefined && opt_validator !== null) {\n            opt_validator(p);\n        }\n    }\n    return new args_ArgSpec(validator, opt_optional);\n}\nfunction nullFunctionSpec(opt_optional) {\n    function validator(p) {\n        var valid = p === null || isFunction(p);\n        if (!valid) {\n            throw 'Expected a Function.';\n        }\n    }\n    return new args_ArgSpec(validator, opt_optional);\n}\n// CONCATENATED MODULE: ./src/storage/implementation/fs.ts\n\nfunction getBlobBuilder() {\n    if (typeof BlobBuilder !== 'undefined') {\n        return BlobBuilder;\n    } else if (typeof WebKitBlobBuilder !== 'undefined') {\n        return WebKitBlobBuilder;\n    } else {\n        return undefined;\n    }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\nfunction getBlob() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var BlobBuilder = getBlobBuilder();\n    if (BlobBuilder !== undefined) {\n        var bb = new BlobBuilder();\n        for (var i = 0; i < var_args.length; i++) {\n            bb.append(var_args[i]);\n        }\n        return bb.getBlob();\n    } else {\n        if (isNativeBlobDefined()) {\n            return new Blob(var_args);\n        } else {\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\n        }\n    }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\nfunction sliceBlob(blob, start, end) {\n    if (blob.webkitSlice) {\n        return blob.webkitSlice(start, end);\n    } else if (blob.mozSlice) {\n        return blob.mozSlice(start, end);\n    } else if (blob.slice) {\n        return blob.slice(start, end);\n    }\n    return null;\n}\n// CONCATENATED MODULE: ./src/storage/implementation/blob.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @file Provides a Blob-like wrapper for various binary types (including the\r\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\r\n * making uploads possible in environments without the native Blob type.\r\n */\n\n\n\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\nvar blob_FbsBlob = /** @class */function () {\n    function FbsBlob(data, opt_elideCopy) {\n        var size = 0;\n        var blobType = '';\n        if (isNativeBlob(data)) {\n            this.data_ = data;\n            size = data.size;\n            blobType = data.type;\n        } else if (data instanceof ArrayBuffer) {\n            if (opt_elideCopy) {\n                this.data_ = new Uint8Array(data);\n            } else {\n                this.data_ = new Uint8Array(data.byteLength);\n                this.data_.set(new Uint8Array(data));\n            }\n            size = this.data_.length;\n        } else if (data instanceof Uint8Array) {\n            if (opt_elideCopy) {\n                this.data_ = data;\n            } else {\n                this.data_ = new Uint8Array(data.length);\n                this.data_.set(data);\n            }\n            size = data.length;\n        }\n        this.size_ = size;\n        this.type_ = blobType;\n    }\n    FbsBlob.prototype.size = function () {\n        return this.size_;\n    };\n    FbsBlob.prototype.type = function () {\n        return this.type_;\n    };\n    FbsBlob.prototype.slice = function (startByte, endByte) {\n        if (isNativeBlob(this.data_)) {\n            var realBlob = this.data_;\n            var sliced = sliceBlob(realBlob, startByte, endByte);\n            if (sliced === null) {\n                return null;\n            }\n            return new FbsBlob(sliced);\n        } else {\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n            return new FbsBlob(slice, true);\n        }\n    };\n    FbsBlob.getBlob = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        if (isNativeBlobDefined()) {\n            var blobby = var_args.map(function (val) {\n                if (val instanceof FbsBlob) {\n                    return val.data_;\n                } else {\n                    return val;\n                }\n            });\n            return new FbsBlob(getBlob.apply(null, blobby));\n        } else {\n            var uint8Arrays = var_args.map(function (val) {\n                if (isString(val)) {\n                    return dataFromString(StringFormat.RAW, val).data;\n                } else {\n                    // Blobs don't exist, so this has to be a Uint8Array.\n                    return val.data_;\n                }\n            });\n            var finalLength_1 = 0;\n            uint8Arrays.forEach(function (array) {\n                finalLength_1 += array.byteLength;\n            });\n            var merged_1 = new Uint8Array(finalLength_1);\n            var index_1 = 0;\n            uint8Arrays.forEach(function (array) {\n                for (var i = 0; i < array.length; i++) {\n                    merged_1[index_1++] = array[i];\n                }\n            });\n            return new FbsBlob(merged_1, true);\n        }\n    };\n    FbsBlob.prototype.uploadData = function () {\n        return this.data_;\n    };\n    return FbsBlob;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/array.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\nfunction array_contains(array, elem) {\n  return array.indexOf(elem) !== -1;\n}\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\nfunction array_clone(arraylike) {\n  return Array.prototype.slice.call(arraylike);\n}\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\nfunction remove(array, elem) {\n  var i = array.indexOf(elem);\n  if (i !== -1) {\n    array.splice(i, 1);\n  }\n}\n// CONCATENATED MODULE: ./src/storage/implementation/requestinfo.ts\nvar RequestInfo = /** @class */function () {\n    function RequestInfo(url, method,\n    /**\r\n       * Returns the value with which to resolve the request's promise. Only called\r\n       * if the request is successful. Throw from this function to reject the\r\n       * returned Request's promise with the thrown error.\r\n       * Note: The XhrIo passed to this function may be reused after this callback\r\n       * returns. Do not keep a reference to it in any way.\r\n       */\n    handler, timeout) {\n        this.url = url;\n        this.method = method;\n        this.handler = handler;\n        this.timeout = timeout;\n        this.urlParams = {};\n        this.headers = {};\n        this.body = null;\n        this.errorHandler = null;\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\n        this.progressCallback = null;\n        this.successCodes = [200];\n        this.additionalRetryCodes = [];\n    }\n    return RequestInfo;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/requests.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\nfunction handlerCheck(cndn) {\n    if (!cndn) {\n        throw unknown();\n    }\n}\nfunction metadataHandler(authWrapper, mappings) {\n    function handler(xhr, text) {\n        var metadata = fromResourceString(authWrapper, text, mappings);\n        handlerCheck(metadata !== null);\n        return metadata;\n    }\n    return handler;\n}\nfunction sharedErrorHandler(location) {\n    function errorHandler(xhr, err) {\n        var newErr;\n        if (xhr.getStatus() === 401) {\n            newErr = unauthenticated();\n        } else {\n            if (xhr.getStatus() === 402) {\n                newErr = quotaExceeded(location.bucket);\n            } else {\n                if (xhr.getStatus() === 403) {\n                    newErr = unauthorized(location.path);\n                } else {\n                    newErr = err;\n                }\n            }\n        }\n        newErr.setServerResponseProp(err.serverResponseProp());\n        return newErr;\n    }\n    return errorHandler;\n}\nfunction objectErrorHandler(location) {\n    var shared = sharedErrorHandler(location);\n    function errorHandler(xhr, err) {\n        var newErr = shared(xhr, err);\n        if (xhr.getStatus() === 404) {\n            newErr = objectNotFound(location.path);\n        }\n        newErr.setServerResponseProp(err.serverResponseProp());\n        return newErr;\n    }\n    return errorHandler;\n}\nfunction getMetadata(authWrapper, location, mappings) {\n    var urlPart = location.fullServerUrl();\n    var url = makeNormalUrl(urlPart);\n    var method = 'GET';\n    var timeout = authWrapper.maxOperationRetryTime();\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n    var urlPart = location.fullServerUrl();\n    var url = makeNormalUrl(urlPart);\n    var method = 'PATCH';\n    var body = toResourceString(metadata, mappings);\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\n    var timeout = authWrapper.maxOperationRetryTime();\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.headers = headers;\n    requestInfo.body = body;\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction deleteObject(authWrapper, location) {\n    var urlPart = location.fullServerUrl();\n    var url = makeNormalUrl(urlPart);\n    var method = 'DELETE';\n    var timeout = authWrapper.maxOperationRetryTime();\n    function handler(xhr, text) {}\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\n    requestInfo.successCodes = [200, 204];\n    requestInfo.errorHandler = objectErrorHandler(location);\n    return requestInfo;\n}\nfunction determineContentType_(metadata, blob) {\n    return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\nfunction metadataForUpload_(location, blob, opt_metadata) {\n    var metadata = clone(opt_metadata);\n    metadata['fullPath'] = location.path;\n    metadata['size'] = blob.size();\n    if (!metadata['contentType']) {\n        metadata['contentType'] = determineContentType_(null, blob);\n    }\n    return metadata;\n}\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\n    var urlPart = location.bucketOnlyServerUrl();\n    var headers = {\n        'X-Goog-Upload-Protocol': 'multipart'\n    };\n    function genBoundary() {\n        var str = '';\n        for (var i = 0; i < 2; i++) {\n            str = str + Math.random().toString().slice(2);\n        }\n        return str;\n    }\n    var boundary = genBoundary();\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\n    var metadataString = toResourceString(metadata, mappings);\n    var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata['contentType'] + '\\r\\n\\r\\n';\n    var postBlobPart = '\\r\\n--' + boundary + '--';\n    var body = blob_FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n    if (body === null) {\n        throw cannotSliceBlob();\n    }\n    var urlParams = { name: metadata['fullPath'] };\n    var url = makeUploadUrl(urlPart);\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n    requestInfo.urlParams = urlParams;\n    requestInfo.headers = headers;\n    requestInfo.body = body.uploadData();\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\nvar ResumableUploadStatus = /** @class */function () {\n    function ResumableUploadStatus(current, total, finalized, metadata) {\n        this.current = current;\n        this.total = total;\n        this.finalized = !!finalized;\n        this.metadata = metadata || null;\n    }\n    return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, opt_allowed) {\n    var status;\n    try {\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\n    } catch (e) {\n        handlerCheck(false);\n    }\n    var allowed = opt_allowed || ['active'];\n    handlerCheck(array_contains(allowed, status));\n    return status;\n}\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\n    var urlPart = location.bucketOnlyServerUrl();\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\n    var urlParams = { name: metadata['fullPath'] };\n    var url = makeUploadUrl(urlPart);\n    var method = 'POST';\n    var headers = {\n        'X-Goog-Upload-Protocol': 'resumable',\n        'X-Goog-Upload-Command': 'start',\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\n        'Content-Type': 'application/json; charset=utf-8'\n    };\n    var body = toResourceString(metadata, mappings);\n    var timeout = authWrapper.maxUploadRetryTime();\n    function handler(xhr, text) {\n        checkResumeHeader_(xhr);\n        var url;\n        try {\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\n        } catch (e) {\n            handlerCheck(false);\n        }\n        handlerCheck(isString(url));\n        return url;\n    }\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\n    requestInfo.urlParams = urlParams;\n    requestInfo.headers = headers;\n    requestInfo.body = body;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n    var headers = { 'X-Goog-Upload-Command': 'query' };\n    function handler(xhr, text) {\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\n        var sizeString;\n        try {\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n        } catch (e) {\n            handlerCheck(false);\n        }\n        var size = parseInt(sizeString, 10);\n        handlerCheck(!isNaN(size));\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\n    }\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\n    requestInfo.headers = headers;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\n    // TODO(andysoto): standardize on internal asserts\n    // assert(!(opt_status && opt_status.finalized));\n    var status = new ResumableUploadStatus(0, 0);\n    if (opt_status) {\n        status.current = opt_status.current;\n        status.total = opt_status.total;\n    } else {\n        status.current = 0;\n        status.total = blob.size();\n    }\n    if (blob.size() !== status.total) {\n        throw serverFileWrongSize();\n    }\n    var bytesLeft = status.total - status.current;\n    var bytesToUpload = bytesLeft;\n    if (chunkSize > 0) {\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\n    }\n    var startByte = status.current;\n    var endByte = startByte + bytesToUpload;\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n    var headers = {\n        'X-Goog-Upload-Command': uploadCommand,\n        'X-Goog-Upload-Offset': status.current\n    };\n    var body = blob.slice(startByte, endByte);\n    if (body === null) {\n        throw cannotSliceBlob();\n    }\n    function handler(xhr, text) {\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\n        // the 'x-range-md5' header comes back with status code 308 responses.\n        // We'll only be able to bail out though, because you can't re-upload a\n        // range that you previously uploaded.\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n        var newCurrent = status.current + bytesToUpload;\n        var size = blob.size();\n        var metadata;\n        if (uploadStatus === 'final') {\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n        } else {\n            metadata = null;\n        }\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n    }\n    var method = 'POST';\n    var timeout = authWrapper.maxUploadRetryTime();\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\n    requestInfo.headers = headers;\n    requestInfo.body = body.uploadData();\n    requestInfo.progressCallback = opt_progressCallback || null;\n    requestInfo.errorHandler = sharedErrorHandler(location);\n    return requestInfo;\n}\n// CONCATENATED MODULE: ./src/storage/implementation/observer.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\nvar observer_Observer = /** @class */function () {\n    function Observer(nextOrObserver, opt_error, opt_complete) {\n        var asFunctions = isFunction(nextOrObserver) || isDef(opt_error) || isDef(opt_complete);\n        if (asFunctions) {\n            this.next = nextOrObserver;\n            this.error = opt_error || null;\n            this.complete = opt_complete || null;\n        } else {\n            var observer = nextOrObserver;\n            this.next = observer.next || null;\n            this.error = observer.error || null;\n            this.complete = observer.complete || null;\n        }\n    }\n    return Observer;\n}();\n\n// CONCATENATED MODULE: ./src/storage/tasksnapshot.ts\nvar UploadTaskSnapshot = /** @class */function () {\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n        this.bytesTransferred = bytesTransferred;\n        this.totalBytes = totalBytes;\n        this.state = state;\n        this.metadata = metadata;\n        this.task = task;\n        this.ref = ref;\n    }\n    Object.defineProperty(UploadTaskSnapshot.prototype, \"downloadURL\", {\n        get: function get() {\n            if (this.metadata !== null) {\n                var urls = this.metadata['downloadURLs'];\n                if (urls != null && urls[0] != null) {\n                    return urls[0];\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UploadTaskSnapshot;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/async.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Method for invoking a callback asynchronously.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\nfunction async_async(f) {\n    return function () {\n        var argsToForward = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            argsToForward[_i] = arguments[_i];\n        }\n        promise_external_resolve(true).then(function () {\n            f.apply(null, argsToForward);\n        });\n    };\n}\n// CONCATENATED MODULE: ./src/storage/task.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Defines types for interacting with blob transfer tasks.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\nvar task_UploadTask = /** @class */function () {\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n        if (metadata === void 0) {\n            metadata = null;\n        }\n        var _this = this;\n        this.transferred_ = 0;\n        this.needToFetchStatus_ = false;\n        this.needToFetchMetadata_ = false;\n        this.observers_ = [];\n        this.error_ = null;\n        this.uploadUrl_ = null;\n        this.request_ = null;\n        this.chunkMultiplier_ = 1;\n        this.resolve_ = null;\n        this.reject_ = null;\n        this.ref_ = ref;\n        this.authWrapper_ = authWrapper;\n        this.location_ = location;\n        this.blob_ = blob;\n        this.metadata_ = metadata;\n        this.mappings_ = mappings;\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\n        this.state_ = InternalTaskState.RUNNING;\n        this.errorHandler_ = function (error) {\n            _this.request_ = null;\n            _this.chunkMultiplier_ = 1;\n            if (error.codeEquals(Code.CANCELED)) {\n                _this.needToFetchStatus_ = true;\n                _this.completeTransitions_();\n            } else {\n                _this.error_ = error;\n                _this.transition_(InternalTaskState.ERROR);\n            }\n        };\n        this.metadataErrorHandler_ = function (error) {\n            _this.request_ = null;\n            if (error.codeEquals(Code.CANCELED)) {\n                _this.completeTransitions_();\n            } else {\n                _this.error_ = error;\n                _this.transition_(InternalTaskState.ERROR);\n            }\n        };\n        this.promise_ = make(function (resolve, reject) {\n            _this.resolve_ = resolve;\n            _this.reject_ = reject;\n            _this.start_();\n        });\n        // Prevent uncaught rejections on the internal promise from bubbling out\n        // to the top level with a dummy handler.\n        this.promise_.then(null, function () {});\n    }\n    UploadTask.prototype.makeProgressCallback_ = function () {\n        var _this = this;\n        var sizeBefore = this.transferred_;\n        return function (loaded, total) {\n            _this.updateProgress_(sizeBefore + loaded);\n        };\n    };\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\n        return blob.size() > 256 * 1024;\n    };\n    UploadTask.prototype.start_ = function () {\n        if (this.state_ !== InternalTaskState.RUNNING) {\n            // This can happen if someone pauses us in a resume callback, for example.\n            return;\n        }\n        if (this.request_ !== null) {\n            return;\n        }\n        if (this.resumable_) {\n            if (this.uploadUrl_ === null) {\n                this.createResumable_();\n            } else {\n                if (this.needToFetchStatus_) {\n                    this.fetchStatus_();\n                } else {\n                    if (this.needToFetchMetadata_) {\n                        // Happens if we miss the metadata on upload completion.\n                        this.fetchMetadata_();\n                    } else {\n                        this.continueUpload_();\n                    }\n                }\n            }\n        } else {\n            this.oneShotUpload_();\n        }\n    };\n    UploadTask.prototype.resolveToken_ = function (callback) {\n        var _this = this;\n        this.authWrapper_.getAuthToken().then(function (authToken) {\n            switch (_this.state_) {\n                case InternalTaskState.RUNNING:\n                    callback(authToken);\n                    break;\n                case InternalTaskState.CANCELING:\n                    _this.transition_(InternalTaskState.CANCELED);\n                    break;\n                case InternalTaskState.PAUSING:\n                    _this.transition_(InternalTaskState.PAUSED);\n                    break;\n                default:\n            }\n        });\n    };\n    // TODO(andysoto): assert false\n    UploadTask.prototype.createResumable_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = createRequest;\n            createRequest.getPromise().then(function (url) {\n                _this.request_ = null;\n                _this.uploadUrl_ = url;\n                _this.needToFetchStatus_ = false;\n                _this.completeTransitions_();\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.fetchStatus_ = function () {\n        var _this = this;\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\n        var url = this.uploadUrl_;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = statusRequest;\n            statusRequest.getPromise().then(function (status) {\n                status = status;\n                _this.request_ = null;\n                _this.updateProgress_(status.current);\n                _this.needToFetchStatus_ = false;\n                if (status.finalized) {\n                    _this.needToFetchMetadata_ = true;\n                }\n                _this.completeTransitions_();\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.continueUpload_ = function () {\n        var _this = this;\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\n        var url = this.uploadUrl_;\n        this.resolveToken_(function (authToken) {\n            var requestInfo;\n            try {\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n            } catch (e) {\n                _this.error_ = e;\n                _this.transition_(InternalTaskState.ERROR);\n                return;\n            }\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = uploadRequest;\n            uploadRequest.getPromise().then(function (newStatus) {\n                _this.increaseMultiplier_();\n                _this.request_ = null;\n                _this.updateProgress_(newStatus.current);\n                if (newStatus.finalized) {\n                    _this.metadata_ = newStatus.metadata;\n                    _this.transition_(InternalTaskState.SUCCESS);\n                } else {\n                    _this.completeTransitions_();\n                }\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.increaseMultiplier_ = function () {\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\n        // Max chunk size is 32M.\n        if (currentSize < 32 * 1024 * 1024) {\n            this.chunkMultiplier_ *= 2;\n        }\n    };\n    UploadTask.prototype.fetchMetadata_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = metadataRequest;\n            metadataRequest.getPromise().then(function (metadata) {\n                _this.request_ = null;\n                _this.metadata_ = metadata;\n                _this.transition_(InternalTaskState.SUCCESS);\n            }, _this.metadataErrorHandler_);\n        });\n    };\n    UploadTask.prototype.oneShotUpload_ = function () {\n        var _this = this;\n        this.resolveToken_(function (authToken) {\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n            _this.request_ = multipartRequest;\n            multipartRequest.getPromise().then(function (metadata) {\n                _this.request_ = null;\n                _this.metadata_ = metadata;\n                _this.updateProgress_(_this.blob_.size());\n                _this.transition_(InternalTaskState.SUCCESS);\n            }, _this.errorHandler_);\n        });\n    };\n    UploadTask.prototype.updateProgress_ = function (transferred) {\n        var old = this.transferred_;\n        this.transferred_ = transferred;\n        // A progress update can make the \"transferred\" value smaller (e.g. a\n        // partial upload not completed by server, after which the \"transferred\"\n        // value may reset to the value at the beginning of the request).\n        if (this.transferred_ !== old) {\n            this.notifyObservers_();\n        }\n    };\n    UploadTask.prototype.transition_ = function (state) {\n        if (this.state_ === state) {\n            return;\n        }\n        switch (state) {\n            case InternalTaskState.CANCELING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING);\n                this.state_ = state;\n                if (this.request_ !== null) {\n                    this.request_.cancel();\n                }\n                break;\n            case InternalTaskState.PAUSING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING);\n                this.state_ = state;\n                if (this.request_ !== null) {\n                    this.request_.cancel();\n                }\n                break;\n            case InternalTaskState.RUNNING:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSED ||\n                //        this.state_ === InternalTaskState.PAUSING);\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\n                this.state_ = state;\n                if (wasPaused) {\n                    this.notifyObservers_();\n                    this.start_();\n                }\n                break;\n            case InternalTaskState.PAUSED:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case InternalTaskState.CANCELED:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.PAUSED ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.error_ = error_canceled();\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case InternalTaskState.ERROR:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n            case InternalTaskState.SUCCESS:\n                // TODO(andysoto):\n                // assert(this.state_ === InternalTaskState.RUNNING ||\n                //        this.state_ === InternalTaskState.PAUSING ||\n                //        this.state_ === InternalTaskState.CANCELING);\n                this.state_ = state;\n                this.notifyObservers_();\n                break;\n        }\n    };\n    UploadTask.prototype.completeTransitions_ = function () {\n        switch (this.state_) {\n            case InternalTaskState.PAUSING:\n                this.transition_(InternalTaskState.PAUSED);\n                break;\n            case InternalTaskState.CANCELING:\n                this.transition_(InternalTaskState.CANCELED);\n                break;\n            case InternalTaskState.RUNNING:\n                this.start_();\n                break;\n            default:\n                // TODO(andysoto): assert(false);\n                break;\n        }\n    };\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n        get: function get() {\n            var externalState = taskStateFromInternalTaskState(this.state_);\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n        if (nextOrObserver === void 0) {\n            nextOrObserver = undefined;\n        }\n        if (error === void 0) {\n            error = undefined;\n        }\n        if (completed === void 0) {\n            completed = undefined;\n        }\n        function typeValidator(_p) {\n            if (type !== TaskEvent.STATE_CHANGED) {\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n            }\n        }\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n        var nextValidator = nullFunctionSpec(true).validator;\n        var observerValidator = looseObjectSpec(null, true).validator;\n        function nextOrObserverValidator(p) {\n            try {\n                nextValidator(p);\n                return;\n            } catch (e) {}\n            try {\n                observerValidator(p);\n                var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n                if (!anyDefined) {\n                    throw '';\n                }\n                return;\n            } catch (e) {\n                throw nextOrObserverMessage;\n            }\n        }\n        var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n        validate('on', specs, arguments);\n        var self = this;\n        function makeBinder(specs) {\n            function binder(nextOrObserver, error, opt_complete) {\n                if (specs !== null) {\n                    validate('on', specs, arguments);\n                }\n                var observer = new observer_Observer(nextOrObserver, error, completed);\n                self.addObserver_(observer);\n                return function () {\n                    self.removeObserver_(observer);\n                };\n            }\n            return binder;\n        }\n        function binderNextOrObserverValidator(p) {\n            if (p === null) {\n                throw nextOrObserverMessage;\n            }\n            nextOrObserverValidator(p);\n        }\n        var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n        var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n        if (typeOnly) {\n            return makeBinder(binderSpecs);\n        } else {\n            return makeBinder(null)(nextOrObserver, error, completed);\n        }\n    };\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\n        // These casts are needed so that TypeScript can infer the types of the\n        // resulting Promise.\n        return this.promise_.then(onFulfilled, onRejected);\n    };\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\n    UploadTask.prototype.catch = function (onRejected) {\n        return this.then(null, onRejected);\n    };\n    /**\r\n     * Adds the given observer.\r\n     */\n    UploadTask.prototype.addObserver_ = function (observer) {\n        this.observers_.push(observer);\n        this.notifyObserver_(observer);\n    };\n    /**\r\n     * Removes the given observer.\r\n     */\n    UploadTask.prototype.removeObserver_ = function (observer) {\n        remove(this.observers_, observer);\n    };\n    UploadTask.prototype.notifyObservers_ = function () {\n        var _this = this;\n        this.finishPromise_();\n        var observers = array_clone(this.observers_);\n        observers.forEach(function (observer) {\n            _this.notifyObserver_(observer);\n        });\n    };\n    UploadTask.prototype.finishPromise_ = function () {\n        if (this.resolve_ !== null) {\n            var triggered = true;\n            switch (taskStateFromInternalTaskState(this.state_)) {\n                case TaskState.SUCCESS:\n                    async_async(this.resolve_.bind(null, this.snapshot))();\n                    break;\n                case TaskState.CANCELED:\n                case TaskState.ERROR:\n                    var toCall = this.reject_;\n                    async_async(toCall.bind(null, this.error_))();\n                    break;\n                default:\n                    triggered = false;\n                    break;\n            }\n            if (triggered) {\n                this.resolve_ = null;\n                this.reject_ = null;\n            }\n        }\n    };\n    UploadTask.prototype.notifyObserver_ = function (observer) {\n        var externalState = taskStateFromInternalTaskState(this.state_);\n        switch (externalState) {\n            case TaskState.RUNNING:\n            case TaskState.PAUSED:\n                if (observer.next !== null) {\n                    async_async(observer.next.bind(observer, this.snapshot))();\n                }\n                break;\n            case TaskState.SUCCESS:\n                if (observer.complete !== null) {\n                    async_async(observer.complete.bind(observer))();\n                }\n                break;\n            case TaskState.CANCELED:\n            case TaskState.ERROR:\n                if (observer.error !== null) {\n                    async_async(observer.error.bind(observer, this.error_))();\n                }\n                break;\n            default:\n                // TODO(andysoto): assert(false);\n                if (observer.error !== null) {\n                    async_async(observer.error.bind(observer, this.error_))();\n                }\n        }\n    };\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\n    UploadTask.prototype.resume = function () {\n        validate('resume', [], arguments);\n        var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n        if (valid) {\n            this.transition_(InternalTaskState.RUNNING);\n        }\n        return valid;\n    };\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\n    UploadTask.prototype.pause = function () {\n        validate('pause', [], arguments);\n        var valid = this.state_ === InternalTaskState.RUNNING;\n        if (valid) {\n            this.transition_(InternalTaskState.PAUSING);\n        }\n        return valid;\n    };\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\n    UploadTask.prototype.cancel = function () {\n        validate('cancel', [], arguments);\n        var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n        if (valid) {\n            this.transition_(InternalTaskState.CANCELING);\n        }\n        return valid;\n    };\n    return UploadTask;\n}();\n\n// CONCATENATED MODULE: ./src/storage/reference.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Defines the Firebase Storage Reference class.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\nvar reference_Reference = /** @class */function () {\n    function Reference(authWrapper, location) {\n        this.authWrapper = authWrapper;\n        if (location instanceof location_Location) {\n            this.location = location;\n        } else {\n            this.location = location_Location.makeFromUrl(location);\n        }\n    }\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\n    Reference.prototype.toString = function () {\n        validate('toString', [], arguments);\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\n    };\n    Reference.prototype.newRef = function (authWrapper, location) {\n        return new Reference(authWrapper, location);\n    };\n    Reference.prototype.mappings = function () {\n        return getMappings();\n    };\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\n    Reference.prototype.child = function (childPath) {\n        validate('child', [stringSpec()], arguments);\n        var newPath = child(this.location.path, childPath);\n        var location = new location_Location(this.location.bucket, newPath);\n        return this.newRef(this.authWrapper, location);\n    };\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\n        get: function get() {\n            var newPath = path_parent(this.location.path);\n            if (newPath === null) {\n                return null;\n            }\n            var location = new location_Location(this.location.bucket, newPath);\n            return this.newRef(this.authWrapper, location);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\n        get: function get() {\n            var location = new location_Location(this.location.bucket, '');\n            return this.newRef(this.authWrapper, location);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"bucket\", {\n        get: function get() {\n            return this.location.bucket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\n        get: function get() {\n            return this.location.path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"name\", {\n        get: function get() {\n            return lastComponent(this.location.path);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"storage\", {\n        get: function get() {\n            return this.authWrapper.service();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\n    Reference.prototype.put = function (data, metadata) {\n        if (metadata === void 0) {\n            metadata = null;\n        }\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n        this.throwIfRoot_('put');\n        return new task_UploadTask(this, this.authWrapper, this.location, this.mappings(), new blob_FbsBlob(data), metadata);\n    };\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\n    Reference.prototype.putString = function (string, format, opt_metadata) {\n        if (format === void 0) {\n            format = StringFormat.RAW;\n        }\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n        this.throwIfRoot_('putString');\n        var data = dataFromString(format, string);\n        var metadata = clone(opt_metadata);\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\n            metadata['contentType'] = data.contentType;\n        }\n        return new task_UploadTask(this, this.authWrapper, this.location, this.mappings(), new blob_FbsBlob(data.data, true), metadata);\n    };\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\n    Reference.prototype.delete = function () {\n        validate('delete', [], arguments);\n        this.throwIfRoot_('delete');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = deleteObject(self.authWrapper, self.location);\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\n    Reference.prototype.getMetadata = function () {\n        validate('getMetadata', [], arguments);\n        this.throwIfRoot_('getMetadata');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\n    Reference.prototype.updateMetadata = function (metadata) {\n        validate('updateMetadata', [metadataSpec()], arguments);\n        this.throwIfRoot_('updateMetadata');\n        var self = this;\n        return this.authWrapper.getAuthToken().then(function (authToken) {\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n        });\n    };\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\n    Reference.prototype.getDownloadURL = function () {\n        validate('getDownloadURL', [], arguments);\n        this.throwIfRoot_('getDownloadURL');\n        return this.getMetadata().then(function (metadata) {\n            var url = metadata['downloadURLs'][0];\n            if (isDef(url)) {\n                return url;\n            } else {\n                throw noDownloadURL();\n            }\n        });\n    };\n    Reference.prototype.throwIfRoot_ = function (name) {\n        if (this.location.path === '') {\n            throw invalidRootOperation(name);\n        }\n    };\n    return Reference;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/failrequest.ts\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\nvar failrequest_FailRequest = /** @class */function () {\n    function FailRequest(error) {\n        this.promise_ = promise_external_reject(error);\n    }\n    /** @inheritDoc */\n    FailRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    FailRequest.prototype.cancel = function (appDelete) {\n        if (appDelete === void 0) {\n            appDelete = false;\n        }\n    };\n    return FailRequest;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/requestmap.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n/**\r\n * @struct\r\n */\nvar requestmap_RequestMap = /** @class */function () {\n    function RequestMap() {\n        this.map_ = {};\n        this.id_ = minSafeInteger;\n    }\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\n    RequestMap.prototype.addRequest = function (r) {\n        var id = this.id_;\n        this.id_++;\n        this.map_[id] = r;\n        var self = this;\n        function unmap() {\n            delete self.map_[id];\n        }\n        r.getPromise().then(unmap, unmap);\n    };\n    /**\r\n     * Cancels all registered requests.\r\n     */\n    RequestMap.prototype.clear = function () {\n        forEach(this.map_, function (key, val) {\n            if (val) {\n                val.cancel(true);\n            }\n        });\n        this.map_ = {};\n    };\n    return RequestMap;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/authwrapper.ts\n\n\n\n\n\n\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\nvar authwrapper_AuthWrapper = /** @class */function () {\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\n        this.bucket_ = null;\n        this.deleted_ = false;\n        this.app_ = app;\n        if (this.app_ !== null) {\n            var options = this.app_.options;\n            if (isDef(options)) {\n                this.bucket_ = AuthWrapper.extractBucket_(options);\n            }\n        }\n        this.storageRefMaker_ = maker;\n        this.requestMaker_ = requestMaker;\n        this.pool_ = pool;\n        this.service_ = service;\n        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\n        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\n        this.requestMap_ = new requestmap_RequestMap();\n    }\n    AuthWrapper.extractBucket_ = function (config) {\n        var bucketString = config[configOption] || null;\n        if (bucketString == null) {\n            return null;\n        }\n        var loc = location_Location.makeFromBucketSpec(bucketString);\n        return loc.bucket;\n    };\n    AuthWrapper.prototype.getAuthToken = function () {\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n        // (b/28673818).\n        if (this.app_ !== null && isDef(this.app_.INTERNAL) && isDef(this.app_.INTERNAL.getToken)) {\n            return this.app_.INTERNAL.getToken().then(function (response) {\n                if (response !== null) {\n                    return response.accessToken;\n                } else {\n                    return null;\n                }\n            }, function (_error) {\n                return null;\n            });\n        } else {\n            return promise_external_resolve(null);\n        }\n    };\n    AuthWrapper.prototype.bucket = function () {\n        if (this.deleted_) {\n            throw appDeleted();\n        } else {\n            return this.bucket_;\n        }\n    };\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\n    AuthWrapper.prototype.service = function () {\n        return this.service_;\n    };\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\n        return this.storageRefMaker_(this, loc);\n    };\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n        if (!this.deleted_) {\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\n            this.requestMap_.addRequest(request);\n            return request;\n        } else {\n            return new failrequest_FailRequest(appDeleted());\n        }\n    };\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\n    AuthWrapper.prototype.deleteApp = function () {\n        this.deleted_ = true;\n        this.app_ = null;\n        this.requestMap_.clear();\n    };\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\n        return this.maxUploadRetryTime_;\n    };\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n        this.maxUploadRetryTime_ = time;\n    };\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\n        return this.maxOperationRetryTime_;\n    };\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n        this.maxOperationRetryTime_ = time;\n    };\n    return AuthWrapper;\n}();\n\n// CONCATENATED MODULE: ./src/storage/implementation/backoff.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\nfunction start(f, callback, timeout) {\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\n    // type instead of a bunch of functions with state shared in the closure)\n    var waitSeconds = 1;\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n    var timeoutId = null;\n    var hitTimeout = false;\n    var cancelState = 0;\n    function canceled() {\n        return cancelState === 2;\n    }\n    var triggeredCallback = false;\n    function triggerCallback() {\n        if (!triggeredCallback) {\n            triggeredCallback = true;\n            callback.apply(null, arguments);\n        }\n    }\n    function callWithDelay(millis) {\n        timeoutId = setTimeout(function () {\n            timeoutId = null;\n            f(handler, canceled());\n        }, millis);\n    }\n    function handler(success) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (triggeredCallback) {\n            return;\n        }\n        if (success) {\n            triggerCallback.apply(null, arguments);\n            return;\n        }\n        var mustStop = canceled() || hitTimeout;\n        if (mustStop) {\n            triggerCallback.apply(null, arguments);\n            return;\n        }\n        if (waitSeconds < 64) {\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n            waitSeconds *= 2;\n        }\n        var waitMillis;\n        if (cancelState === 1) {\n            cancelState = 2;\n            waitMillis = 0;\n        } else {\n            waitMillis = (waitSeconds + Math.random()) * 1000;\n        }\n        callWithDelay(waitMillis);\n    }\n    var stopped = false;\n    function stop(wasTimeout) {\n        if (stopped) {\n            return;\n        }\n        stopped = true;\n        if (triggeredCallback) {\n            return;\n        }\n        if (timeoutId !== null) {\n            if (!wasTimeout) {\n                cancelState = 2;\n            }\n            clearTimeout(timeoutId);\n            callWithDelay(0);\n        } else {\n            if (!wasTimeout) {\n                cancelState = 1;\n            }\n        }\n    }\n    callWithDelay(0);\n    setTimeout(function () {\n        hitTimeout = true;\n        stop(true);\n    }, timeout);\n    return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\nfunction stop(id) {\n    id(false);\n}\n// EXTERNAL MODULE: ./src/app.ts + 1 modules\nvar src_app = __webpack_require__(9);\n\n// CONCATENATED MODULE: ./src/storage/implementation/request.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Defines methods used to actually send HTTP requests from\r\n * abstract representations.\r\n */\n\n\n\n\n\n\n\n\n\n/**\r\n * @struct\r\n * @template T\r\n */\nvar request_NetworkRequest = /** @class */function () {\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n        this.pendingXhr_ = null;\n        this.backoffId_ = null;\n        this.resolve_ = null;\n        this.reject_ = null;\n        this.canceled_ = false;\n        this.appDelete_ = false;\n        this.url_ = url;\n        this.method_ = method;\n        this.headers_ = headers;\n        this.body_ = body;\n        this.successCodes_ = successCodes.slice();\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\n        this.callback_ = callback;\n        this.errorCallback_ = errorCallback;\n        this.progressCallback_ = progressCallback;\n        this.timeout_ = timeout;\n        this.pool_ = pool;\n        var self = this;\n        this.promise_ = make(function (resolve, reject) {\n            self.resolve_ = resolve;\n            self.reject_ = reject;\n            self.start_();\n        });\n    }\n    /**\r\n     * Actually starts the retry loop.\r\n     */\n    NetworkRequest.prototype.start_ = function () {\n        var self = this;\n        function doTheRequest(backoffCallback, canceled) {\n            if (canceled) {\n                backoffCallback(false, new RequestEndStatus(false, null, true));\n                return;\n            }\n            var xhr = self.pool_.createXhrIo();\n            self.pendingXhr_ = xhr;\n            function progressListener(progressEvent) {\n                var loaded = progressEvent.loaded;\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n                if (self.progressCallback_ !== null) {\n                    self.progressCallback_(loaded, total);\n                }\n            }\n            if (self.progressCallback_ !== null) {\n                xhr.addUploadProgressListener(progressListener);\n            }\n            xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n                if (self.progressCallback_ !== null) {\n                    xhr.removeUploadProgressListener(progressListener);\n                }\n                self.pendingXhr_ = null;\n                xhr = xhr;\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n                var status = xhr.getStatus();\n                if (!hitServer || self.isRetryStatusCode_(status)) {\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n                    return;\n                }\n                var successCode = array_contains(self.successCodes_, status);\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\n            });\n        }\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\n        function backoffDone(requestWentThrough, status) {\n            var resolve = self.resolve_;\n            var reject = self.reject_;\n            var xhr = status.xhr;\n            if (status.wasSuccessCode) {\n                try {\n                    var result = self.callback_(xhr, xhr.getResponseText());\n                    if (isJustDef(result)) {\n                        resolve(result);\n                    } else {\n                        resolve();\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            } else {\n                if (xhr !== null) {\n                    var err = unknown();\n                    err.setServerResponseProp(xhr.getResponseText());\n                    if (self.errorCallback_) {\n                        reject(self.errorCallback_(xhr, err));\n                    } else {\n                        reject(err);\n                    }\n                } else {\n                    if (status.canceled) {\n                        var err = self.appDelete_ ? appDeleted() : error_canceled();\n                        reject(err);\n                    } else {\n                        var err = retryLimitExceeded();\n                        reject(err);\n                    }\n                }\n            }\n        }\n        if (this.canceled_) {\n            backoffDone(false, new RequestEndStatus(false, null, true));\n        } else {\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n        }\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.cancel = function (appDelete) {\n        this.canceled_ = true;\n        this.appDelete_ = appDelete || false;\n        if (this.backoffId_ !== null) {\n            stop(this.backoffId_);\n        }\n        if (this.pendingXhr_ !== null) {\n            this.pendingXhr_.abort();\n        }\n    };\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n        // The codes for which to retry came from this page:\n        // https://cloud.google.com/storage/docs/exponential-backoff\n        var isFiveHundredCode = status >= 500 && status < 600;\n        var extraRetryCodes = [\n        // Request Timeout: web server didn't receive full request in time.\n        408,\n        // Too Many Requests: you're getting rate-limited, basically.\n        429];\n        var isExtraRetryCode = array_contains(extraRetryCodes, status);\n        var isRequestSpecificRetryCode = array_contains(this.additionalRetryCodes_, status);\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n    };\n    return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\nvar RequestEndStatus = /** @class */function () {\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\n        this.wasSuccessCode = wasSuccessCode;\n        this.xhr = xhr;\n        this.canceled = !!opt_canceled;\n    }\n    return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n    if (authToken !== null && authToken.length > 0) {\n        headers['Authorization'] = 'Firebase ' + authToken;\n    }\n}\nfunction addVersionHeader_(headers) {\n    var number = typeof src_app[\"default\"] !== 'undefined' ? src_app[\"default\"].SDK_VERSION : 'AppManager';\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\n/**\r\n * @template T\r\n */\nfunction makeRequest(requestInfo, authToken, pool) {\n    var queryPart = makeQueryString(requestInfo.urlParams);\n    var url = requestInfo.url + queryPart;\n    var headers = clone(requestInfo.headers);\n    addAuthHeader_(headers, authToken);\n    addVersionHeader_(headers);\n    return new request_NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n// CONCATENATED MODULE: ./src/storage/service.ts\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\nvar service_Service = /** @class */function () {\n    function Service(app, pool, url) {\n        this.bucket_ = null;\n        function maker(authWrapper, loc) {\n            return new reference_Reference(authWrapper, loc);\n        }\n        this.authWrapper_ = new authwrapper_AuthWrapper(app, maker, makeRequest, this, pool);\n        this.app_ = app;\n        if (url != null) {\n            this.bucket_ = location_Location.makeFromBucketSpec(url);\n        } else {\n            var authWrapperBucket = this.authWrapper_.bucket();\n            if (authWrapperBucket != null) {\n                this.bucket_ = new location_Location(authWrapperBucket, '');\n            }\n        }\n        this.internals_ = new service_ServiceInternals(this);\n    }\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\n    Service.prototype.ref = function (path) {\n        function validator(path) {\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\n                throw 'Expected child path but got a URL, use refFromURL instead.';\n            }\n        }\n        validate('ref', [stringSpec(validator, true)], arguments);\n        if (this.bucket_ == null) {\n            throw new Error('No Storage Bucket defined in Firebase Options.');\n        }\n        var ref = new reference_Reference(this.authWrapper_, this.bucket_);\n        if (path != null) {\n            return ref.child(path);\n        } else {\n            return ref;\n        }\n    };\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\n    Service.prototype.refFromURL = function (url) {\n        function validator(p) {\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n                throw 'Expected full URL but got a child path, use ref instead.';\n            }\n            try {\n                location_Location.makeFromUrl(p);\n            } catch (e) {\n                throw 'Expected valid full URL but got an invalid one.';\n            }\n        }\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\n        return new reference_Reference(this.authWrapper_, url);\n    };\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n        get: function get() {\n            return this.authWrapper_.maxUploadRetryTime();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Service.prototype.setMaxUploadRetryTime = function (time) {\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n        this.authWrapper_.setMaxUploadRetryTime(time);\n    };\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\n        get: function get() {\n            return this.authWrapper_.maxOperationRetryTime();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Service.prototype.setMaxOperationRetryTime = function (time) {\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n        this.authWrapper_.setMaxOperationRetryTime(time);\n    };\n    Object.defineProperty(Service.prototype, \"app\", {\n        get: function get() {\n            return this.app_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\n        get: function get() {\n            return this.internals_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Service;\n}();\n\n/**\r\n * @struct\r\n */\nvar service_ServiceInternals = /** @class */function () {\n    function ServiceInternals(service) {\n        this.service_ = service;\n    }\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\n    ServiceInternals.prototype.delete = function () {\n        this.service_.authWrapper_.deleteApp();\n        return promise_external_resolve(undefined);\n    };\n    return ServiceInternals;\n}();\n\n// CONCATENATED MODULE: ./src/storage.ts\n/* harmony export (immutable) */ __webpack_exports__[\"registerStorage\"] = registerStorage;\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n\n\n\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\nvar STORAGE_TYPE = 'storage';\nfunction factory(app, unused, opt_url) {\n    return new service_Service(app, new xhriopool_XhrIoPool(), opt_url);\n}\nfunction registerStorage(instance) {\n    var namespaceExports = {\n        // no-inline\n        TaskState: TaskState,\n        TaskEvent: TaskEvent,\n        StringFormat: StringFormat,\n        Storage: service_Service,\n        Reference: reference_Reference\n    };\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined,\n    // Allow multiple storage instances per app.\n    true);\n}\nregisterStorage(src_app[\"default\"]);\n\n/***/ })\n\n},[60]);\n          } catch(error) {\n            throw new Error(\n              'Cannot instantiate firebase-storage.js - ' +\n              'be sure to load firebase-app.js first.'\n            )\n          }\n\n\n// WEBPACK FOOTER //\n// firebase-storage.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { configOption } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null) {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    return this.message_;\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  let message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  let message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      configOption +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/error.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: string) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw 'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].';\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, opt_contentType?: string | null) {\n    this.contentType = opt_contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  string: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(string));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, string));\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(string), dataURLContentType_(string));\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(string: string): Uint8Array {\n  let b = [];\n  for (let i = 0; i < string.length; i++) {\n    let c = string.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) == 55296) {\n          // The start of a surrogate pair.\n          let valid =\n            i < string.length - 1 &&\n            (string.charCodeAt(i + 1) & 64512) == 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            let hi = c;\n            let lo = string.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) == 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(string: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(string);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, string: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      let hasMinus = string.indexOf('-') !== -1;\n      let hasUnder = string.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        let invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      let hasPlus = string.indexOf('+') !== -1;\n      let hasSlash = string.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        let invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      string = string.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n  }\n  let bytes;\n  try {\n    bytes = atob(string);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  let array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    let matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    let middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(string: string): Uint8Array {\n  let parts = new DataURLParts(string);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(string: string): string | null {\n  let parts = new DataURLParts(string);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/string.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/taskenums.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains methods for working with objects.\n */\nexport function contains(obj: Object, prop: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function forEach<T>(\n  obj: { [key: string]: T },\n  f: (p1: string, p2: T) => void\n) {\n  for (let key in obj) {\n    if (contains(obj, key)) {\n      f(key, obj[key]);\n    }\n  }\n}\n\nexport function clone<T>(obj?: { [key: string]: any } | null): T {\n  if (obj == null) {\n    return {} as T;\n  }\n\n  let c: { [name: string]: any } = {};\n  forEach(obj, function(key, val) {\n    c[key] = val;\n  });\n  return c as T;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/object.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements the promise abstraction interface for external\n * (public SDK) packaging, which just passes through to the firebase-app impl.\n */\n\n/**\n * @template T\n * @param {function((function(T): void),\n *                  (function(!Error): void))} resolver\n */\n\nimport { PromiseImpl } from '../../utils/promise';\n\nexport function make<T>(\n  resolver: (p1: (p1: T) => void, p2: (p1: Error) => void) => void\n): Promise<T> {\n  return new PromiseImpl(resolver);\n}\n\n/**\n * @template T\n */\nexport function resolve<T>(value: T): Promise<T> {\n  return PromiseImpl.resolve(value) as Promise<T>;\n}\n\nexport function reject<T>(error: Error): Promise<T> {\n  return PromiseImpl.reject(error) as Promise<T>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/promise_external.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef(p: any): boolean {\n  return p != null;\n}\n\nexport function isJustDef(p: any): boolean {\n  return p !== void 0;\n}\n\nexport function isFunction(p: any): boolean {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: any): boolean {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: any): boolean {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: any): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: any): boolean {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNumber(p: any): boolean {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: any): boolean {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/type.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(s: string): { [name: string]: any } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/json.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length == 0) {\n    return null;\n  }\n  let index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  let newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  let canonicalChildPath = childPath\n    .split('/')\n    .filter(function(component) {\n      return component.length > 0;\n    })\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  let index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/path.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport * as constants from './constants';\nimport * as object from './object';\n\nexport function makeNormalUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeDownloadUrl(urlPart: string): string {\n  return constants.downloadBase + constants.apiBaseUrl + urlPart;\n}\n\nexport function makeUploadUrl(urlPart: string): string {\n  return constants.domainBase + constants.apiUploadBaseUrl + urlPart;\n}\n\nexport function makeQueryString(params: { [key: string]: string }): string {\n  let encode = encodeURIComponent;\n  let queryPart = '?';\n  object.forEach(params, function(key, val) {\n    let nextPart = encode(key) + '=' + encode(val);\n    queryPart = queryPart + nextPart + '&';\n  });\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/url.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { AuthWrapper } from './authwrapper';\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\n\nexport function noXform_(metadata: Metadata, value: any): any {\n  return value;\n}\n\n/**\n * @struct\n */\nexport class Mapping {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2: any) => any;\n\n  constructor(\n    public server: string,\n    opt_local?: string | null,\n    opt_writable?: boolean,\n    opt_xform?: (p1: Metadata, p2: any) => any | null\n  ) {\n    this.local = opt_local || server;\n    this.writable = !!opt_writable;\n    this.xform = opt_xform || noXform_;\n  }\n}\ntype Mappings = Mapping[];\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: any): string {\n  let valid = type.isString(fullPath);\n  if (!valid || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    fullPath = fullPath as string;\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  let mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(metadata: Metadata, fullPath: any): string {\n    return xformPath(fullPath);\n  }\n  let nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(metadata: Metadata, size: any): number | null | undefined {\n    if (type.isDef(size)) {\n      return +(size as number);\n    } else {\n      return size;\n    }\n  }\n  let sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n\n  /**\n   * Transforms a comma-separated string of tokens into a list of download\n   * URLs.\n   */\n  function xformTokens(metadata: Metadata, tokens: any): string[] {\n    let valid = type.isString(tokens) && tokens.length > 0;\n    if (!valid) {\n      // This can happen if objects are uploaded through GCS and retrieved\n      // through list, so we don't want to throw an Error.\n      return [];\n    }\n    let encode = encodeURIComponent;\n    let tokensList = tokens.split(',');\n    let urls = tokensList.map(function(token: string) {\n      let bucket: string = metadata['bucket'] as string;\n      let path: string = metadata['fullPath'] as string;\n      let urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n      let base = UrlUtils.makeDownloadUrl(urlPart);\n      let queryString = UrlUtils.makeQueryString({\n        alt: 'media',\n        token: token\n      });\n      return base + queryString;\n    });\n    return urls;\n  }\n  mappings.push(\n    new Mapping('downloadTokens', 'downloadURLs', false, xformTokens)\n  );\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, authWrapper: AuthWrapper) {\n  function generateRef() {\n    let bucket: string = metadata['bucket'] as string;\n    let path: string = metadata['fullPath'] as string;\n    let loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  authWrapper: AuthWrapper,\n  resource: { [name: string]: any },\n  mappings: Mappings\n): Metadata {\n  let metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  let len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    let mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nexport function fromResourceString(\n  authWrapper: AuthWrapper,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  let obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  let resource = obj as Metadata;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  let resource: {\n    [prop: string]: any;\n  } = {};\n  let len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    let mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: any) {\n  let validType = p && type.isObject(p);\n  if (!validType) {\n    throw 'Expected Metadata object.';\n  }\n  for (let key in p) {\n    let val = p[key];\n    if (key === 'customMetadata') {\n      if (!type.isObject(val)) {\n        throw 'Expected object for \\'customMetadata\\' mapping.';\n      }\n    } else {\n      if (type.isNonNullObject(val)) {\n        throw \"Mapping for '\" + key + \"' cannot be an object.\";\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/metadata.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\nimport * as MetadataUtils from './metadata';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(name: string, specs: ArgSpec[], passed: IArguments) {\n  let minArgs = specs.length;\n  let maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  let validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: any) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: any) => void, opt_optional?: boolean) {\n    let self = this;\n    this.validator = function(p: any) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!opt_optional;\n  }\n}\n\nexport function and_(v1: (p1: any) => void, v2: Function): (p1: any) => void {\n  return function(p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  opt_validator?: (p1: any) => void | null,\n  opt_optional?: boolean\n): ArgSpec {\n  function stringValidator(p: any) {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let validator;\n  if (opt_validator) {\n    validator = and_(stringValidator, opt_validator);\n  } else {\n    validator = stringValidator;\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: any) {\n    let valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(opt_optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: any) {\n    let valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  opt_validator?: ((p1: any) => void) | null,\n  opt_optional?: boolean\n): ArgSpec {\n  function validator(p: any) {\n    let isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (opt_validator !== undefined && opt_validator !== null) {\n      opt_validator(p);\n    }\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n\nexport function nullFunctionSpec(opt_optional?: boolean): ArgSpec {\n  function validator(p: any) {\n    let valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, opt_optional);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/args.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as array from './array';\nimport * as type from './type';\n\ndeclare var IBlobBuilder;\ndeclare var BlobBuilder;\ndeclare var WebKitBlobBuilder;\n\nfunction getBlobBuilder(): (typeof IBlobBuilder) | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param var_args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...var_args: (string | Blob | ArrayBuffer)[]): Blob {\n  let BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    let bb = new BlobBuilder();\n    for (let i = 0; i < var_args.length; i++) {\n      bb.append(var_args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(var_args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if ((blob as any).webkitSlice) {\n    return (blob as any).webkitSlice(start, end);\n  } else if ((blob as any).mozSlice) {\n    return (blob as any).mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/fs.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns true if the object is contained in the array (compared with ===).\n * @template T\n */\nexport function contains<T>(array: T[], elem: T): boolean {\n  return array.indexOf(elem) !== -1;\n}\n\n/**\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\n * @template T\n */\nexport function clone<T>(arraylike: T[]): T[] {\n  return Array.prototype.slice.call(arraylike);\n}\n\n/**\n * Removes the given element from the given array, if it is contained.\n * Directly modifies the passed-in array.\n * @template T\n */\nexport function remove<T>(array: T[], elem: T) {\n  const i = array.indexOf(elem);\n  if (i !== -1) {\n    array.splice(i, 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/array.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\n\nimport * as array from './array';\nimport { AuthWrapper } from './authwrapper';\nimport { FbsBlob } from './blob';\nimport * as errorsExports from './error';\nimport { FirebaseStorageError } from './error';\nimport { errors } from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as object from './object';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean) {\n  if (!cndn) {\n    throw errorsExports.unknown();\n  }\n}\n\nexport function metadataHandler(\n  authWrapper: AuthWrapper,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    let metadata = MetadataUtils.fromResourceString(\n      authWrapper,\n      text,\n      mappings\n    );\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = errorsExports.unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = errorsExports.quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = errorsExports.unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  let shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = errorsExports.objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeNormalUrl(urlPart);\n  let method = 'GET';\n  let timeout = authWrapper.maxOperationRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeNormalUrl(urlPart);\n  let method = 'PATCH';\n  let body = MetadataUtils.toResourceString(metadata, mappings);\n  let headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  let timeout = authWrapper.maxOperationRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  authWrapper: AuthWrapper,\n  location: Location\n): RequestInfo<void> {\n  let urlPart = location.fullServerUrl();\n  let url = UrlUtils.makeNormalUrl(urlPart);\n  let method = 'DELETE';\n  let timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(xhr: XhrIo, text: string) {}\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): Metadata {\n  let metadata = object.clone<Metadata>(opt_metadata);\n  metadata['fullPath'] = location.path;\n  metadata['size'] = blob.size();\n  if (!metadata['contentType']) {\n    metadata['contentType'] = determineContentType_(null, blob);\n  }\n  return metadata;\n}\n\nexport function multipartUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  let urlPart = location.bucketOnlyServerUrl();\n  let headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  let boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  let metadata = metadataForUpload_(location, blob, opt_metadata);\n  let metadataString = MetadataUtils.toResourceString(metadata, mappings);\n  let preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata['contentType'] +\n    '\\r\\n\\r\\n';\n  let postBlobPart = '\\r\\n--' + boundary + '--';\n  let body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw errorsExports.cannotSliceBlob();\n  }\n  let urlParams = { name: metadata['fullPath'] };\n  let url = UrlUtils.makeUploadUrl(urlPart);\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, opt_allowed?: string[]): string {\n  let status;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  let allowed = opt_allowed || ['active'];\n  handlerCheck(array.contains(allowed, status));\n  return status as string;\n}\n\nexport function createResumableUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  opt_metadata?: Metadata | null\n): RequestInfo<string> {\n  let urlPart = location.bucketOnlyServerUrl();\n  let metadata = metadataForUpload_(location, blob, opt_metadata);\n  let urlParams = { name: metadata['fullPath'] };\n  let url = UrlUtils.makeUploadUrl(urlPart);\n  let method = 'POST';\n  let headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  let body = MetadataUtils.toResourceString(metadata, mappings);\n  let timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr: XhrIo, text: string): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  authWrapper: AuthWrapper,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  let headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    let status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    let size = parseInt(sizeString, 10);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param opt_status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  authWrapper: AuthWrapper,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  opt_status?: ResumableUploadStatus | null,\n  opt_progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  let status = new ResumableUploadStatus(0, 0);\n  if (opt_status) {\n    status.current = opt_status.current;\n    status.total = opt_status.total;\n  } else {\n    status.current = 0;\n    status.total = blob.size();\n  }\n  if (blob.size() !== status.total) {\n    throw errorsExports.serverFileWrongSize();\n  }\n  let bytesLeft = status.total - status.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  let startByte = status.current;\n  let endByte = startByte + bytesToUpload;\n  let uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  let headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status.current\n  };\n  let body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw errorsExports.cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    let uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    let newCurrent = status.current + bytesToUpload;\n    let size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  let method = 'POST';\n  let timeout = authWrapper.maxUploadRetryTime();\n  let requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = opt_progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/requests.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nimport * as promiseimpl from './promise_external';\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f: Function): Function {\n  return function(...argsToForward: any[]) {\n    promiseimpl.resolve(true).then(function() {\n      f.apply(null, argsToForward);\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/async.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (\n    p1: (success: boolean, ...rest: any[]) => void,\n    canceled: boolean\n  ) => void,\n  callback: Function,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback() {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, arguments);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(function() {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...var_args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n    let mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.apply(null, arguments);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(function() {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id) {\n  id(false);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/backoff.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\nimport * as array from './array';\nimport * as backoff from './backoff';\nimport * as errorsExports from './error';\nimport { FirebaseStorageError } from './error';\nimport { errors } from './error';\nimport * as object from './object';\nimport * as promiseimpl from './promise_external';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport * as XhrIoExports from './xhrio';\nimport { Headers, XhrIo } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\nimport { FirebaseNamespace } from '../../app/firebase_app';\nimport firebase from '../../app';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_: Function | null = null;\n  private reject_: Function | null = null;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    let self = this;\n    this.promise_ = promiseimpl.make(function(resolve, reject) {\n      self.resolve_ = resolve;\n      self.reject_ = reject;\n      self.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_() {\n    let self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: any[]) => void,\n      canceled: boolean\n    ) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      let xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent) {\n        let loaded = progressEvent.loaded;\n        let total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then(function(xhr: XhrIo) {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          let hitServer =\n            xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;\n          let status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            let wasCanceled =\n              xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          let successCode = array.contains(self.successCodes_, status);\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ) {\n      let resolve = self.resolve_ as Function;\n      let reject = self.reject_ as Function;\n      let xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          let result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          let err = errorsExports.unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            let err = self.appDelete_\n              ? errorsExports.appDeleted()\n              : errorsExports.canceled();\n            reject(err);\n          } else {\n            let err = errorsExports.retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    let isFiveHundredCode = status >= 500 && status < 600;\n    let extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    let isExtraRetryCode = array.contains(extraRetryCodes, status);\n    let isRequestSpecificRetryCode = array.contains(\n      this.additionalRetryCodes_,\n      status\n    );\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    opt_canceled?: boolean\n  ) {\n    this.canceled = !!opt_canceled;\n  }\n}\n\nexport function addAuthHeader_(headers: Headers, authToken: string | null) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers) {\n  let number =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  let queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  let url = requestInfo.url + queryPart;\n  let headers = object.clone<Headers>(requestInfo.headers);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/request.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StringFormat } from './storage/implementation/string';\nimport { TaskEvent } from './storage/implementation/taskenums';\nimport { TaskState } from './storage/implementation/taskenums';\nimport { XhrIoPool } from './storage/implementation/xhriopool';\nimport { Reference } from './storage/reference';\nimport { Service } from './storage/service';\nimport firebase from './app';\nimport { FirebaseApp, FirebaseServiceFactory } from './app/firebase_app';\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(app: FirebaseApp, unused: any, opt_url?: string): Service {\n  return new Service(app, new XhrIoPool(), opt_url);\n}\n\nexport function registerStorage(instance) {\n  let namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerService(\n    STORAGE_TYPE,\n    factory as FirebaseServiceFactory,\n    namespaceExports,\n    undefined,\n    // Allow multiple storage instances per app.\n    true\n  );\n}\n\nregisterStorage(firebase);\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain and scheme for API calls.\n */\nexport const domainBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Domain and scheme for object downloads.\n */\nexport const downloadBase: string = 'https://firebasestorage.googleapis.com';\n\n/**\n * Base URL for non-upload calls to the API.\n */\nexport const apiBaseUrl: string = '/v0';\n\n/**\n * Base URL for upload calls to the API.\n */\nexport const apiUploadBaseUrl: string = '/v0';\n\nexport function setDomainBase(domainBase: string) {\n  domainBase = domainBase;\n}\n\nexport const configOption: string = 'storageBucket';\n\n/**\n * 1 minute\n */\nexport const shortMaxOperationRetryTime: number = 1 * 60 * 1000;\n\n/**\n * 2 minutes\n */\nexport const defaultMaxOperationRetryTime: number = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n */\nexport const defaultMaxUploadRetryTime: number = 10 * 60 * 100;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const minSafeInteger: number = -9007199254740991;\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/constants.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport type Headers = { [name: string]: string | number };\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    opt_body?: ArrayBufferView | Blob | string | null,\n    opt_headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: Event) => void): void;\n\n  removeUploadProgressListener(listener: (p1: Event) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/xhrio.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as object from './object';\nimport * as promiseimpl from './promise_external';\nimport * as type from './type';\nimport * as XhrIoExports from './xhrio';\nimport { Headers, XhrIo } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: XhrIoExports.ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;\n    this.sendPromise_ = promiseimpl.make((resolve, reject) => {\n      this.xhr_.addEventListener('abort', event => {\n        this.errorCode_ = XhrIoExports.ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', event => {\n        this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', event => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    opt_body?: ArrayBufferView | Blob | string | null,\n    opt_headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(opt_headers)) {\n      const headers = opt_headers as Headers;\n      object.forEach(headers, (key, val) => {\n        this.xhr_.setRequestHeader(key, val.toString());\n      });\n    }\n    if (type.isDef(opt_body)) {\n      this.xhr_.send(opt_body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): XhrIoExports.ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort() {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: Event) => void) {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: Event) => void) {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/xhrio_network.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/xhriopool.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { errors } from './error';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  fullServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    let encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location = null;\n    let bucketDomain = '([A-Za-z0-9.\\\\-]+)';\n\n    function gsModify(loc: Location) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    let gsPath = '(/(.*))?$';\n    let path = '(/([^?#]*).*)?$';\n    let gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    let gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    let version = 'v[A-Za-z0-9_]+';\n    let httpRegex = new RegExp(\n      '^https?://firebasestorage\\\\.googleapis\\\\.com/' +\n        version +\n        '/b/' +\n        bucketDomain +\n        '/o' +\n        path,\n      'i'\n    );\n    let httpIndices = { bucket: 1, path: 3 };\n    let groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      { regex: httpRegex, indices: httpIndices, postModify: httpModify }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      let group = groups[i];\n      let captures = group.regex.exec(url);\n      if (captures) {\n        let bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/location.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport * as string from './string';\nimport { StringFormat } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, opt_elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (opt_elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (opt_elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      let realBlob = this.data_ as Blob;\n      let sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      let slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...var_args: (string | FbsBlob)[]): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      var blobby: (Blob | Uint8Array | string)[] = var_args.map(function(\n        val: string | FbsBlob\n      ): Blob | Uint8Array | string {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      let uint8Arrays: Uint8Array[] = var_args.map(function(\n        val: string | FbsBlob\n      ): Uint8Array {\n        if (type.isString(val)) {\n          return string.dataFromString(StringFormat.RAW, val as string).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return (val as FbsBlob).data_ as Uint8Array;\n        }\n      });\n      let finalLength = 0;\n      uint8Arrays.forEach(function(array: Uint8Array): void {\n        finalLength += array.byteLength;\n      });\n      let merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach(function(array: Uint8Array) {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/blob.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport type UrlParams = { [name: string]: string };\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n       * Returns the value with which to resolve the request's promise. Only called\n       * if the request is successful. Throw from this function to reject the\n       * returned Request's promise with the thrown error.\n       * Note: The XhrIo passed to this function may be reused after this callback\n       * returns. Do not keep a reference to it in any way.\n       */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/requestinfo.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\ntype NextFn<T> = (value: T) => void;\ntype ErrorFn = (error: Error) => void;\ntype CompleteFn = () => void;\ntype Unsubscribe = () => void;\n\ntype Subscribe<T> = (\n  next: NextFn<T> | { [name: string]: string | null },\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport { NextFn, ErrorFn, CompleteFn, Unsubscribe, Subscribe };\n\n/**\n * @struct\n */\nexport class Observer<T> {\n  next: NextFn<T> | null;\n  error: ErrorFn | null;\n  complete: CompleteFn | null;\n\n  constructor(\n    nextOrObserver: NextFn<T> | { [name: string]: string | null } | null,\n    opt_error?: ErrorFn | null,\n    opt_complete?: CompleteFn | null\n  ) {\n    let asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(opt_error) ||\n      type.isDef(opt_complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = opt_error || null;\n      this.complete = opt_complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/observer.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n\n  get downloadURL(): string | null {\n    if (this.metadata !== null) {\n      let urls = this.metadata['downloadURLs'];\n      if (urls != null && urls[0] != null) {\n        return urls[0];\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/tasksnapshot.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport { FirebaseStorageError } from './implementation/error';\nimport { InternalTaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  NextFn,\n  ErrorFn,\n  CompleteFn,\n  Unsubscribe,\n  Observer\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport * as RequestExports from './implementation/request';\nimport { Subscribe } from './implementation/observer';\nimport { TaskEvent, TaskState } from './implementation/taskenums';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport * as fbsArgs from './implementation/args';\nimport { ArgSpec } from './implementation/args';\nimport * as fbsArray from './implementation/array';\nimport { async as fbsAsync } from './implementation/async';\nimport { errors as fbsErrors } from './implementation/error';\nimport * as errors from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsPromiseimpl from './implementation/promise_external';\nimport { RequestInfo } from './implementation/requestinfo';\nimport * as fbsRequests from './implementation/requests';\nimport * as fbsTaskEnums from './implementation/taskenums';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private authWrapper_: AuthWrapper;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Observer<UploadTaskSnapshot>[] = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<any> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    authWrapper: AuthWrapper,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(errors.Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(errors.Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = fbsPromiseimpl.make((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return (loaded, total) => {\n      this.updateProgress_(sizeBefore + loaded);\n    };\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_() {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void) {\n    this.authWrapper_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_() {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.authWrapper_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_() {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.authWrapper_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_() {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_() {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number) {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState) {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = errors.canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  }\n\n  private completeTransitions_() {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = fbsTaskEnums.taskStateFromInternalTaskState(\n      this.state_\n    );\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver = undefined,\n    error = undefined,\n    completed = undefined\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(_p: any) {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = fbsArgs.nullFunctionSpec(true).validator;\n    const observerValidator = fbsArgs.looseObjectSpec(null, true).validator;\n\n    function nextOrObserverValidator(p: any) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      fbsArgs.stringSpec(typeValidator),\n      fbsArgs.looseObjectSpec(nextOrObserverValidator, true),\n      fbsArgs.nullFunctionSpec(true),\n      fbsArgs.nullFunctionSpec(true)\n    ];\n    fbsArgs.validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver:\n          | NextFn<UploadTaskSnapshot>\n          | { [name: string]: string | null }\n          | null,\n        error?: ErrorFn | null,\n        opt_complete?: CompleteFn | null\n      ) {\n        if (specs !== null) {\n          fbsArgs.validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: any) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      fbsArgs.looseObjectSpec(binderNextOrObserverValidator),\n      fbsArgs.nullFunctionSpec(true),\n      fbsArgs.nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | PromiseLike<U>) | null,\n    onRejected?: ((error: any) => U | PromiseLike<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | PromiseLike<U>,\n      onRejected as ((error: any) => PromiseLike<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | PromiseLike<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>) {\n    fbsArray.remove(this.observers_, observer);\n  }\n\n  private notifyObservers_() {\n    this.finishPromise_();\n    const observers = fbsArray.clone(this.observers_);\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_() {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (fbsTaskEnums.taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as ((p1: Error) => void);\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>) {\n    const externalState = fbsTaskEnums.taskStateFromInternalTaskState(\n      this.state_\n    );\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next !== null) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete !== null) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error !== null) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error !== null) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    fbsArgs.validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    fbsArgs.validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    fbsArgs.validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/task.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { errors } from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as object from './implementation/object';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport * as fbsString from './implementation/string';\nimport { StringFormat } from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Service } from './service';\nimport { UploadTask } from './task';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected authWrapper: AuthWrapper, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    args.validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(authWrapper: AuthWrapper, location: Location): Reference {\n    return new Reference(authWrapper, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    args.validate('child', [args.stringSpec()], arguments);\n    let newPath = path.child(this.location.path, childPath);\n    let location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    let newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    let location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    let location = new Location(this.location.bucket, '');\n    return this.newRef(this.authWrapper, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): Service {\n    return this.authWrapper.service();\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    args.validate(\n      'put',\n      [args.uploadDataSpec(), args.metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param string The string to upload.\n   * @param opt_format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    string: string,\n    format: StringFormat = StringFormat.RAW,\n    opt_metadata?: Metadata\n  ): UploadTask {\n    args.validate(\n      'putString',\n      [\n        args.stringSpec(),\n        args.stringSpec(fbsString.formatValidator, true),\n        args.metadataSpec(true)\n      ],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    let data = fbsString.dataFromString(format, string);\n    let metadata = object.clone<Metadata>(opt_metadata);\n    if (!type.isDef(metadata['contentType']) && type.isDef(data.contentType)) {\n      metadata['contentType'] = data.contentType;\n    }\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadata\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    args.validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.deleteObject(self.authWrapper, self.location);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    args.validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.getMetadata(\n        self.authWrapper,\n        self.location,\n        self.mappings()\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    args.validate('updateMetadata', [args.metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    let self = this;\n    return this.authWrapper.getAuthToken().then(function(authToken) {\n      let requestInfo = requests.updateMetadata(\n        self.authWrapper,\n        self.location,\n        metadata,\n        self.mappings()\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    args.validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.getMetadata().then(function(metadata) {\n      let url = (metadata['downloadURLs'] as string[])[0];\n      if (type.isDef(url)) {\n        return url;\n      } else {\n        throw errorsExports.noDownloadURL();\n      }\n    });\n  }\n\n  private throwIfRoot_(name: string) {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/reference.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport * as promiseimpl from './promise_external';\nimport * as RequestExports from './request';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = promiseimpl.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise() {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete = false) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/failrequest.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as object from './object';\nimport * as RequestExports from './request';\nimport { Request } from './request';\nimport * as constants from './constants';\n\n/**\n * @struct\n */\nexport class RequestMap {\n  private map_: { [key: number]: Request<any> } = {};\n  private id_: number;\n\n  constructor() {\n    this.id_ = constants.minSafeInteger;\n  }\n\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   * @param r The request to register.\n   */\n  addRequest(r: Request<any>) {\n    let id = this.id_;\n    this.id_++;\n    this.map_[id] = r;\n    let self = this;\n\n    function unmap() {\n      delete self.map_[id];\n    }\n    r.getPromise().then(unmap, unmap);\n  }\n\n  /**\n   * Cancels all registered requests.\n   */\n  clear() {\n    object.forEach(this.map_, (key: string, val: Request<any>) => {\n      if (val) {\n        val.cancel(true);\n      }\n    });\n    this.map_ = {};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/requestmap.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Reference } from '../reference';\nimport { Service } from '../service';\nimport * as constants from './constants';\nimport * as errorsExports from './error';\nimport { errors } from './error';\nimport { FailRequest } from './failrequest';\nimport { Location } from './location';\nimport * as promiseimpl from './promise_external';\nimport { Request } from './request';\nimport { RequestInfo } from './requestinfo';\nimport { requestMaker } from './requestmaker';\nimport { RequestMap } from './requestmap';\nimport * as type from './type';\nimport { XhrIoPool } from './xhriopool';\nimport { FirebaseApp, FirebaseAuthTokenData } from '../../app/firebase_app';\n\n/**\n * @param app If null, getAuthToken always resolves with null.\n * @param service The storage service associated with this auth wrapper.\n *     Untyped to avoid circular type dependencies.\n * @struct\n */\nexport class AuthWrapper {\n  private app_: FirebaseApp | null;\n  private bucket_: string | null = null;\n\n  /**\n  maker\n     */\n  private storageRefMaker_: (p1: AuthWrapper, p2: Location) => Reference;\n  private requestMaker_: requestMaker;\n  private pool_: XhrIoPool;\n  private service_: Service;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n  private requestMap_: RequestMap;\n  private deleted_: boolean = false;\n\n  constructor(\n    app: FirebaseApp | null,\n    maker: (p1: AuthWrapper, p2: Location) => Reference,\n    requestMaker: requestMaker,\n    service: Service,\n    pool: XhrIoPool\n  ) {\n    this.app_ = app;\n    if (this.app_ !== null) {\n      let options = this.app_.options;\n      if (type.isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n      }\n    }\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = constants.defaultMaxOperationRetryTime;\n    this.maxUploadRetryTime_ = constants.defaultMaxUploadRetryTime;\n    this.requestMap_ = new RequestMap();\n  }\n\n  private static extractBucket_(config: {\n    [prop: string]: any;\n  }): string | null {\n    let bucketString = config[constants.configOption] || null;\n    if (bucketString == null) {\n      return null;\n    }\n    let loc: Location = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  }\n\n  getAuthToken(): Promise<string | null> {\n    // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\n    // (b/28673818).\n    if (\n      this.app_ !== null &&\n      type.isDef(this.app_.INTERNAL) &&\n      type.isDef(this.app_.INTERNAL.getToken)\n    ) {\n      return this.app_.INTERNAL.getToken().then(\n        function(response: FirebaseAuthTokenData | null): string | null {\n          if (response !== null) {\n            return response.accessToken;\n          } else {\n            return null;\n          }\n        },\n        function(_error) {\n          return null;\n        }\n      );\n    } else {\n      return promiseimpl.resolve(null) as Promise<string | null>;\n    }\n  }\n\n  bucket(): string | null {\n    if (this.deleted_) {\n      throw errorsExports.appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  }\n\n  /**\n   * The service associated with this auth wrapper. Untyped to avoid circular\n   * type dependencies.\n   */\n  service(): Service {\n    return this.service_;\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\n   * at the given Location.\n   * @param loc The Location.\n   * @return Actually a firebaseStorage.Reference, typing not allowed\n   *     because of circular dependency problems.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return this.storageRefMaker_(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      let request = this.requestMaker_(requestInfo, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp() {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  }\n\n  maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    this.maxUploadRetryTime_ = time;\n  }\n\n  maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    this.maxOperationRetryTime_ = time;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/implementation/authwrapper.ts","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { Location } from './implementation/location';\nimport * as fbsPromiseImpl from './implementation/promise_external';\nimport * as RequestExports from './implementation/request';\nimport { Request } from './implementation/request';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\nimport { FirebaseApp } from '../app/firebase_app';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class Service {\n  authWrapper_: AuthWrapper;\n  private app_: FirebaseApp;\n  private bucket_: Location | null = null;\n  private internals_: ServiceInternals;\n\n  constructor(app: FirebaseApp, pool: XhrIoPool, url?: string) {\n    function maker(authWrapper: AuthWrapper, loc: Location) {\n      return new Reference(authWrapper, loc);\n    }\n    this.authWrapper_ = new AuthWrapper(\n      app,\n      maker,\n      RequestExports.makeRequest,\n      this,\n      pool\n    );\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      const authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: string) {\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    let ref = new Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: string) {\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.authWrapper_.maxUploadRetryTime();\n  }\n\n  setMaxUploadRetryTime(time: number) {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.authWrapper_.maxOperationRetryTime();\n  }\n\n  setMaxOperationRetryTime(time: number) {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: Service;\n\n  constructor(service: Service) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  delete(): Promise<void> {\n    this.service_.authWrapper_.deleteApp();\n    return fbsPromiseImpl.resolve<void>(undefined);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage/service.ts"]}