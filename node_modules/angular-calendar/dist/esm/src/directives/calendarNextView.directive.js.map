{"version":3,"sources":["../../../../src/directives/calendarNextView.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EACN,YAAY,EACb,MAAM,eAAA,CAAgB;AACvB,OAAO,OAAA,MAAa,mBAAA,CAAoB;AACxC,OAAO,QAAA,MAAc,oBAAA,CAAqB;AAC1C,OAAO,SAAA,MAAe,qBAAA,CAAsB;AAE5C;;;;;;;;;;;GAWG;AAEH;IAAA;QAWE;;WAEG;QACF,mBAAc,GAAuB,IAAI,YAAY,EAAE,CAAC;IA6B3D,CAAC;IA3BC;;OAEG;IAEH,2CAAO,GAAP;QACE,IAAM,KAAK,GAAQ;YACjB,GAAG,EAAE,OAAO;YACZ,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,SAAS;SACjB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,uBAAuB;iBAClC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,wCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACrC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;KACtD,CAAC;IACF,gCAAC;CA3CD,AA2CC,IAAA;SA3CY,yBAAyB","file":"calendarNextView.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport addDays from 'date-fns/add_days';\nimport addWeeks from 'date-fns/add_weeks';\nimport addMonths from 'date-fns/add_months';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n   view: string;\n\n  /**\n   * The current view date\n   */\n   viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n   viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  \n  onClick(): void {\n    const addFn: any = {\n      day: addDays,\n      week: addWeeks,\n      month: addMonths\n    }[this.view];\n\n    this.viewDateChange.emit(addFn(this.viewDate, 1));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mwlCalendarNextView]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'view': [{ type: Input },],\n'viewDate': [{ type: Input },],\n'viewDateChange': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}